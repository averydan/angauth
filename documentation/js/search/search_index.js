var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.2',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/interceptors/ApiPrefixInterceptor.html', [0, 1.652, 1, 1.652]],
      [
        'body/interceptors/ApiPrefixInterceptor.html',
        [
          0,
          1.997,
          1,
          2.561,
          2,
          0.236,
          3,
          0.202,
          4,
          0.169,
          5,
          5.85,
          6,
          4.134,
          7,
          2.328,
          8,
          5.3,
          9,
          3.91,
          10,
          5.85,
          11,
          0.423,
          12,
          1.17,
          13,
          4.96,
          14,
          1.208,
          15,
          0.954,
          16,
          4.134,
          17,
          3.505,
          18,
          3.781,
          19,
          3.585,
          20,
          3.781,
          21,
          4.134,
          22,
          0.974,
          23,
          0.025,
          24,
          0.693,
          25,
          0.464,
          26,
          0.798,
          27,
          1.17,
          28,
          3.044,
          29,
          0.693,
          30,
          2.533,
          31,
          3.248,
          32,
          1.737,
          33,
          1.023,
          34,
          0.464,
          35,
          2.533,
          36,
          3.505,
          37,
          1.997,
          38,
          0.236,
          39,
          0.345,
          40,
          1.257,
          41,
          4.134,
          42,
          2.781,
          43,
          4.134,
          44,
          4.134,
          45,
          0.018,
          46,
          0.018
        ]
      ],
      ['title/components/AppComponent.html', [47, 0.532, 48, 1.04]],
      [
        'body/components/AppComponent.html',
        [
          2,
          0.219,
          3,
          0.187,
          4,
          0.156,
          11,
          0.392,
          15,
          0.69,
          23,
          0.024,
          24,
          0.946,
          25,
          0.43,
          29,
          0.43,
          34,
          0.43,
          38,
          0.219,
          39,
          0.32,
          45,
          0.018,
          46,
          0.018,
          47,
          0.97,
          48,
          1.823,
          49,
          1.507,
          50,
          1.507,
          51,
          1.507,
          52,
          3.25,
          53,
          1.507,
          54,
          2.709,
          55,
          2.549,
          56,
          4.278,
          57,
          2.271,
          58,
          5.046,
          59,
          2.12,
          60,
          5.046,
          61,
          1.352,
          62,
          5.082,
          63,
          1.44,
          64,
          1.411,
          65,
          1.411,
          66,
          3.833,
          67,
          1.027,
          68,
          1.858,
          69,
          1.983,
          70,
          1.858,
          71,
          2.356,
          72,
          1.507,
          73,
          1.507,
          74,
          1.166,
          75,
          1.507,
          76,
          1.983,
          77,
          1.166,
          78,
          1.507,
          79,
          1.166,
          80,
          1.507,
          81,
          1.507,
          82,
          1.166,
          83,
          1.166,
          84,
          1.507,
          85,
          0.846,
          86,
          1.507,
          87,
          1.166,
          88,
          1.507,
          89,
          1.166,
          90,
          1.507,
          91,
          1.166,
          92,
          1.507,
          93,
          1.166,
          94,
          1.507,
          95,
          1.166,
          96,
          1.507,
          97,
          1.507
        ]
      ],
      ['title/modules/AppModule.html', [98, 0.916, 99, 2.3]],
      [
        'body/modules/AppModule.html',
        [
          2,
          0.206,
          3,
          0.176,
          4,
          0.147,
          23,
          0.025,
          29,
          0.775,
          32,
          1.515,
          34,
          0.405,
          38,
          0.277,
          39,
          0.301,
          45,
          0.017,
          46,
          0.017,
          48,
          2.065,
          67,
          0.966,
          98,
          1.298,
          99,
          4.534,
          100,
          1.328,
          101,
          1.664,
          102,
          3.045,
          103,
          1.877,
          104,
          3.057,
          105,
          3.057,
          106,
          3.057,
          107,
          3.057,
          108,
          3.852,
          109,
          3.539,
          110,
          2.728,
          111,
          1.877,
          112,
          1.877,
          113,
          3.606,
          114,
          3.057,
          115,
          2.969,
          116,
          1.877,
          117,
          4.108,
          118,
          2.969,
          119,
          4.845,
          120,
          3.622,
          121,
          2.21,
          122,
          4.845,
          123,
          3.606,
          124,
          2.21,
          125,
          1.168,
          126,
          2.425,
          127,
          2.03,
          128,
          2.21,
          129,
          3.606,
          130,
          3.606,
          131,
          3.606,
          132,
          2.425,
          133,
          3.057,
          134,
          4.845,
          135,
          4.845,
          136,
          4.845,
          137,
          4.845,
          138,
          4.845,
          139,
          4.845,
          140,
          3.057,
          141,
          3.057,
          142,
          3.606
        ]
      ],
      ['title/guards/AuthenticationGuard.html', [143, 2.556, 144, 2.556]],
      [
        'body/guards/AuthenticationGuard.html',
        [
          2,
          0.244,
          3,
          0.209,
          4,
          0.175,
          11,
          0.438,
          12,
          1.196,
          14,
          1.119,
          15,
          0.976,
          22,
          1.009,
          23,
          0.025,
          24,
          0.717,
          25,
          0.481,
          26,
          0.826,
          27,
          1.313,
          29,
          0.668,
          33,
          1.046,
          34,
          0.481,
          38,
          0.244,
          39,
          0.357,
          40,
          1.301,
          45,
          0.019,
          46,
          0.019,
          125,
          1.386,
          143,
          3.199,
          144,
          4.05,
          145,
          4.28,
          146,
          6.587,
          147,
          2.227,
          148,
          3.428,
          149,
          3.232,
          150,
          4.28,
          151,
          4.28,
          152,
          2.618,
          153,
          4.28,
          154,
          2.129,
          155,
          4.28,
          156,
          2.438,
          157,
          4.28,
          158,
          2.41,
          159,
          4.28,
          160,
          3.199,
          161,
          3.199,
          162,
          2.41
        ]
      ],
      ['title/modules/AuthenticationModule.html', [98, 0.916, 163, 2.3]],
      [
        'body/modules/AuthenticationModule.html',
        [
          2,
          0.221,
          3,
          0.189,
          4,
          0.157,
          23,
          0.025,
          29,
          0.77,
          34,
          0.434,
          38,
          0.29,
          39,
          0.322,
          45,
          0.018,
          46,
          0.018,
          67,
          1.034,
          89,
          1.949,
          91,
          1.949,
          93,
          1.949,
          98,
          1.358,
          100,
          1.422,
          101,
          1.722,
          102,
          2.639,
          103,
          2.009,
          109,
          3.608,
          110,
          2.855,
          111,
          2.009,
          112,
          2.009,
          115,
          3.107,
          116,
          2.009,
          118,
          3.107,
          124,
          2.366,
          125,
          1.251,
          126,
          3.411,
          127,
          2.174,
          128,
          2.366,
          133,
          3.274,
          163,
          4.615,
          164,
          3.274,
          165,
          3.274,
          166,
          3.861,
          167,
          3.861,
          168,
          4.299,
          169,
          3.79,
          170,
          2.174,
          171,
          3.861,
          172,
          3.861,
          173,
          3.861,
          174,
          3.861,
          175,
          3.861,
          176,
          3.861,
          177,
          3.861
        ]
      ],
      ['title/injectables/AuthenticationService.html', [33, 0.66, 149, 1.652]],
      [
        'body/injectables/AuthenticationService.html',
        [
          2,
          0.126,
          3,
          0.107,
          4,
          0.09,
          7,
          1.239,
          11,
          0.225,
          12,
          1.026,
          14,
          0.7,
          15,
          1.076,
          22,
          1.095,
          23,
          0.025,
          24,
          0.779,
          25,
          0.564,
          26,
          0.897,
          27,
          1.458,
          28,
          2.968,
          29,
          0.564,
          32,
          0.924,
          33,
          0.798,
          34,
          0.247,
          37,
          1.063,
          38,
          0.126,
          39,
          0.184,
          40,
          1.031,
          45,
          0.012,
          46,
          0.012,
          61,
          0.908,
          63,
          1.181,
          64,
          0.81,
          65,
          0.81,
          103,
          1.764,
          112,
          2.418,
          149,
          1.638,
          152,
          1.998,
          154,
          2.242,
          156,
          2.258,
          158,
          3.211,
          178,
          1.645,
          179,
          2.874,
          180,
          3.39,
          181,
          2.814,
          182,
          0.799,
          183,
          3.39,
          184,
          3.39,
          185,
          2.28,
          186,
          3.39,
          187,
          4.647,
          188,
          1.861,
          189,
          4.647,
          190,
          3.506,
          191,
          4.647,
          192,
          3.39,
          193,
          3.506,
          194,
          2.874,
          195,
          2.535,
          196,
          1.645,
          197,
          2.385,
          198,
          2.875,
          199,
          3.39,
          200,
          2.2,
          201,
          3.39,
          202,
          2.896,
          203,
          2.2,
          204,
          4.136,
          205,
          2.2,
          206,
          3.939,
          207,
          2.2,
          208,
          4.647,
          209,
          2.874,
          210,
          3.39,
          211,
          3.39,
          212,
          5.066,
          213,
          2.2,
          214,
          2.874,
          215,
          1.645,
          216,
          0.81,
          217,
          2.2,
          218,
          4.136,
          219,
          2.2,
          220,
          4.09,
          221,
          2.2,
          222,
          1.525,
          223,
          3.506,
          224,
          2.2,
          225,
          2.2,
          226,
          2.874,
          227,
          2.2,
          228,
          2.2,
          229,
          4.136,
          230,
          2.535,
          231,
          2.534,
          232,
          1.239,
          233,
          1.645,
          234,
          1.645,
          235,
          1.525,
          236,
          2.28,
          237,
          3.39,
          238,
          2.2,
          239,
          4.136,
          240,
          2.2,
          241,
          2.2,
          242,
          2.874,
          243,
          2.874,
          244,
          2.2,
          245,
          2.874,
          246,
          2.2,
          247,
          1.865,
          248,
          2.2,
          249,
          2.2,
          250,
          2.2,
          251,
          2.2,
          252,
          1.348,
          253,
          2.2,
          254,
          3.39,
          255,
          2.2,
          256,
          2.2,
          257,
          2.2,
          258,
          2.2,
          259,
          2.2,
          260,
          1.865
        ]
      ],
      ['title/injectables/BaseAPIClass.html', [33, 0.66, 261, 2.3]],
      [
        'body/injectables/BaseAPIClass.html',
        [
          2,
          0.143,
          3,
          0.122,
          4,
          0.102,
          11,
          0.458,
          12,
          0.824,
          14,
          0.516,
          15,
          1.068,
          22,
          1.312,
          23,
          0.025,
          24,
          0.934,
          25,
          0.648,
          26,
          1.075,
          27,
          1.47,
          28,
          3.34,
          29,
          0.557,
          32,
          1.05,
          33,
          0.863,
          34,
          0.281,
          37,
          1.208,
          38,
          0.143,
          39,
          0.209,
          45,
          0.013,
          46,
          0.013,
          61,
          1.001,
          63,
          1.812,
          196,
          1.869,
          197,
          2.506,
          206,
          4.205,
          215,
          2.792,
          220,
          2.512,
          231,
          1.869,
          232,
          1.407,
          235,
          1.68,
          242,
          3.166,
          243,
          4.722,
          245,
          4.722,
          261,
          2.512,
          262,
          2.119,
          263,
          4.96,
          264,
          3.166,
          265,
          3.166,
          266,
          4.96,
          267,
          3.735,
          268,
          3.735,
          269,
          3.735,
          270,
          3.735,
          271,
          3.735,
          272,
          2.5,
          273,
          3.735,
          274,
          2.5,
          275,
          3.007,
          276,
          2.5,
          277,
          3.735,
          278,
          2.5,
          279,
          5.569,
          280,
          3.735,
          281,
          2.5,
          282,
          3.735,
          283,
          2.5,
          284,
          2.5,
          285,
          2.119,
          286,
          5.934,
          287,
          3.735,
          288,
          3.735,
          289,
          4.96,
          290,
          3.336,
          291,
          3.735,
          292,
          4.96,
          293,
          3.166,
          294,
          3.735,
          295,
          3.735,
          296,
          3.735,
          297,
          4.205,
          298,
          3.735,
          299,
          2.5,
          300,
          2.5,
          301,
          2.5,
          302,
          2.5,
          303,
          2.5,
          304,
          2.5
        ]
      ],
      ['title/components/BlankComponent.html', [47, 0.532, 74, 1.04]],
      [
        'body/components/BlankComponent.html',
        [
          2,
          0.231,
          3,
          0.197,
          4,
          0.165,
          23,
          0.024,
          24,
          0.97,
          29,
          0.454,
          34,
          0.454,
          38,
          0.231,
          39,
          0.337,
          45,
          0.018,
          46,
          0.018,
          47,
          0.986,
          48,
          1.228,
          49,
          1.587,
          50,
          1.587,
          51,
          1.587,
          53,
          1.587,
          54,
          2.728,
          55,
          2.543,
          57,
          1.817,
          59,
          2.194,
          67,
          1.082,
          68,
          1.922,
          69,
          2.052,
          70,
          1.922,
          71,
          2.404,
          72,
          1.587,
          73,
          1.587,
          74,
          1.86,
          75,
          2.274,
          76,
          2.052,
          77,
          1.228,
          78,
          1.587,
          79,
          1.228,
          80,
          1.587,
          81,
          1.587,
          82,
          1.228,
          83,
          1.228,
          84,
          1.587,
          85,
          0.892,
          86,
          1.587,
          87,
          1.228,
          88,
          1.587,
          89,
          1.228,
          90,
          1.587,
          91,
          1.228,
          92,
          1.587,
          93,
          1.228,
          94,
          1.587,
          95,
          1.228,
          96,
          1.587,
          97,
          1.587,
          305,
          3.424,
          306,
          3.903,
          307,
          5.221
        ]
      ],
      ['title/components/BreadcrumbComponent.html', [47, 0.532, 77, 1.04]],
      [
        'body/components/BreadcrumbComponent.html',
        [
          2,
          0.173,
          3,
          0.148,
          4,
          0.123,
          11,
          0.309,
          12,
          0.946,
          14,
          0.885,
          15,
          0.977,
          22,
          0.712,
          23,
          0.025,
          24,
          0.909,
          25,
          0.56,
          26,
          0.583,
          27,
          0.946,
          29,
          0.609,
          34,
          0.339,
          38,
          0.173,
          39,
          0.252,
          40,
          1.303,
          45,
          0.015,
          46,
          0.015,
          47,
          0.892,
          48,
          0.918,
          49,
          1.187,
          50,
          1.187,
          51,
          1.187,
          53,
          1.187,
          54,
          2.611,
          55,
          2.426,
          57,
          1.929,
          59,
          1.801,
          61,
          1.148,
          62,
          4.598,
          67,
          0.809,
          68,
          1.578,
          69,
          1.685,
          70,
          1.578,
          71,
          2.132,
          72,
          1.187,
          73,
          1.187,
          74,
          0.918,
          75,
          1.187,
          76,
          1.685,
          77,
          1.649,
          78,
          1.187,
          79,
          0.918,
          80,
          1.187,
          81,
          1.187,
          82,
          0.918,
          83,
          0.918,
          84,
          1.187,
          85,
          0.667,
          86,
          1.187,
          87,
          0.918,
          88,
          1.187,
          89,
          0.918,
          90,
          1.187,
          91,
          0.918,
          92,
          1.187,
          93,
          0.918,
          94,
          1.187,
          95,
          0.918,
          96,
          1.187,
          97,
          1.187,
          120,
          2.258,
          121,
          1.851,
          125,
          0.978,
          147,
          1.572,
          148,
          3.096,
          154,
          1.959,
          216,
          1.112,
          231,
          3.204,
          232,
          1.701,
          252,
          1.851,
          306,
          3.725,
          308,
          2.561,
          309,
          2.806,
          310,
          4.287,
          311,
          4.287,
          312,
          4.287,
          313,
          5.424,
          314,
          3.054,
          315,
          3.648,
          316,
          6.12,
          317,
          4.983,
          318,
          4.287,
          319,
          3.02,
          320,
          3.02,
          321,
          3.634,
          322,
          2.561,
          323,
          3.02,
          324,
          3.02,
          325,
          3.02,
          326,
          3.634,
          327,
          1.851,
          328,
          3.02,
          329,
          3.02,
          330,
          4.287,
          331,
          3.204,
          332,
          3.02,
          333,
          3.02,
          334,
          3.02,
          335,
          3.02,
          336,
          3.02,
          337,
          3.02,
          338,
          3.02,
          339,
          3.02
        ]
      ],
      ['title/components/ButtonLoaderComponent.html', [47, 0.532, 79, 1.04]],
      [
        'body/components/ButtonLoaderComponent.html',
        [
          2,
          0.197,
          3,
          0.169,
          4,
          0.141,
          11,
          0.354,
          12,
          1.039,
          14,
          1.106,
          15,
          1.035,
          23,
          0.024,
          24,
          0.898,
          25,
          0.529,
          27,
          0.763,
          29,
          0.388,
          34,
          0.388,
          38,
          0.197,
          39,
          0.288,
          40,
          1.432,
          45,
          0.016,
          46,
          0.016,
          47,
          0.937,
          48,
          1.051,
          49,
          1.358,
          50,
          1.358,
          51,
          1.358,
          53,
          1.358,
          54,
          2.668,
          55,
          2.483,
          57,
          2.118,
          59,
          1.978,
          63,
          1.344,
          67,
          0.926,
          68,
          1.733,
          69,
          1.85,
          70,
          1.733,
          71,
          2.26,
          72,
          1.358,
          73,
          1.358,
          74,
          1.051,
          75,
          1.358,
          76,
          1.85,
          77,
          1.051,
          78,
          1.358,
          79,
          1.748,
          80,
          2.496,
          81,
          1.358,
          82,
          1.051,
          83,
          1.051,
          84,
          1.358,
          85,
          0.763,
          86,
          1.358,
          87,
          1.051,
          88,
          1.358,
          89,
          1.051,
          90,
          1.358,
          91,
          1.051,
          92,
          1.358,
          93,
          1.051,
          94,
          1.358,
          95,
          1.051,
          96,
          1.358,
          97,
          1.358,
          152,
          2.275,
          216,
          1.272,
          309,
          3.015,
          314,
          3.237,
          315,
          4.046,
          340,
          5.1,
          341,
          5.1,
          342,
          2.93,
          343,
          3.992,
          344,
          4.708,
          345,
          4.708,
          346,
          4.003,
          347,
          6.016,
          348,
          4.708,
          349,
          3.456,
          350,
          3.456
        ]
      ],
      ['title/modules/CoreModule.html', [98, 0.916, 108, 2.095]],
      [
        'body/modules/CoreModule.html',
        [
          1,
          3.164,
          2,
          0.197,
          3,
          0.168,
          4,
          0.14,
          23,
          0.025,
          29,
          0.744,
          32,
          1.446,
          34,
          0.386,
          38,
          0.268,
          39,
          0.287,
          45,
          0.016,
          46,
          0.016,
          67,
          0.922,
          98,
          1.258,
          100,
          1.267,
          101,
          1.427,
          102,
          1.791,
          103,
          3.226,
          108,
          4.279,
          110,
          2.643,
          111,
          1.791,
          112,
          1.791,
          115,
          2.877,
          116,
          1.791,
          117,
          3.98,
          118,
          2.877,
          124,
          2.877,
          125,
          1.115,
          144,
          3.509,
          149,
          2.995,
          156,
          1.548,
          197,
          2.112,
          198,
          3.226,
          233,
          2.572,
          234,
          2.572,
          351,
          2.917,
          352,
          2.917,
          353,
          3.226,
          354,
          3.226,
          355,
          3.799,
          356,
          3.799,
          357,
          3.441,
          358,
          2.877,
          359,
          3.98,
          360,
          3.441,
          361,
          2.443,
          362,
          3.441,
          363,
          3.157,
          364,
          3.441,
          365,
          2.572,
          366,
          2.917,
          367,
          2.917,
          368,
          5.343,
          369,
          3.441
        ]
      ],
      ['title/interfaces/Credentials.html', [181, 1.437, 182, 0.806]],
      [
        'body/interfaces/Credentials.html',
        [
          2,
          0.241,
          3,
          0.206,
          4,
          0.172,
          11,
          0.431,
          23,
          0.025,
          25,
          0.663,
          38,
          0.355,
          45,
          0.019,
          46,
          0.019,
          61,
          1.437,
          63,
          2.013,
          101,
          1.281,
          152,
          2.034,
          158,
          2.371,
          181,
          2.253,
          182,
          1.512,
          195,
          3.807,
          202,
          3.036,
          370,
          2.581,
          371,
          4.179,
          372,
          2.371,
          373,
          2.371,
          374,
          3.02,
          375,
          3.02,
          376,
          2.371,
          377,
          2.791,
          378,
          2.833,
          379,
          2.833,
          380,
          2.833,
          381,
          2.833,
          382,
          2.833,
          383,
          2.833,
          384,
          2.833,
          385,
          3.616,
          386,
          2.833,
          387,
          2.833,
          388,
          2.833
        ]
      ],
      ['title/components/DashboardComponent.html', [47, 0.532, 82, 1.04]],
      [
        'body/components/DashboardComponent.html',
        [
          2,
          0.23,
          3,
          0.196,
          4,
          0.164,
          14,
          1.192,
          15,
          0.724,
          23,
          0.024,
          24,
          0.968,
          29,
          0.451,
          34,
          0.451,
          38,
          0.23,
          39,
          0.335,
          45,
          0.018,
          46,
          0.018,
          47,
          0.985,
          48,
          1.222,
          49,
          1.579,
          50,
          1.579,
          51,
          1.579,
          53,
          1.579,
          54,
          2.696,
          55,
          2.508,
          57,
          2.342,
          59,
          2.186,
          67,
          1.077,
          68,
          1.916,
          69,
          2.045,
          70,
          1.916,
          71,
          2.399,
          72,
          1.579,
          73,
          1.579,
          74,
          1.222,
          75,
          1.579,
          76,
          2.045,
          77,
          1.222,
          78,
          1.579,
          79,
          1.222,
          80,
          1.579,
          81,
          1.579,
          82,
          1.856,
          83,
          1.222,
          84,
          1.579,
          85,
          0.887,
          86,
          1.579,
          87,
          1.222,
          88,
          1.579,
          89,
          1.222,
          90,
          1.579,
          91,
          1.222,
          92,
          1.579,
          93,
          1.222,
          94,
          1.579,
          95,
          1.222,
          96,
          1.579,
          97,
          1.579,
          389,
          3.407,
          390,
          5.204,
          391,
          5.204,
          392,
          4.019,
          393,
          5.204
        ]
      ],
      ['title/modules/DashboardModule.html', [98, 0.916, 394, 2.3]],
      [
        'body/modules/DashboardModule.html',
        [
          2,
          0.247,
          3,
          0.211,
          4,
          0.176,
          23,
          0.025,
          29,
          0.762,
          34,
          0.486,
          38,
          0.312,
          39,
          0.361,
          45,
          0.019,
          46,
          0.019,
          67,
          1.159,
          82,
          2.008,
          98,
          1.462,
          100,
          1.593,
          101,
          1.817,
          102,
          2.839,
          103,
          2.252,
          110,
          3.072,
          111,
          2.252,
          112,
          2.252,
          115,
          3.343,
          116,
          2.252,
          118,
          3.343,
          124,
          2.651,
          125,
          1.402,
          126,
          3.67,
          127,
          2.436,
          128,
          2.651,
          169,
          4.078,
          170,
          2.436,
          394,
          4.443,
          395,
          3.668,
          396,
          3.668,
          397,
          4.327,
          398,
          4.327,
          399,
          4.327,
          400,
          4.327,
          401,
          4.327
        ]
      ],
      [
        'title/interceptors/ErrorHandlerInterceptor.html',
        [0, 1.652, 353, 1.779]
      ],
      [
        'body/interceptors/ErrorHandlerInterceptor.html',
        [
          0,
          1.462,
          2,
          0.173,
          3,
          0.148,
          4,
          0.123,
          7,
          1.704,
          9,
          3.327,
          11,
          0.31,
          12,
          0.948,
          13,
          4.229,
          14,
          0.887,
          15,
          0.898,
          17,
          2.565,
          18,
          3.327,
          19,
          3.327,
          20,
          3.327,
          22,
          1.176,
          23,
          0.025,
          24,
          0.836,
          25,
          0.56,
          26,
          0.963,
          27,
          1.101,
          28,
          2.983,
          29,
          0.703,
          30,
          1.854,
          31,
          2.631,
          32,
          1.271,
          33,
          0.829,
          34,
          0.34,
          35,
          1.854,
          36,
          2.565,
          37,
          1.462,
          38,
          0.173,
          39,
          0.252,
          40,
          0.92,
          45,
          0.015,
          46,
          0.015,
          63,
          0.864,
          64,
          1.837,
          85,
          1.265,
          125,
          0.98,
          147,
          1.575,
          148,
          3.098,
          154,
          2.34,
          156,
          1.362,
          160,
          2.262,
          161,
          2.262,
          181,
          1.271,
          198,
          3.187,
          232,
          1.704,
          233,
          2.262,
          234,
          2.262,
          235,
          1.931,
          236,
          2.035,
          260,
          2.565,
          353,
          2.234,
          354,
          3.187,
          367,
          2.565,
          402,
          4.058,
          403,
          2.262,
          404,
          3.639,
          405,
          3.355,
          406,
          4.989,
          407,
          3.026,
          408,
          3.026,
          409,
          5.429,
          410,
          3.026,
          411,
          5.732,
          412,
          3.026,
          413,
          3.026,
          414,
          2.035,
          415,
          3.026,
          416,
          3.026,
          417,
          3.026,
          418,
          2.035,
          419,
          1.704,
          420,
          4.293,
          421,
          3.026,
          422,
          3.026,
          423,
          3.026,
          424,
          3.026,
          425,
          3.026,
          426,
          3.026,
          427,
          4.293,
          428,
          3.026,
          429,
          2.565,
          430,
          4.293,
          431,
          3.026,
          432,
          3.026,
          433,
          3.026,
          434,
          3.026,
          435,
          3.026,
          436,
          3.026
        ]
      ],
      ['title/interfaces/ErrorMessageObject.html', [182, 0.806, 437, 2.3]],
      [
        'body/interfaces/ErrorMessageObject.html',
        [
          2,
          0.257,
          3,
          0.22,
          4,
          0.183,
          11,
          0.46,
          23,
          0.024,
          25,
          0.767,
          38,
          0.319,
          45,
          0.019,
          46,
          0.019,
          61,
          1.498,
          63,
          1.991,
          85,
          1.445,
          101,
          1.368,
          182,
          1.433,
          275,
          4.28,
          372,
          2.533,
          437,
          3.761,
          438,
          3.363,
          439,
          4.756,
          440,
          5.394,
          441,
          3.814,
          442,
          3.026,
          443,
          3.814,
          444,
          3.814,
          445,
          3.814
        ]
      ],
      ['title/injectables/ErrorMessageService.html', [33, 0.66, 354, 1.779]],
      [
        'body/injectables/ErrorMessageService.html',
        [
          2,
          0.207,
          3,
          0.177,
          4,
          0.148,
          11,
          0.372,
          12,
          1.075,
          14,
          1.134,
          15,
          1.134,
          22,
          0.856,
          23,
          0.025,
          24,
          0.609,
          25,
          0.722,
          26,
          0.701,
          27,
          1.212,
          29,
          0.408,
          33,
          1.06,
          34,
          0.408,
          38,
          0.207,
          39,
          0.303,
          45,
          0.017,
          46,
          0.017,
          61,
          1.304,
          63,
          1.89,
          64,
          1.792,
          65,
          1.792,
          85,
          1.477,
          154,
          2.158,
          188,
          2.98,
          194,
          4.127,
          209,
          4.974,
          214,
          4.127,
          216,
          1.792,
          222,
          2.19,
          223,
          4.655,
          275,
          2.442,
          354,
          2.533,
          439,
          4.573,
          446,
          5.454,
          447,
          3.078,
          448,
          5.867,
          449,
          4.868,
          450,
          3.631,
          451,
          4.868,
          452,
          3.631,
          453,
          4.974,
          454,
          3.631,
          455,
          3.631,
          456,
          3.631,
          457,
          4.868,
          458,
          3.631,
          459,
          3.631,
          460,
          3.631,
          461,
          4.868
        ]
      ],
      [
        'title/components/FormErrorWrapperComponent.html',
        [47, 0.532, 83, 1.04]
      ],
      [
        'body/components/FormErrorWrapperComponent.html',
        [
          2,
          0.124,
          3,
          0.106,
          4,
          0.089,
          11,
          0.223,
          12,
          0.742,
          14,
          0.45,
          15,
          1.123,
          22,
          0.792,
          23,
          0.025,
          24,
          0.837,
          25,
          0.669,
          26,
          0.649,
          27,
          1.215,
          29,
          0.377,
          34,
          0.244,
          38,
          0.124,
          39,
          0.182,
          40,
          1.022,
          45,
          0.012,
          46,
          0.012,
          47,
          0.778,
          48,
          0.662,
          49,
          0.855,
          50,
          0.855,
          51,
          0.855,
          53,
          0.855,
          54,
          2.45,
          55,
          2.266,
          59,
          1.412,
          61,
          0.901,
          63,
          1.847,
          64,
          0.801,
          65,
          0.801,
          67,
          0.583,
          68,
          1.238,
          69,
          1.321,
          70,
          1.238,
          71,
          1.816,
          72,
          0.855,
          73,
          0.855,
          74,
          0.662,
          75,
          0.855,
          76,
          1.321,
          77,
          0.662,
          78,
          0.855,
          79,
          0.662,
          80,
          0.855,
          81,
          0.855,
          82,
          0.662,
          83,
          1.405,
          84,
          1.962,
          85,
          1.525,
          86,
          0.855,
          87,
          0.662,
          88,
          0.855,
          89,
          0.662,
          90,
          0.855,
          91,
          0.662,
          92,
          0.855,
          93,
          0.662,
          94,
          0.855,
          95,
          0.662,
          96,
          0.855,
          97,
          0.855,
          132,
          1.464,
          188,
          2.805,
          216,
          1.512,
          235,
          0.979,
          309,
          2.312,
          314,
          2.601,
          315,
          3.701,
          322,
          1.845,
          354,
          2.747,
          453,
          1.845,
          462,
          5.345,
          463,
          4.713,
          464,
          1.845,
          465,
          4.107,
          466,
          3.482,
          467,
          3.361,
          468,
          3.361,
          469,
          5.278,
          470,
          4.62,
          471,
          4.62,
          472,
          3.361,
          473,
          4.62,
          474,
          3.916,
          475,
          4.62,
          476,
          4.107,
          477,
          4.62,
          478,
          4.107,
          479,
          4.107,
          480,
          2.176,
          481,
          3.361,
          482,
          2.176,
          483,
          2.176,
          484,
          2.176,
          485,
          2.176,
          486,
          3.361,
          487,
          4.107,
          488,
          2.176,
          489,
          3.361,
          490,
          2.176,
          491,
          2.176,
          492,
          2.176,
          493,
          2.176,
          494,
          2.176,
          495,
          3.482,
          496,
          3.07,
          497,
          2.176,
          498,
          2.176,
          499,
          1.845,
          500,
          2.176,
          501,
          2.176,
          502,
          2.176,
          503,
          2.176,
          504,
          2.176,
          505,
          2.176,
          506,
          2.176,
          507,
          2.176,
          508,
          2.176,
          509,
          4.107,
          510,
          2.176,
          511,
          2.176,
          512,
          2.176,
          513,
          2.176,
          514,
          2.176,
          515,
          2.176,
          516,
          2.176,
          517,
          2.176,
          518,
          3.361,
          519,
          2.176,
          520,
          2.176,
          521,
          2.176,
          522,
          2.176,
          523,
          2.176,
          524,
          3.361
        ]
      ],
      ['title/components/FullComponent.html', [47, 0.532, 87, 1.04]],
      [
        'body/components/FullComponent.html',
        [
          2,
          0.199,
          3,
          0.17,
          4,
          0.142,
          11,
          0.356,
          12,
          1.044,
          14,
          0.719,
          15,
          0.967,
          22,
          0.82,
          23,
          0.025,
          24,
          0.966,
          25,
          0.531,
          26,
          0.671,
          27,
          0.768,
          29,
          0.531,
          34,
          0.391,
          38,
          0.199,
          39,
          0.29,
          40,
          1.438,
          45,
          0.016,
          46,
          0.016,
          47,
          0.939,
          48,
          1.058,
          49,
          1.367,
          50,
          1.367,
          51,
          1.367,
          53,
          1.367,
          54,
          2.671,
          55,
          2.486,
          57,
          2.128,
          59,
          1.987,
          61,
          1.267,
          67,
          0.932,
          68,
          1.741,
          69,
          1.859,
          70,
          1.741,
          71,
          2.266,
          72,
          1.367,
          73,
          1.367,
          74,
          1.058,
          75,
          1.367,
          76,
          1.859,
          77,
          1.058,
          78,
          1.367,
          79,
          1.058,
          80,
          1.367,
          81,
          1.367,
          82,
          1.058,
          83,
          1.058,
          84,
          1.367,
          85,
          0.768,
          86,
          1.367,
          87,
          1.753,
          88,
          2.112,
          89,
          1.058,
          90,
          1.367,
          91,
          1.058,
          92,
          1.367,
          93,
          1.058,
          94,
          1.367,
          95,
          1.058,
          96,
          1.367,
          97,
          1.367,
          125,
          1.127,
          147,
          1.81,
          148,
          3.486,
          188,
          2.128,
          216,
          1.281,
          306,
          3.535,
          309,
          3.025,
          314,
          3.246,
          525,
          2.949,
          526,
          4.729,
          527,
          4.729,
          528,
          3.479,
          529,
          3.479,
          530,
          3.479,
          531,
          3.479,
          532,
          3.479,
          533,
          3.479
        ]
      ],
      ['title/interfaces/HttpClient.html', [182, 0.806, 197, 1.539]],
      [
        'body/interfaces/HttpClient.html',
        [
          0,
          3.087,
          1,
          1.316,
          2,
          0.156,
          3,
          0.133,
          4,
          0.111,
          9,
          3.169,
          11,
          0.279,
          12,
          1.142,
          14,
          0.971,
          15,
          0.49,
          18,
          2.439,
          19,
          2.439,
          20,
          3.371,
          23,
          0.025,
          26,
          0.998,
          27,
          1.31,
          28,
          2.071,
          29,
          0.581,
          30,
          1.669,
          31,
          3.169,
          32,
          1.144,
          33,
          0.998,
          34,
          0.306,
          37,
          1.316,
          38,
          0.295,
          39,
          0.332,
          40,
          0.828,
          42,
          2.677,
          45,
          0.014,
          46,
          0.014,
          64,
          1.904,
          85,
          0.878,
          98,
          1.26,
          100,
          1.003,
          101,
          1.21,
          154,
          2.332,
          182,
          0.938,
          185,
          1.832,
          197,
          2.907,
          222,
          2.669,
          230,
          1.669,
          235,
          1.79,
          327,
          1.669,
          353,
          1.417,
          358,
          1.669,
          361,
          3.165,
          405,
          3.162,
          414,
          1.832,
          418,
          1.832,
          419,
          1.534,
          534,
          1.669,
          535,
          4.112,
          536,
          2.724,
          537,
          2.975,
          538,
          2.975,
          539,
          2.677,
          540,
          3.515,
          541,
          2.036,
          542,
          2.036,
          543,
          2.036,
          544,
          2.881,
          545,
          2.975,
          546,
          2.036,
          547,
          2.036,
          548,
          2.036,
          549,
          2.036,
          550,
          2.036,
          551,
          2.036,
          552,
          2.036,
          553,
          2.036,
          554,
          3.478,
          555,
          2.881,
          556,
          2.036,
          557,
          2.647,
          558,
          2.036,
          559,
          2.036,
          560,
          1.669,
          561,
          2.036,
          562,
          2.036,
          563,
          2.677,
          564,
          2.439,
          565,
          2.677,
          566,
          1.832,
          567,
          1.832,
          568,
          1.832,
          569,
          1.832,
          570,
          2.677,
          571,
          1.669,
          572,
          1.832,
          573,
          1.832,
          574,
          1.832,
          575,
          1.832,
          576,
          1.832,
          577,
          1.832,
          578,
          2.439,
          579,
          2.036,
          580,
          2.036,
          581,
          2.036,
          582,
          2.975,
          583,
          2.036,
          584,
          2.036,
          585,
          2.036,
          586,
          2.036,
          587,
          2.036,
          588,
          2.036,
          589,
          2.036,
          590,
          3.515,
          591,
          2.036,
          592,
          2.036,
          593,
          1.316,
          594,
          2.975,
          595,
          2.036,
          596,
          2.036,
          597,
          2.036,
          598,
          2.036
        ]
      ],
      ['title/classes/HttpInterceptorHandler.html', [39, 0.285, 560, 2.095]],
      [
        'body/classes/HttpInterceptorHandler.html',
        [
          0,
          3.133,
          1,
          1.274,
          2,
          0.151,
          3,
          0.129,
          4,
          0.108,
          9,
          3.121,
          11,
          0.27,
          12,
          1.124,
          14,
          1.052,
          15,
          0.7,
          18,
          3.121,
          19,
          2.828,
          20,
          3.693,
          22,
          0.916,
          23,
          0.025,
          24,
          0.651,
          25,
          0.436,
          26,
          1.096,
          27,
          1.296,
          28,
          2.402,
          29,
          0.572,
          30,
          1.616,
          31,
          3.48,
          32,
          1.108,
          33,
          0.983,
          34,
          0.296,
          37,
          1.274,
          38,
          0.291,
          39,
          0.385,
          40,
          1.182,
          42,
          2.614,
          45,
          0.014,
          46,
          0.014,
          64,
          1.699,
          85,
          0.582,
          98,
          1.236,
          100,
          0.971,
          101,
          1.182,
          154,
          2.308,
          182,
          0.621,
          185,
          1.774,
          197,
          2.815,
          222,
          2.555,
          230,
          1.616,
          235,
          1.749,
          327,
          1.616,
          353,
          1.372,
          358,
          1.616,
          361,
          3.136,
          405,
          2.614,
          414,
          2.614,
          418,
          1.774,
          419,
          1.485,
          534,
          1.616,
          535,
          2.905,
          537,
          1.971,
          538,
          1.971,
          539,
          2.614,
          540,
          3.45,
          541,
          1.971,
          542,
          1.971,
          543,
          1.971,
          544,
          2.828,
          545,
          2.905,
          546,
          1.971,
          547,
          1.971,
          548,
          1.971,
          549,
          1.971,
          550,
          1.971,
          551,
          1.971,
          552,
          1.971,
          553,
          1.971,
          554,
          3.425,
          555,
          2.828,
          556,
          1.971,
          557,
          2.598,
          558,
          1.971,
          559,
          1.971,
          560,
          2.382,
          561,
          1.971,
          562,
          1.971,
          563,
          2.614,
          564,
          2.382,
          565,
          2.614,
          566,
          1.774,
          567,
          1.774,
          568,
          1.774,
          569,
          1.774,
          570,
          2.614,
          571,
          1.616,
          572,
          1.774,
          573,
          1.774,
          574,
          1.774,
          575,
          1.774,
          576,
          1.774,
          577,
          1.774,
          578,
          2.382,
          579,
          1.971,
          580,
          1.971,
          581,
          1.971,
          582,
          2.905,
          583,
          1.971,
          584,
          1.971,
          585,
          1.971,
          586,
          1.971,
          587,
          1.971,
          588,
          1.971,
          589,
          1.971,
          590,
          3.45,
          591,
          1.971,
          592,
          1.971,
          593,
          1.274,
          594,
          2.905,
          595,
          1.971,
          596,
          1.971,
          597,
          1.971,
          598,
          1.971,
          599,
          3.886,
          600,
          2.637,
          601,
          2.637,
          602,
          2.637
        ]
      ],
      ['title/injectables/HttpService.html', [33, 0.66, 361, 1.779]],
      [
        'body/injectables/HttpService.html',
        [
          0,
          3.133,
          1,
          1.16,
          2,
          0.137,
          3,
          0.117,
          4,
          0.098,
          7,
          1.352,
          9,
          3.362,
          11,
          0.246,
          12,
          1.152,
          14,
          1.004,
          15,
          0.939,
          18,
          2.221,
          19,
          2.221,
          20,
          3.592,
          22,
          1.146,
          23,
          0.025,
          24,
          0.815,
          25,
          0.546,
          26,
          1.18,
          27,
          1.35,
          28,
          1.886,
          29,
          0.546,
          30,
          1.471,
          31,
          3.592,
          32,
          1.009,
          33,
          1.007,
          34,
          0.27,
          37,
          1.16,
          38,
          0.278,
          39,
          0.302,
          40,
          0.73,
          42,
          3.27,
          45,
          0.013,
          46,
          0.013,
          64,
          1.607,
          85,
          0.53,
          98,
          1.169,
          100,
          0.884,
          101,
          1.102,
          154,
          2.441,
          182,
          0.566,
          185,
          1.615,
          197,
          2.832,
          215,
          3.262,
          222,
          2.468,
          230,
          1.471,
          235,
          1.63,
          327,
          1.471,
          353,
          1.249,
          358,
          1.471,
          361,
          3.232,
          405,
          2.437,
          414,
          1.615,
          418,
          1.615,
          419,
          1.352,
          534,
          1.471,
          535,
          3.9,
          537,
          1.795,
          538,
          1.795,
          539,
          2.437,
          540,
          4.257,
          541,
          1.795,
          542,
          1.795,
          543,
          1.795,
          544,
          2.979,
          545,
          2.709,
          546,
          1.795,
          547,
          1.795,
          548,
          1.795,
          549,
          1.795,
          550,
          1.795,
          551,
          1.795,
          552,
          1.795,
          553,
          1.795,
          554,
          3.509,
          555,
          2.674,
          556,
          1.795,
          557,
          2.737,
          558,
          1.795,
          559,
          1.795,
          560,
          1.471,
          561,
          1.795,
          562,
          1.795,
          563,
          2.437,
          564,
          2.674,
          565,
          2.437,
          566,
          1.615,
          567,
          1.615,
          568,
          1.615,
          569,
          1.615,
          570,
          2.437,
          571,
          1.471,
          572,
          1.615,
          573,
          1.615,
          574,
          1.615,
          575,
          1.615,
          576,
          1.615,
          577,
          1.615,
          578,
          2.221,
          579,
          2.709,
          580,
          1.795,
          581,
          1.795,
          582,
          2.709,
          583,
          1.795,
          584,
          1.795,
          585,
          1.795,
          586,
          1.795,
          587,
          2.709,
          588,
          1.795,
          589,
          1.795,
          590,
          3.262,
          591,
          1.795,
          592,
          2.709,
          593,
          2.108,
          594,
          2.709,
          595,
          1.795,
          596,
          2.709,
          597,
          2.709,
          598,
          1.795,
          603,
          3.623,
          604,
          3.623,
          605,
          2.401,
          606,
          2.401,
          607,
          2.401,
          608,
          2.401,
          609,
          2.401,
          610,
          2.401
        ]
      ],
      ['title/injectables/LocalStorageService.html', [33, 0.66, 198, 1.779]],
      [
        'body/injectables/LocalStorageService.html',
        [
          2,
          0.183,
          3,
          0.157,
          4,
          0.131,
          11,
          0.329,
          12,
          0.988,
          14,
          0.924,
          15,
          1.121,
          22,
          1.214,
          23,
          0.025,
          24,
          0.982,
          25,
          0.658,
          26,
          0.994,
          27,
          1.402,
          29,
          0.361,
          33,
          0.864,
          34,
          0.361,
          45,
          0.016,
          46,
          0.016,
          61,
          1.199,
          63,
          1.841,
          65,
          2.234,
          188,
          2.997,
          198,
          1.671,
          222,
          1.445,
          235,
          1.445,
          290,
          2.159,
          385,
          3.157,
          429,
          4.367,
          593,
          2.162,
          611,
          4.747,
          612,
          2.4,
          613,
          5.86,
          614,
          5.572,
          615,
          5.572,
          616,
          4.475,
          617,
          4.475,
          618,
          4.475,
          619,
          4.475,
          620,
          3.21,
          621,
          4.475,
          622,
          3.21,
          623,
          4.475,
          624,
          3.21,
          625,
          4.475,
          626,
          3.21,
          627,
          3.21,
          628,
          2.722,
          629,
          4.367,
          630,
          5.86,
          631,
          3.21,
          632,
          3.21,
          633,
          4.475,
          634,
          3.21,
          635,
          3.21,
          636,
          3.21,
          637,
          3.21,
          638,
          2.722,
          639,
          3.21,
          640,
          3.21,
          641,
          3.21,
          642,
          3.21,
          643,
          3.21,
          644,
          3.21,
          645,
          3.21,
          646,
          3.21,
          647,
          3.21,
          648,
          3.21
        ]
      ],
      ['title/components/LoginComponent.html', [47, 0.532, 89, 1.04]],
      [
        'body/components/LoginComponent.html',
        [
          2,
          0.141,
          3,
          0.121,
          4,
          0.101,
          11,
          0.253,
          12,
          0.819,
          14,
          0.766,
          15,
          1.089,
          22,
          0.584,
          23,
          0.025,
          24,
          0.828,
          25,
          0.554,
          26,
          0.478,
          27,
          1.09,
          29,
          0.594,
          34,
          0.278,
          38,
          0.141,
          39,
          0.207,
          40,
          1.352,
          45,
          0.013,
          46,
          0.013,
          47,
          0.823,
          48,
          0.753,
          49,
          0.973,
          50,
          0.973,
          51,
          0.973,
          53,
          0.973,
          54,
          2.518,
          55,
          2.333,
          57,
          1.669,
          59,
          1.558,
          61,
          0.994,
          64,
          0.912,
          65,
          0.912,
          67,
          0.663,
          68,
          1.365,
          69,
          1.457,
          70,
          1.365,
          71,
          1.94,
          72,
          0.973,
          73,
          0.973,
          74,
          0.753,
          75,
          0.973,
          76,
          1.457,
          77,
          0.753,
          78,
          0.973,
          79,
          0.753,
          80,
          0.973,
          81,
          0.973,
          82,
          0.753,
          83,
          0.753,
          84,
          0.973,
          85,
          1.09,
          86,
          0.973,
          87,
          0.753,
          88,
          0.973,
          89,
          1.501,
          90,
          0.973,
          91,
          0.753,
          92,
          0.973,
          93,
          0.753,
          94,
          0.973,
          95,
          0.753,
          96,
          0.973,
          97,
          0.973,
          111,
          2.314,
          125,
          0.802,
          132,
          1.666,
          147,
          1.289,
          148,
          3.255,
          149,
          2.78,
          154,
          2.078,
          156,
          1.669,
          161,
          1.851,
          162,
          2.503,
          170,
          1.394,
          181,
          1.04,
          188,
          2,
          190,
          4.705,
          212,
          2.099,
          216,
          1.818,
          232,
          1.394,
          252,
          1.517,
          309,
          2.503,
          314,
          2.78,
          346,
          3.69,
          374,
          1.394,
          375,
          3.125,
          377,
          2.314,
          499,
          2.099,
          649,
          2.099,
          650,
          3.709,
          651,
          3.709,
          652,
          4.937,
          653,
          4.937,
          654,
          4.185,
          655,
          4.937,
          656,
          4.878,
          657,
          3.709,
          658,
          2.476,
          659,
          2.476,
          660,
          2.476,
          661,
          2.476,
          662,
          4.878,
          663,
          2.476,
          664,
          2.476,
          665,
          2.476,
          666,
          1.851,
          667,
          3.144,
          668,
          2.099,
          669,
          3.144,
          670,
          2.099,
          671,
          2.476,
          672,
          2.476,
          673,
          2.099,
          674,
          2.476,
          675,
          2.476,
          676,
          2.476,
          677,
          2.476,
          678,
          3.144,
          679,
          3.769,
          680,
          2.476,
          681,
          2.099,
          682,
          4.185,
          683,
          3.709,
          684,
          3.709,
          685,
          2.476,
          686,
          3.144,
          687,
          3.709,
          688,
          3.709,
          689,
          3.144,
          690,
          3.709,
          691,
          3.709,
          692,
          2.476
        ]
      ],
      ['title/interfaces/LoginPayload.html', [182, 0.806, 373, 1.925]],
      [
        'body/interfaces/LoginPayload.html',
        [
          2,
          0.245,
          3,
          0.21,
          4,
          0.175,
          11,
          0.439,
          23,
          0.024,
          25,
          0.609,
          38,
          0.357,
          45,
          0.019,
          46,
          0.019,
          61,
          1.454,
          63,
          2.016,
          101,
          1.305,
          152,
          2.073,
          158,
          2.416,
          181,
          1.803,
          182,
          1.521,
          195,
          2.63,
          202,
          2.679,
          370,
          2.63,
          371,
          2.886,
          372,
          2.416,
          373,
          3.056,
          374,
          3.633,
          375,
          3.633,
          376,
          2.416,
          377,
          2.825,
          378,
          2.886,
          379,
          2.886,
          380,
          2.886,
          381,
          2.886,
          382,
          2.886,
          383,
          2.886,
          384,
          2.886,
          385,
          3.648,
          386,
          2.886,
          387,
          2.886,
          388,
          2.886
        ]
      ],
      ['title/components/NotFoundComponent.html', [47, 0.532, 91, 1.04]],
      [
        'body/components/NotFoundComponent.html',
        [
          2,
          0.205,
          3,
          0.175,
          4,
          0.146,
          11,
          0.367,
          12,
          1.066,
          15,
          0.646,
          23,
          0.024,
          24,
          0.915,
          27,
          0.792,
          29,
          0.403,
          34,
          0.403,
          38,
          0.205,
          39,
          0.299,
          40,
          1.469,
          45,
          0.017,
          46,
          0.017,
          47,
          0.949,
          48,
          1.091,
          49,
          1.411,
          50,
          1.411,
          51,
          1.411,
          53,
          1.411,
          54,
          2.683,
          55,
          2.498,
          57,
          2.173,
          59,
          2.029,
          67,
          0.962,
          68,
          1.778,
          69,
          1.898,
          70,
          1.778,
          71,
          2.295,
          72,
          1.411,
          73,
          1.411,
          74,
          1.091,
          75,
          1.411,
          76,
          1.898,
          77,
          1.091,
          78,
          1.411,
          79,
          1.091,
          80,
          1.411,
          81,
          1.411,
          82,
          1.091,
          83,
          1.091,
          84,
          1.411,
          85,
          0.792,
          86,
          1.411,
          87,
          1.091,
          88,
          1.411,
          89,
          1.091,
          90,
          1.411,
          91,
          1.776,
          92,
          1.411,
          93,
          1.091,
          94,
          1.411,
          95,
          1.091,
          96,
          1.411,
          97,
          1.411,
          216,
          1.322,
          466,
          4.629,
          474,
          4.951,
          593,
          1.734,
          693,
          4.095,
          694,
          3.043,
          695,
          5.84,
          696,
          4.831,
          697,
          4.831,
          698,
          3.59,
          699,
          3.59,
          700,
          4.831,
          701,
          4.831,
          702,
          4.831,
          703,
          4.831,
          704,
          4.831,
          705,
          4.831,
          706,
          5.84,
          707,
          4.831
        ]
      ],
      ['title/interfaces/RootObject.html', [182, 0.806, 442, 2.3]],
      [
        'body/interfaces/RootObject.html',
        [
          2,
          0.257,
          3,
          0.22,
          4,
          0.183,
          11,
          0.46,
          23,
          0.024,
          25,
          0.735,
          26,
          1.079,
          38,
          0.319,
          45,
          0.019,
          46,
          0.019,
          61,
          1.498,
          63,
          1.967,
          85,
          1.445,
          101,
          1.368,
          182,
          1.433,
          275,
          3.026,
          372,
          2.533,
          437,
          3.026,
          438,
          3.363,
          439,
          3.363,
          440,
          5.394,
          441,
          3.814,
          442,
          3.761,
          443,
          5.394,
          444,
          5.394,
          445,
          5.394
        ]
      ],
      ['title/classes/RouteReusableStrategy.html', [39, 0.285, 363, 2.3]],
      [
        'body/classes/RouteReusableStrategy.html',
        [
          2,
          0.172,
          3,
          0.147,
          4,
          0.123,
          7,
          1.697,
          11,
          0.309,
          12,
          0.945,
          15,
          1.031,
          22,
          1.349,
          23,
          0.025,
          24,
          0.959,
          25,
          0.643,
          26,
          1.105,
          27,
          1.404,
          29,
          0.338,
          38,
          0.172,
          39,
          0.357,
          45,
          0.015,
          46,
          0.015,
          125,
          0.977,
          152,
          2.873,
          156,
          1.926,
          162,
          2.41,
          188,
          3.029,
          216,
          1.576,
          220,
          4,
          331,
          4.965,
          359,
          4.22,
          363,
          2.879,
          365,
          4.445,
          366,
          3.629,
          404,
          3.629,
          544,
          2.623,
          555,
          2.623,
          557,
          2.41,
          708,
          5.041,
          709,
          2.556,
          710,
          4.281,
          711,
          5.947,
          712,
          4.281,
          713,
          4.281,
          714,
          4.281,
          715,
          3.629,
          716,
          3.629,
          717,
          4.281,
          718,
          4.281,
          719,
          4.281,
          720,
          4.978,
          721,
          4.978,
          722,
          4.281,
          723,
          6.859,
          724,
          3.015,
          725,
          5.947,
          726,
          4.281,
          727,
          3.015,
          728,
          4.281,
          729,
          3.015,
          730,
          3.015,
          731,
          4.978,
          732,
          3.015,
          733,
          4.281,
          734,
          3.015,
          735,
          4.978,
          736,
          3.015,
          737,
          3.015,
          738,
          3.015,
          739,
          3.015
        ]
      ],
      ['title/modules/SharedModule.html', [98, 0.916, 109, 1.925]],
      [
        'body/modules/SharedModule.html',
        [
          2,
          0.184,
          3,
          0.157,
          4,
          0.131,
          23,
          0.025,
          29,
          0.748,
          34,
          0.361,
          38,
          0.319,
          39,
          0.268,
          45,
          0.016,
          46,
          0.016,
          67,
          0.862,
          74,
          2.026,
          77,
          2.026,
          79,
          2.026,
          83,
          2.026,
          85,
          0.989,
          87,
          2.026,
          95,
          2.026,
          98,
          1.201,
          100,
          1.184,
          101,
          1.568,
          102,
          2.332,
          103,
          2.332,
          109,
          3.926,
          110,
          2.523,
          111,
          1.674,
          112,
          1.674,
          115,
          2.746,
          116,
          1.674,
          118,
          2.746,
          124,
          2.746,
          125,
          1.042,
          126,
          2.164,
          127,
          1.811,
          128,
          1.971,
          141,
          2.727,
          168,
          3.799,
          169,
          3.35,
          170,
          1.811,
          343,
          2.727,
          463,
          2.405,
          740,
          2.727,
          741,
          2.727,
          742,
          2.727,
          743,
          3.217,
          744,
          3.217,
          745,
          3.217,
          746,
          3.217,
          747,
          3.217,
          748,
          3.217,
          749,
          3.217,
          750,
          3.217,
          751,
          3.217
        ]
      ],
      ['title/components/SignupComponent.html', [47, 0.532, 93, 1.04]],
      [
        'body/components/SignupComponent.html',
        [
          2,
          0.153,
          3,
          0.131,
          4,
          0.109,
          11,
          0.275,
          12,
          0.869,
          14,
          0.813,
          15,
          1.063,
          22,
          0.632,
          23,
          0.025,
          24,
          0.861,
          25,
          0.523,
          26,
          0.518,
          27,
          1.029,
          29,
          0.614,
          34,
          0.301,
          38,
          0.153,
          39,
          0.224,
          40,
          1.196,
          45,
          0.014,
          46,
          0.014,
          47,
          0.851,
          48,
          0.816,
          49,
          1.054,
          50,
          1.054,
          51,
          1.054,
          53,
          1.054,
          54,
          2.557,
          55,
          2.372,
          57,
          1.77,
          59,
          1.653,
          61,
          1.054,
          64,
          0.987,
          65,
          0.987,
          67,
          0.719,
          68,
          1.449,
          69,
          1.546,
          70,
          1.449,
          71,
          2.018,
          72,
          1.054,
          73,
          1.054,
          74,
          0.816,
          75,
          1.054,
          76,
          1.546,
          77,
          0.816,
          78,
          1.054,
          79,
          0.816,
          80,
          1.054,
          81,
          1.054,
          82,
          0.816,
          83,
          0.816,
          84,
          1.054,
          85,
          1.133,
          86,
          1.054,
          87,
          0.816,
          88,
          1.054,
          89,
          0.816,
          90,
          1.054,
          91,
          0.816,
          92,
          1.054,
          93,
          1.561,
          94,
          1.054,
          95,
          0.816,
          96,
          1.054,
          97,
          1.054,
          125,
          0.869,
          132,
          1.804,
          147,
          1.396,
          148,
          3.314,
          149,
          2.852,
          154,
          2.148,
          156,
          1.207,
          160,
          2.005,
          162,
          2.624,
          170,
          1.51,
          188,
          2.097,
          193,
          4.844,
          202,
          1.207,
          216,
          1.716,
          232,
          1.51,
          247,
          2.274,
          252,
          1.644,
          264,
          3.336,
          309,
          2.624,
          314,
          2.89,
          346,
          3.837,
          374,
          1.51,
          375,
          1.51,
          377,
          1.396,
          654,
          4.352,
          656,
          5.006,
          662,
          4.352,
          666,
          2.005,
          667,
          3.336,
          668,
          2.274,
          669,
          3.336,
          670,
          2.274,
          673,
          2.274,
          678,
          2.274,
          679,
          3.951,
          681,
          2.274,
          682,
          3.336,
          686,
          4.352,
          752,
          2.274,
          753,
          3.935,
          754,
          3.935,
          755,
          5.133,
          756,
          3.935,
          757,
          2.682,
          758,
          2.682,
          759,
          2.682,
          760,
          2.682,
          761,
          2.682,
          762,
          2.682,
          763,
          2.682,
          764,
          2.682,
          765,
          2.682,
          766,
          2.682,
          767,
          3.935,
          768,
          3.935,
          769,
          3.935,
          770,
          3.935
        ]
      ],
      ['title/interfaces/SignupPayload.html', [182, 0.806, 376, 1.925]],
      [
        'body/interfaces/SignupPayload.html',
        [
          2,
          0.241,
          3,
          0.206,
          4,
          0.172,
          11,
          0.431,
          23,
          0.025,
          25,
          0.663,
          38,
          0.355,
          45,
          0.019,
          46,
          0.019,
          61,
          1.437,
          63,
          2.023,
          101,
          1.281,
          152,
          2.034,
          158,
          2.371,
          181,
          1.769,
          182,
          1.512,
          195,
          2.581,
          202,
          2.655,
          370,
          2.581,
          371,
          2.833,
          372,
          2.371,
          373,
          2.371,
          374,
          3.613,
          375,
          3.613,
          376,
          3.02,
          377,
          3.339,
          378,
          2.833,
          379,
          2.833,
          380,
          2.833,
          381,
          2.833,
          382,
          2.833,
          383,
          2.833,
          384,
          2.833,
          385,
          3.616,
          386,
          2.833,
          387,
          2.833,
          388,
          2.833
        ]
      ],
      ['title/components/SpinnerComponent.html', [47, 0.532, 95, 1.04]],
      [
        'body/components/SpinnerComponent.html',
        [
          2,
          0.168,
          3,
          0.144,
          4,
          0.12,
          11,
          0.302,
          12,
          0.93,
          14,
          0.87,
          15,
          0.966,
          22,
          0.694,
          23,
          0.025,
          24,
          0.899,
          25,
          0.331,
          26,
          0.569,
          27,
          0.651,
          29,
          0.552,
          33,
          0.569,
          34,
          0.331,
          38,
          0.168,
          39,
          0.246,
          40,
          1.281,
          45,
          0.015,
          46,
          0.015,
          47,
          0.884,
          48,
          0.896,
          49,
          1.656,
          50,
          1.158,
          51,
          1.158,
          53,
          1.158,
          54,
          2.6,
          55,
          2.415,
          61,
          1.129,
          64,
          1.551,
          65,
          1.551,
          67,
          0.79,
          68,
          1.551,
          69,
          1.656,
          70,
          1.551,
          71,
          2.108,
          72,
          1.158,
          73,
          1.158,
          74,
          0.896,
          75,
          1.158,
          76,
          1.656,
          77,
          0.896,
          78,
          1.158,
          79,
          0.896,
          80,
          1.158,
          81,
          1.158,
          82,
          0.896,
          83,
          0.896,
          84,
          1.158,
          85,
          0.651,
          86,
          1.158,
          87,
          0.896,
          88,
          1.158,
          89,
          0.896,
          90,
          1.158,
          91,
          0.896,
          92,
          1.158,
          93,
          0.896,
          94,
          1.158,
          95,
          1.631,
          96,
          1.932,
          97,
          1.158,
          116,
          1.534,
          125,
          0.955,
          147,
          1.534,
          148,
          3.071,
          154,
          1.656,
          156,
          2.212,
          162,
          2.768,
          188,
          2.414,
          216,
          1.551,
          315,
          3.608,
          321,
          3.571,
          326,
          4.811,
          327,
          3.287,
          771,
          2.498,
          772,
          4.916,
          773,
          4.213,
          774,
          4.213,
          775,
          5.364,
          776,
          5.364,
          777,
          4.916,
          778,
          4.542,
          779,
          4.213,
          780,
          4.213,
          781,
          4.213,
          782,
          4.213,
          783,
          4.213,
          784,
          2.947,
          785,
          2.947,
          786,
          2.947,
          787,
          4.213,
          788,
          4.213,
          789,
          4.213,
          790,
          2.947,
          791,
          2.947,
          792,
          5.364
        ]
      ],
      ['title/interfaces/User.html', [182, 0.806, 202, 1.539]],
      [
        'body/interfaces/User.html',
        [
          2,
          0.209,
          3,
          0.179,
          4,
          0.149,
          11,
          0.375,
          23,
          0.025,
          25,
          0.759,
          26,
          1.137,
          38,
          0.336,
          45,
          0.017,
          46,
          0.017,
          61,
          1.312,
          63,
          2.014,
          101,
          1.114,
          152,
          2.665,
          158,
          2.063,
          181,
          1.54,
          182,
          1.446,
          195,
          2.246,
          202,
          2.65,
          370,
          2.246,
          371,
          2.465,
          372,
          2.063,
          373,
          2.063,
          374,
          2.758,
          375,
          2.758,
          376,
          2.063,
          377,
          3.194,
          378,
          3.961,
          379,
          3.961,
          380,
          3.961,
          381,
          3.961,
          382,
          3.961,
          383,
          3.961,
          384,
          3.961,
          385,
          4.066,
          386,
          3.961,
          387,
          3.961,
          388,
          3.961
        ]
      ],
      ['title/injectables/UserService.html', [33, 0.66, 355, 2.095]],
      [
        'body/injectables/UserService.html',
        [
          2,
          0.27,
          3,
          0.231,
          4,
          0.193,
          14,
          0.977,
          15,
          0.851,
          22,
          1.114,
          23,
          0.025,
          24,
          0.793,
          25,
          0.531,
          26,
          0.912,
          29,
          0.698,
          32,
          1.986,
          33,
          1.2,
          34,
          0.531,
          38,
          0.27,
          39,
          0.394,
          45,
          0.02,
          46,
          0.02,
          196,
          3.534,
          197,
          3.038,
          202,
          2.127,
          261,
          3.877,
          285,
          4.008,
          355,
          3.532,
          544,
          2.897,
          793,
          4.008,
          794,
          4.728,
          795,
          4.728,
          796,
          4.728,
          797,
          4.728
        ]
      ],
      ['title/injectables/UtilService.html', [33, 0.66, 356, 2.095]],
      [
        'body/injectables/UtilService.html',
        [
          2,
          0.227,
          3,
          0.194,
          4,
          0.162,
          11,
          0.406,
          12,
          1.139,
          14,
          1.185,
          15,
          1.033,
          22,
          1.216,
          23,
          0.025,
          24,
          0.865,
          25,
          0.58,
          26,
          0.996,
          27,
          1.266,
          29,
          0.446,
          33,
          1.107,
          34,
          0.446,
          38,
          0.227,
          39,
          0.331,
          45,
          0.018,
          46,
          0.018,
          63,
          1.638,
          65,
          1.9,
          216,
          1.461,
          220,
          2.669,
          235,
          2.323,
          265,
          3.364,
          290,
          3.859,
          293,
          3.364,
          356,
          3.163,
          798,
          3.364,
          799,
          5.162,
          800,
          5.162,
          801,
          3.968,
          802,
          5.162,
          803,
          3.968,
          804,
          5.162,
          805,
          3.968,
          806,
          5.737,
          807,
          3.968,
          808,
          6.076,
          809,
          3.968,
          810,
          3.968,
          811,
          3.968,
          812,
          3.968,
          813,
          3.968,
          814,
          3.968,
          815,
          3.968,
          816,
          3.968,
          817,
          3.968,
          818,
          3.968,
          819,
          3.968,
          820,
          3.968,
          821,
          3.968,
          822,
          3.968,
          823,
          3.968
        ]
      ],
      ['title/coverage.html', [824, 3.962]],
      [
        'body/coverage.html',
        [
          4,
          0.112,
          23,
          0.025,
          25,
          0.308,
          33,
          1.148,
          35,
          3.182,
          39,
          0.334,
          45,
          0.014,
          46,
          0.014,
          47,
          0.997,
          48,
          0.835,
          52,
          2.329,
          74,
          0.835,
          77,
          0.835,
          79,
          0.835,
          82,
          0.835,
          83,
          0.835,
          85,
          0.884,
          87,
          0.835,
          89,
          0.835,
          91,
          0.835,
          93,
          0.835,
          95,
          0.835,
          149,
          1.327,
          178,
          2.993,
          181,
          1.154,
          182,
          1.402,
          197,
          1.236,
          198,
          1.43,
          202,
          1.236,
          222,
          1.236,
          236,
          2.693,
          261,
          1.848,
          262,
          2.329,
          290,
          4.76,
          305,
          2.329,
          308,
          2.329,
          340,
          2.329,
          341,
          2.329,
          342,
          2.329,
          354,
          1.43,
          355,
          1.684,
          356,
          1.684,
          361,
          1.43,
          363,
          1.848,
          365,
          2.054,
          370,
          3.182,
          373,
          1.547,
          376,
          1.547,
          389,
          2.329,
          402,
          2.054,
          403,
          2.054,
          437,
          1.848,
          438,
          2.993,
          442,
          1.848,
          446,
          2.329,
          447,
          2.329,
          462,
          2.329,
          463,
          2.054,
          464,
          2.329,
          496,
          2.054,
          525,
          2.329,
          534,
          3.182,
          560,
          1.684,
          578,
          1.684,
          593,
          2.784,
          611,
          4.447,
          612,
          4.447,
          649,
          2.329,
          693,
          2.329,
          694,
          2.329,
          708,
          2.329,
          709,
          2.329,
          752,
          2.329,
          771,
          2.329,
          778,
          2.054,
          793,
          2.329,
          798,
          2.329,
          824,
          2.329,
          825,
          2.747,
          826,
          2.747,
          827,
          5.192,
          828,
          2.747,
          829,
          4.004,
          830,
          2.747,
          831,
          2.747,
          832,
          4.785,
          833,
          6.716,
          834,
          2.747,
          835,
          3.395,
          836,
          2.329,
          837,
          4.004,
          838,
          4.004,
          839,
          4.004,
          840,
          2.747,
          841,
          2.747,
          842,
          2.747,
          843,
          2.747,
          844,
          2.329,
          845,
          2.329,
          846,
          2.329,
          847,
          2.329,
          848,
          2.329,
          849,
          2.329,
          850,
          5.192,
          851,
          2.747,
          852,
          5.52,
          853,
          2.747,
          854,
          2.747,
          855,
          2.329,
          856,
          2.329,
          857,
          2.329,
          858,
          2.329,
          859,
          3.395,
          860,
          2.329,
          861,
          2.329,
          862,
          2.747,
          863,
          2.747
        ]
      ],
      ['title/dependencies.html', [100, 1.515, 864, 2.852]],
      [
        'body/dependencies.html',
        [
          23,
          0.025,
          34,
          0.508,
          37,
          2.186,
          45,
          0.02,
          46,
          0.02,
          100,
          1.666,
          102,
          2.92,
          114,
          3.836,
          116,
          2.355,
          120,
          4.194,
          121,
          3.438,
          125,
          1.466,
          127,
          2.548,
          128,
          2.773,
          140,
          3.836,
          170,
          2.548,
          564,
          2.773,
          865,
          4.525,
          866,
          4.525,
          867,
          4.525,
          868,
          5.611,
          869,
          6.898,
          870,
          4.525,
          871,
          4.525,
          872,
          4.525,
          873,
          3.836,
          874,
          4.525,
          875,
          4.525,
          876,
          3.836,
          877,
          4.525,
          878,
          4.525,
          879,
          4.525,
          880,
          4.525,
          881,
          4.525,
          882,
          4.525,
          883,
          4.525,
          884,
          4.525
        ]
      ],
      ['title/miscellaneous/functions.html', [593, 1.988, 885, 1.918]],
      [
        'body/miscellaneous/functions.html',
        [
          11,
          0.455,
          22,
          1.537,
          23,
          0.024,
          24,
          1.131,
          25,
          0.766,
          26,
          1.259,
          45,
          0.019,
          46,
          0.019,
          65,
          2.044,
          593,
          2.149,
          611,
          3.325,
          612,
          5.043,
          628,
          3.771,
          629,
          4.706,
          638,
          3.771,
          715,
          4.706,
          844,
          4.706,
          845,
          4.706,
          846,
          4.706,
          847,
          5.131,
          848,
          4.706,
          849,
          4.706,
          885,
          2.992,
          886,
          6.651,
          887,
          4.448,
          888,
          4.448,
          889,
          4.448
        ]
      ],
      ['title/index.html', [11, 0.292, 226, 2.418, 890, 2.418]],
      [
        'body/index.html',
        [
          3,
          0.231,
          4,
          0.112,
          7,
          1.547,
          23,
          0.024,
          35,
          2.454,
          45,
          0.014,
          46,
          0.014,
          47,
          0.926,
          55,
          2.426,
          56,
          3.395,
          65,
          1.011,
          68,
          1.011,
          70,
          1.011,
          98,
          1.391,
          100,
          1.011,
          121,
          1.684,
          127,
          1.547,
          179,
          2.329,
          222,
          1.236,
          252,
          1.684,
          331,
          2.054,
          419,
          1.547,
          557,
          2.66,
          571,
          1.684,
          716,
          2.329,
          778,
          4.307,
          873,
          4.006,
          876,
          3.395,
          890,
          3.395,
          891,
          4.725,
          892,
          2.329,
          893,
          2.747,
          894,
          4.004,
          895,
          4.725,
          896,
          6.217,
          897,
          5.192,
          898,
          6.75,
          899,
          2.747,
          900,
          5.52,
          901,
          5.192,
          902,
          2.747,
          903,
          2.747,
          904,
          2.747,
          905,
          2.747,
          906,
          5.949,
          907,
          2.747,
          908,
          2.747,
          909,
          5.949,
          910,
          2.747,
          911,
          4.004,
          912,
          4.004,
          913,
          2.747,
          914,
          6.317,
          915,
          2.747,
          916,
          5.192,
          917,
          2.747,
          918,
          4.004,
          919,
          2.747,
          920,
          2.747,
          921,
          2.747,
          922,
          2.747,
          923,
          2.747,
          924,
          2.747,
          925,
          4.004,
          926,
          2.747,
          927,
          2.747,
          928,
          2.747,
          929,
          2.747,
          930,
          5.949,
          931,
          2.747,
          932,
          5.192,
          933,
          4.725,
          934,
          2.747,
          935,
          4.004,
          936,
          2.747,
          937,
          2.747,
          938,
          2.747,
          939,
          2.747,
          940,
          2.747,
          941,
          2.747,
          942,
          2.747,
          943,
          4.725,
          944,
          2.747,
          945,
          2.747,
          946,
          6.636,
          947,
          4.004,
          948,
          2.747,
          949,
          6.097,
          950,
          4.885,
          951,
          2.747,
          952,
          3.395,
          953,
          2.747,
          954,
          3.395,
          955,
          2.747,
          956,
          5.192,
          957,
          2.747,
          958,
          2.747,
          959,
          2.747,
          960,
          2.747,
          961,
          4.004,
          962,
          4.004,
          963,
          4.004,
          964,
          2.747,
          965,
          2.747,
          966,
          2.329,
          967,
          2.747,
          968,
          2.747,
          969,
          2.747,
          970,
          2.747,
          971,
          2.747,
          972,
          2.747,
          973,
          2.747,
          974,
          2.747,
          975,
          2.747,
          976,
          2.747,
          977,
          2.329,
          978,
          2.747,
          979,
          2.747,
          980,
          2.747
        ]
      ],
      ['title/modules.html', [98, 1.252]],
      [
        'body/modules.html',
        [
          23,
          0.021,
          45,
          0.021,
          46,
          0.021,
          98,
          1.365,
          99,
          3.426,
          108,
          3.121,
          109,
          2.868,
          121,
          4.151,
          163,
          3.426,
          394,
          3.426,
          977,
          5.743,
          981,
          6.774,
          982,
          6.774
        ]
      ],
      ['title/overview.html', [983, 3.962]],
      [
        'body/overview.html',
        [
          1,
          2.68,
          23,
          0.025,
          33,
          0.613,
          38,
          0.182,
          39,
          0.265,
          45,
          0.015,
          46,
          0.015,
          47,
          0.495,
          48,
          1.888,
          67,
          0.851,
          74,
          1.888,
          77,
          1.888,
          79,
          1.888,
          82,
          1.558,
          83,
          1.888,
          87,
          1.888,
          89,
          1.558,
          91,
          1.558,
          93,
          1.558,
          95,
          1.888,
          98,
          1.19,
          99,
          4.329,
          100,
          1.17,
          101,
          0.966,
          102,
          1.654,
          103,
          1.654,
          104,
          2.694,
          105,
          2.694,
          106,
          2.694,
          107,
          2.694,
          108,
          4.23,
          109,
          3.921,
          110,
          2.502,
          111,
          1.654,
          112,
          1.654,
          143,
          2.376,
          149,
          2.475,
          163,
          4.386,
          164,
          2.694,
          165,
          2.694,
          182,
          0.749,
          198,
          2.666,
          297,
          2.694,
          351,
          2.694,
          352,
          2.694,
          353,
          2.666,
          354,
          2.666,
          355,
          3.14,
          356,
          3.14,
          394,
          3.732,
          395,
          2.694,
          396,
          2.694,
          740,
          2.694,
          741,
          2.694,
          742,
          2.694,
          892,
          3.767,
          983,
          2.694,
          984,
          3.178,
          985,
          3.178,
          986,
          3.178
        ]
      ],
      ['title/miscellaneous/variables.html', [832, 3.076, 885, 1.918]],
      [
        'body/miscellaneous/variables.html',
        [
          0,
          2.486,
          1,
          1.548,
          11,
          0.328,
          14,
          0.662,
          23,
          0.025,
          25,
          0.724,
          35,
          4.081,
          45,
          0.016,
          46,
          0.016,
          63,
          1.589,
          64,
          2.452,
          65,
          2.404,
          156,
          2.011,
          162,
          2.897,
          178,
          2.395,
          181,
          1.877,
          222,
          1.442,
          230,
          1.963,
          236,
          4.079,
          358,
          1.963,
          361,
          1.667,
          377,
          2.325,
          402,
          2.395,
          403,
          3.34,
          419,
          1.804,
          495,
          5.537,
          496,
          3.846,
          534,
          1.963,
          539,
          2.155,
          554,
          2.155,
          555,
          1.963,
          557,
          1.804,
          563,
          2.155,
          564,
          1.963,
          565,
          2.155,
          566,
          2.155,
          567,
          2.155,
          568,
          2.155,
          569,
          2.155,
          570,
          3.006,
          571,
          1.963,
          572,
          2.155,
          573,
          2.155,
          574,
          2.155,
          575,
          2.155,
          576,
          2.155,
          577,
          2.155,
          578,
          3.412,
          666,
          2.395,
          689,
          2.716,
          832,
          2.395,
          835,
          2.716,
          836,
          4.362,
          855,
          2.716,
          856,
          2.716,
          857,
          2.716,
          858,
          2.716,
          859,
          2.716,
          860,
          4.362,
          861,
          4.964,
          885,
          2.155,
          950,
          4.72,
          952,
          4.72,
          954,
          2.716,
          966,
          2.716,
          987,
          4.469,
          988,
          4.469,
          989,
          3.204,
          990,
          3.204,
          991,
          3.204,
          992,
          3.204,
          993,
          3.204,
          994,
          3.204,
          995,
          3.204,
          996,
          3.204,
          997,
          3.204,
          998,
          3.204,
          999,
          3.204,
          1000,
          5.567,
          1001,
          3.204,
          1002,
          5.567,
          1003,
          3.204,
          1004,
          3.204,
          1005,
          3.204,
          1006,
          3.204,
          1007,
          3.204,
          1008,
          3.204,
          1009,
          4.469
        ]
      ]
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 23,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        '0',
        {
          _index: 290,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'injectables/LocalStorageService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        '0.69',
        {
          _index: 783,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      ['0.8.26', { _index: 884, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 833, title: {}, body: { 'coverage.html': {} } }],
      ['0/10', { _index: 828, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 851, title: {}, body: { 'coverage.html': {} } }],
      ['0/14', { _index: 854, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 827, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 837, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 850, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 852, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 853, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 829, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 834, title: {}, body: { 'coverage.html': {} } }],
      [
        '1',
        {
          _index: 297,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {}, 'overview.html': {} }
        }
      ],
      ['1.3.3', { _index: 881, title: {}, body: { 'dependencies.html': {} } }],
      ['1/1', { _index: 843, title: {}, body: { 'coverage.html': {} } }],
      ['1/2', { _index: 841, title: {}, body: { 'coverage.html': {} } }],
      ['1/6', { _index: 839, title: {}, body: { 'coverage.html': {} } }],
      ['100', { _index: 842, title: {}, body: { 'coverage.html': {} } }],
      [
        '1000',
        {
          _index: 634,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      ['11', { _index: 985, title: {}, body: { 'overview.html': {} } }],
      [
        '115',
        {
          _index: 781,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      ['16', { _index: 838, title: {}, body: { 'coverage.html': {} } }],
      [
        '170',
        {
          _index: 782,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      ['2', { _index: 986, title: {}, body: { 'overview.html': {} } }],
      ['2.5.4', { _index: 878, title: {}, body: { 'dependencies.html': {} } }],
      [
        '24',
        {
          _index: 632,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      ['3.1.0', { _index: 874, title: {}, body: { 'dependencies.html': {} } }],
      ['3.3.1', { _index: 879, title: {}, body: { 'dependencies.html': {} } }],
      ['4.1.3', { _index: 875, title: {}, body: { 'dependencies.html': {} } }],
      ['4/9', { _index: 831, title: {}, body: { 'coverage.html': {} } }],
      [
        '400',
        {
          _index: 422,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        '401',
        {
          _index: 421,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        '404',
        {
          _index: 700,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      ['44', { _index: 830, title: {}, body: { 'coverage.html': {} } }],
      ['5', { _index: 984, title: {}, body: { 'overview.html': {} } }],
      ['50', { _index: 840, title: {}, body: { 'coverage.html': {} } }],
      ['6.0.0', { _index: 882, title: {}, body: { 'dependencies.html': {} } }],
      [
        '60',
        {
          _index: 633,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        '7',
        {
          _index: 892,
          title: {},
          body: { 'index.html': {}, 'overview.html': {} }
        }
      ],
      ['7.0.0', { _index: 869, title: {}, body: { 'dependencies.html': {} } }],
      ['7.2.0', { _index: 866, title: {}, body: { 'dependencies.html': {} } }],
      ['7.2.1', { _index: 868, title: {}, body: { 'dependencies.html': {} } }],
      [
        '_credenti',
        {
          _index: 187,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        '_error',
        {
          _index: 448,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        '_global_',
        {
          _index: 432,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        '_id',
        {
          _index: 378,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'abstract',
        {
          _index: 284,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      ['access', { _index: 961, title: {}, body: { 'index.html': {} } }],
      [
        'accessor',
        {
          _index: 194,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {}
          }
        }
      ],
      [
        'accesstoken',
        {
          _index: 195,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'account',
        {
          _index: 686,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'activatedrout',
        {
          _index: 316,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'activatedroutesnapshot',
        {
          _index: 723,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'actual_compon',
        {
          _index: 97,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'ad',
        {
          _index: 553,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'add',
        {
          _index: 404,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'classes/RouteReusableStrategy.html': {}
          }
        }
      ],
      [
        'addinterceptor',
        { _index: 603, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'addinterceptor(interceptor',
        {
          _index: 597,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      ['addit', { _index: 924, title: {}, body: { 'index.html': {} } }],
      [
        'afterviewinit',
        {
          _index: 466,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'components/NotFoundComponent.html': {}
          }
        }
      ],
      [
        'allow',
        {
          _index: 555,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'classes/RouteReusableStrategy.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'alreadi',
        {
          _index: 770,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'alway',
        {
          _index: 575,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['angular', { _index: 891, title: {}, body: { 'index.html': {} } }],
      [
        'angular/anim',
        { _index: 865, title: {}, body: { 'dependencies.html': {} } }
      ],
      [
        'angular/cdk',
        { _index: 867, title: {}, body: { 'dependencies.html': {} } }
      ],
      ['angular/cli', { _index: 975, title: {}, body: { 'index.html': {} } }],
      [
        'angular/common',
        {
          _index: 116,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'components/SpinnerComponent.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/common/http',
        {
          _index: 32,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/UserService.html': {}
          }
        }
      ],
      [
        'angular/common/http/src/cli',
        {
          _index: 551,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'angular/common/http/src/interceptor',
        {
          _index: 558,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'angular/compil',
        { _index: 870, title: {}, body: { 'dependencies.html': {} } }
      ],
      [
        'angular/cor',
        {
          _index: 34,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/form',
        {
          _index: 170,
          title: {},
          body: {
            'modules/AuthenticationModule.html': {},
            'modules/DashboardModule.html': {},
            'components/LoginComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/http',
        { _index: 871, title: {}, body: { 'dependencies.html': {} } }
      ],
      [
        'angular/materi',
        {
          _index: 140,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} }
        }
      ],
      [
        'angular/platform',
        {
          _index: 120,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/BreadcrumbComponent.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/rout',
        {
          _index: 125,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'components/BreadcrumbComponent.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/servic',
        { _index: 872, title: {}, body: { 'dependencies.html': {} } }
      ],
      [
        'api_endpoint',
        {
          _index: 836,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'apierrormessag',
        {
          _index: 469,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'apierrortyp',
        {
          _index: 476,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'apiprefixinterceptor',
        {
          _index: 1,
          title: { 'interceptors/ApiPrefixInterceptor.html': {} },
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'modules/CoreModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'apiserviceurl',
        {
          _index: 477,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'app',
        {
          _index: 55,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'index.html': {}
          }
        }
      ],
      ['app.compon', { _index: 920, title: {}, body: { 'index.html': {} } }],
      [
        'app.component.css',
        { _index: 58, title: {}, body: { 'components/AppComponent.html': {} } }
      ],
      [
        'app.component.html',
        { _index: 60, title: {}, body: { 'components/AppComponent.html': {} } }
      ],
      ['app.module.t', { _index: 922, title: {}, body: { 'index.html': {} } }],
      ['app.routing.t', { _index: 923, title: {}, body: { 'index.html': {} } }],
      [
        'app/app.compon',
        { _index: 131, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'app/app.rout',
        { _index: 130, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'app/authentication/404/not',
        {
          _index: 171,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'app/authentication/authentication.rout',
        {
          _index: 174,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'app/authentication/login/login.compon',
        {
          _index: 175,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'app/authentication/signup/signup.compon',
        {
          _index: 176,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'app/cor',
        {
          _index: 132,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'app/core/authent',
        { _index: 360, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'app/core/authentication/authentication.servic',
        {
          _index: 153,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'app/core/class/baseapi.class',
        { _index: 795, title: {}, body: { 'injectables/UserService.html': {} } }
      ],
      [
        'app/core/http',
        { _index: 362, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'app/core/http/error',
        {
          _index: 541,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'app/core/loc',
        {
          _index: 233,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'app/core/rout',
        { _index: 364, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'app/core/servic',
        {
          _index: 367,
          title: {},
          body: {
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'app/dashboard/dashboard.rout',
        { _index: 399, title: {}, body: { 'modules/DashboardModule.html': {} } }
      ],
      [
        'app/dashboard/dashboard/dashboard.compon',
        { _index: 400, title: {}, body: { 'modules/DashboardModule.html': {} } }
      ],
      [
        'app/shar',
        {
          _index: 133,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {}
          }
        }
      ],
      [
        'app/shared/breadcrumb/breadcrumb.compon',
        { _index: 744, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'app/shared/button',
        { _index: 748, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'app/shared/form',
        { _index: 749, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'app/shared/layouts/blank/blank.compon',
        { _index: 745, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'app/shared/layouts/full/full.compon',
        { _index: 746, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'app/shared/spinner.compon',
        { _index: 747, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'appcompon',
        {
          _index: 48,
          title: { 'components/AppComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'appmodul',
        {
          _index: 99,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'approut',
        { _index: 129, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'array.isarray(obj[propnam',
        { _index: 809, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      ['asset', { _index: 925, title: {}, body: { 'index.html': {} } }],
      [
        'attribut',
        {
          _index: 445,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'augment',
        {
          _index: 552,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'auth',
        {
          _index: 229,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'authent',
        {
          _index: 158,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'authentication.credenti',
        {
          _index: 212,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/LoginComponent.html': {}
          }
        }
      ],
      [
        'authentication.loginpayload',
        {
          _index: 204,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'authentication.signuppayload',
        {
          _index: 218,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'authentication.us',
        {
          _index: 247,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'authenticationguard',
        {
          _index: 144,
          title: { 'guards/AuthenticationGuard.html': {} },
          body: {
            'guards/AuthenticationGuard.html': {},
            'modules/CoreModule.html': {}
          }
        }
      ],
      [
        'authenticationmodul',
        {
          _index: 163,
          title: { 'modules/AuthenticationModule.html': {} },
          body: {
            'modules/AuthenticationModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'authenticationrout',
        {
          _index: 173,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'authenticationservic',
        {
          _index: 149,
          title: { 'injectables/AuthenticationService.html': {} },
          body: {
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      ['autom', { _index: 944, title: {}, body: { 'index.html': {} } }],
      ['automat', { _index: 968, title: {}, body: { 'index.html': {} } }],
      [
        'back',
        {
          _index: 707,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'backgroundcolor',
        {
          _index: 777,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'base',
        {
          _index: 179,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'baseapiclass',
        {
          _index: 261,
          title: { 'injectables/BaseAPIClass.html': {} },
          body: {
            'injectables/BaseAPIClass.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'baseurl',
        {
          _index: 263,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'below',
        {
          _index: 572,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'better',
        {
          _index: 570,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'blank',
        {
          _index: 75,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'blank.component.html',
        {
          _index: 307,
          title: {},
          body: { 'components/BlankComponent.html': {} }
        }
      ],
      [
        'blankcompon',
        {
          _index: 74,
          title: { 'components/BlankComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'bodi',
        {
          _index: 245,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {}
          }
        }
      ],
      ['boilerpl', { _index: 893, title: {}, body: { 'index.html': {} } }],
      [
        'boolean',
        {
          _index: 152,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'classes/RouteReusableStrategy.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'bootstrap',
        {
          _index: 102,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'dependencies.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'bootstrap/ng',
        {
          _index: 128,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'breadcrumb',
        {
          _index: 310,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        "breadcrumb'},{'nam",
        {
          _index: 78,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'breadcrumb.component.html',
        {
          _index: 312,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'breadcrumb.component.scss',
        {
          _index: 311,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'breadcrumbcompon',
        {
          _index: 77,
          title: { 'components/BreadcrumbComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      ['brows', { _index: 982, title: {}, body: { 'modules.html': {} } }],
      [
        'browser',
        {
          _index: 121,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/BreadcrumbComponent.html': {},
            'dependencies.html': {},
            'index.html': {},
            'modules.html': {}
          }
        }
      ],
      [
        'browser/anim',
        { _index: 123, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'browseranimationsmodul',
        { _index: 122, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'browsermodul',
        { _index: 119, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      ['build', { _index: 930, title: {}, body: { 'index.html': {} } }],
      ['build:dev', { _index: 948, title: {}, body: { 'index.html': {} } }],
      ['build:loc', { _index: 953, title: {}, body: { 'index.html': {} } }],
      ['build:prod', { _index: 951, title: {}, body: { 'index.html': {} } }],
      [
        'button',
        {
          _index: 80,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'buttonloadercompon',
        {
          _index: 79,
          title: { 'components/ButtonLoaderComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'c',
        {
          _index: 642,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'ca',
        {
          _index: 640,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'canactiv',
        {
          _index: 146,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'catcherror',
        {
          _index: 413,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'chain',
        {
          _index: 559,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      ['chang', { _index: 970, title: {}, body: { 'index.html': {} } }],
      [
        'check',
        {
          _index: 201,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'class',
        {
          _index: 39,
          title: {
            'classes/HttpInterceptorHandler.html': {},
            'classes/RouteReusableStrategy.html': {}
          },
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'clear',
        {
          _index: 209,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {}
          }
        }
      ],
      [
        'clearal',
        {
          _index: 615,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'cleardata',
        {
          _index: 844,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'cleardata(typ',
        { _index: 887, title: {}, body: { 'miscellaneous/functions.html': {} } }
      ],
      [
        'clearitem',
        {
          _index: 616,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'clearitem(key',
        {
          _index: 621,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      ['cli', { _index: 973, title: {}, body: { 'index.html': {} } }],
      [
        'cluster_appmodul',
        {
          _index: 104,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_appmodule_bootstrap',
        {
          _index: 107,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_appmodule_declar',
        {
          _index: 105,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_appmodule_import',
        {
          _index: 106,
          title: {},
          body: { 'modules/AppModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_authenticationmodul',
        {
          _index: 164,
          title: {},
          body: { 'modules/AuthenticationModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_authenticationmodule_declar',
        {
          _index: 165,
          title: {},
          body: { 'modules/AuthenticationModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_authenticationmodule_import',
        {
          _index: 166,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'cluster_coremodul',
        {
          _index: 351,
          title: {},
          body: { 'modules/CoreModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_coremodule_provid',
        {
          _index: 352,
          title: {},
          body: { 'modules/CoreModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_dashboardmodul',
        {
          _index: 395,
          title: {},
          body: { 'modules/DashboardModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_dashboardmodule_declar',
        {
          _index: 396,
          title: {},
          body: { 'modules/DashboardModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_sharedmodul',
        {
          _index: 740,
          title: {},
          body: { 'modules/SharedModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_sharedmodule_declar',
        {
          _index: 741,
          title: {},
          body: { 'modules/SharedModule.html': {}, 'overview.html': {} }
        }
      ],
      [
        'cluster_sharedmodule_export',
        {
          _index: 742,
          title: {},
          body: { 'modules/SharedModule.html': {}, 'overview.html': {} }
        }
      ],
      ['code', { _index: 914, title: {}, body: { 'index.html': {} } }],
      ['command', { _index: 976, title: {}, body: { 'index.html': {} } }],
      ['common', { _index: 919, title: {}, body: { 'index.html': {} } }],
      [
        'commonmodul',
        {
          _index: 115,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      ['compil', { _index: 907, title: {}, body: { 'index.html': {} } }],
      ['compodoc', { _index: 964, title: {}, body: { 'index.html': {} } }],
      ['compodoc:gen', { _index: 959, title: {}, body: { 'index.html': {} } }],
      ['compodoc:serv', { _index: 960, title: {}, body: { 'index.html': {} } }],
      [
        'compon',
        {
          _index: 47,
          title: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'index.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'component_templ',
        {
          _index: 72,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'configur',
        {
          _index: 554,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "console.error('request",
        {
          _index: 435,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        "console.log('not",
        {
          _index: 157,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'console.log(`login',
        {
          _index: 676,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'console.log(`signup',
        {
          _index: 765,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'console.log(credenti',
        {
          _index: 674,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'console.log(errormessageservic',
        {
          _index: 498,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'console.log(this._error',
        {
          _index: 460,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'console.log(us',
        {
          _index: 764,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'const',
        {
          _index: 235,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'constructor',
        {
          _index: 14,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'constructor(errormessageservic',
        {
          _index: 480,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'constructor(httpcli',
        {
          _index: 196,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'injectables/UserService.html': {}
          }
        }
      ],
      [
        'constructor(httphandl',
        { _index: 605, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'constructor(next',
        {
          _index: 600,
          title: {},
          body: { 'classes/HttpInterceptorHandler.html': {} }
        }
      ],
      [
        'constructor(priv',
        {
          _index: 501,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'constructor(protect',
        {
          _index: 285,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'injectables/UserService.html': {}
          }
        }
      ],
      [
        'constructor(publ',
        {
          _index: 531,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'constructor(rout',
        {
          _index: 147,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'context',
        {
          _index: 860,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'control',
        {
          _index: 478,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'controlnam',
        {
          _index: 479,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'copytoclipboard',
        { _index: 799, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'copytoclipboard(valu',
        { _index: 802, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'core',
        {
          _index: 876,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} }
        }
      ],
      [
        'coremodul',
        {
          _index: 108,
          title: { 'modules/CoreModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/CoreModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'coverag',
        {
          _index: 824,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {} }
        }
      ],
      [
        'creat',
        {
          _index: 264,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'create(payload',
        {
          _index: 271,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'createcooki',
        {
          _index: 845,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'createcookie(nam',
        {
          _index: 628,
          title: {},
          body: {
            'injectables/LocalStorageService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'createdat',
        {
          _index: 387,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'createform',
        {
          _index: 654,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'credenti',
        {
          _index: 181,
          title: { 'interfaces/Credentials.html': {} },
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/Credentials.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'credentialskey',
        {
          _index: 236,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'curr',
        {
          _index: 731,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'curr.routeconfig',
        {
          _index: 738,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'custom',
        {
          _index: 417,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'dashboard',
        {
          _index: 393,
          title: {},
          body: { 'components/DashboardComponent.html': {} }
        }
      ],
      [
        'dashboard.component.css',
        {
          _index: 390,
          title: {},
          body: { 'components/DashboardComponent.html': {} }
        }
      ],
      [
        'dashboard.component.html',
        {
          _index: 391,
          title: {},
          body: { 'components/DashboardComponent.html': {} }
        }
      ],
      [
        'dashboardcompon',
        {
          _index: 82,
          title: { 'components/DashboardComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'dashboardmodul',
        {
          _index: 394,
          title: { 'modules/DashboardModule.html': {} },
          body: {
            'modules/DashboardModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'dashboardrout',
        { _index: 398, title: {}, body: { 'modules/DashboardModule.html': {} } }
      ],
      [
        'data',
        {
          _index: 715,
          title: {},
          body: {
            'classes/RouteReusableStrategy.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'date',
        {
          _index: 385,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'injectables/LocalStorageService.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'date.now',
        {
          _index: 459,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'date.settime(date.gettim',
        {
          _index: 631,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'date.togmtstr',
        {
          _index: 635,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'day',
        {
          _index: 629,
          title: {},
          body: {
            'injectables/LocalStorageService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'declar',
        {
          _index: 101,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'modules/DashboardModule.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'modules/SharedModule.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'default',
        {
          _index: 64,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthenticationService.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'defin',
        {
          _index: 15,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'definit',
        {
          _index: 716,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {}, 'index.html': {} }
        }
      ],
      [
        'delet',
        {
          _index: 265,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'delete(id',
        {
          _index: 273,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'deleteal',
        {
          _index: 266,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'depend',
        {
          _index: 100,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'modules/SharedModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'descript',
        {
          _index: 7,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'injectables/AuthenticationService.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/HttpService.html': {},
            'classes/RouteReusableStrategy.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'detachedroutehandl',
        {
          _index: 725,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'detachedtre',
        {
          _index: 735,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'dev',
        {
          _index: 966,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      ['develop', { _index: 900, title: {}, body: { 'index.html': {} } }],
      [
        'direct',
        {
          _index: 70,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'directive|pipe|service|class|modul',
        { _index: 972, title: {}, body: { 'index.html': {} } }
      ],
      [
        'directli',
        {
          _index: 571,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'disabl',
        {
          _index: 565,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['dist', { _index: 906, title: {}, body: { 'index.html': {} } }],
      [
        'document',
        {
          _index: 778,
          title: {},
          body: {
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'document.body.appendchild(selbox',
        { _index: 819, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'document.body.removechild(selbox',
        { _index: 823, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'document.cooki',
        {
          _index: 636,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'document.cookie.split',
        {
          _index: 641,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        "document.createelement('textarea",
        { _index: 812, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        "document.execcommand('copi",
        { _index: 822, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'dom',
        {
          _index: 50,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        "don't",
        {
          _index: 685,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        "don\\'t",
        {
          _index: 692,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'dynam',
        {
          _index: 564,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'dependencies.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'e',
        {
          _index: 503,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'e.error',
        {
          _index: 510,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'e.serviceurl',
        {
          _index: 506,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'e.typ',
        {
          _index: 504,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      ['e2', { _index: 910, title: {}, body: { 'index.html': {} } }],
      [
        'element',
        {
          _index: 69,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'email',
        {
          _index: 377,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'emailhash',
        {
          _index: 382,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'emailverifi',
        {
          _index: 381,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'enabl',
        {
          _index: 576,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['enalb', { _index: 978, title: {}, body: { 'index.html': {} } }],
      [
        'encapsul',
        {
          _index: 773,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      ['end', { _index: 911, title: {}, body: { 'index.html': {} } }],
      [
        'enjoy',
        {
          _index: 769,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'enter',
        {
          _index: 689,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['entri', { _index: 932, title: {}, body: { 'index.html': {} } }],
      [
        'entrycompon',
        { _index: 751, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'env',
        {
          _index: 950,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'env/environ',
        {
          _index: 36,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'environ',
        {
          _index: 35,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'coverage.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'environment.product',
        {
          _index: 433,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'environment.serverurl',
        {
          _index: 10,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'error',
        {
          _index: 85,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'error_object',
        {
          _index: 496,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'errorhandl',
        {
          _index: 406,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorhandler(respons',
        {
          _index: 408,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorhandlerinterceptor',
        {
          _index: 353,
          title: { 'interceptors/ErrorHandlerInterceptor.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'errorkey',
        {
          _index: 470,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errormessag',
        {
          _index: 489,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errormessage.replace(/{{field}}/g',
        {
          _index: 520,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errormessage.replace(/{{value}}/g',
        {
          _index: 519,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errormessageobject',
        {
          _index: 437,
          title: { 'interfaces/ErrorMessageObject.html': {} },
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'errormessageservic',
        {
          _index: 354,
          title: { 'injectables/ErrorMessageService.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'errormessageservice.errors$.subscrib',
        {
          _index: 502,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errormodel',
        {
          _index: 441,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'errormodel.errormessageobject',
        {
          _index: 453,
          title: {},
          body: {
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {}
          }
        }
      ],
      [
        'errorobj',
        {
          _index: 487,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errorobj[typ',
        {
          _index: 518,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errorobject',
        {
          _index: 471,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'errorrespons',
        {
          _index: 423,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorresponse.error',
        {
          _index: 424,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorresponse.error.error',
        {
          _index: 431,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorresponse.error.valid',
        {
          _index: 425,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorresponse.error.validation.errors[key',
        {
          _index: 428,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'errorresponse.error.validation.keys.foreach((key',
        {
          _index: 426,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'event',
        {
          _index: 326,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'eventemitt',
        {
          _index: 223,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {}
          }
        }
      ],
      [
        'except',
        {
          _index: 567,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'expir',
        {
          _index: 630,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'explicit',
        {
          _index: 710,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'export',
        {
          _index: 38,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'extend',
        {
          _index: 544,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'classes/RouteReusableStrategy.html': {},
            'injectables/UserService.html': {}
          }
        }
      ],
      [
        'extens',
        {
          _index: 566,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'fals',
        {
          _index: 162,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'components/LoginComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'field',
        { _index: 996, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'file',
        {
          _index: 4,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'filter',
        {
          _index: 322,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/FormErrorWrapperComponent.html': {}
          }
        }
      ],
      [
        'filter(ev',
        {
          _index: 325,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'filter(rout',
        {
          _index: 332,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'filterobject',
        {
          _index: 279,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'filterobject[key',
        {
          _index: 292,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'filterobject[key].tostring().length',
        {
          _index: 294,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'final',
        {
          _index: 667,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'find',
        {
          _index: 704,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'firstnam',
        {
          _index: 379,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'fitlerkey',
        {
          _index: 287,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'fitlerkeys.foreach((key',
        {
          _index: 291,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'fitlerkeys.length',
        {
          _index: 289,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'fix',
        { _index: 814, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      ['folder', { _index: 896, title: {}, body: { 'index.html': {} } }],
      ['font', { _index: 927, title: {}, body: { 'index.html': {} } }],
      [
        'forgot',
        {
          _index: 684,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'form',
        {
          _index: 84,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'formateerror',
        {
          _index: 472,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'formateerror(errormessag',
        {
          _index: 486,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'formateerror(errorobject[errorkey],control.errors[errorkey',
        {
          _index: 524,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'formbuild',
        {
          _index: 656,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'formerrorwrappercompon',
        {
          _index: 83,
          title: { 'components/FormErrorWrapperComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'formgroup',
        {
          _index: 662,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'formsmodul',
        {
          _index: 169,
          title: {},
          body: {
            'modules/AuthenticationModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'found',
        {
          _index: 695,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        "found'},{'nam",
        {
          _index: 92,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'found.compon',
        {
          _index: 172,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'found.component.css',
        {
          _index: 696,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'found.component.html',
        {
          _index: 697,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'found.component.t',
        {
          _index: 694,
          title: {},
          body: { 'components/NotFoundComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'found.component.ts:9',
        {
          _index: 698,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'full',
        {
          _index: 88,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'full.component.html',
        {
          _index: 527,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'full.component.scss',
        {
          _index: 526,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'fullcompon',
        {
          _index: 87,
          title: { 'components/FullComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'function',
        {
          _index: 593,
          title: { 'miscellaneous/functions.html': {} },
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/NotFoundComponent.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'futur',
        {
          _index: 733,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'future.data.reus',
        {
          _index: 739,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'future.routeconfig',
        {
          _index: 737,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      ['g', { _index: 974, title: {}, body: { 'index.html': {} } }],
      ['gener', { _index: 909, title: {}, body: { 'index.html': {} } }],
      [
        'get',
        {
          _index: 226,
          title: { 'index.html': {} },
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'getaccesstoken',
        {
          _index: 227,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'getal',
        {
          _index: 267,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'getall(filterobject',
        {
          _index: 277,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'getbyid',
        {
          _index: 268,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'getbyid(id',
        {
          _index: 280,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'getcredenti',
        {
          _index: 224,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'getdata',
        {
          _index: 846,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'getdata(typ',
        { _index: 888, title: {}, body: { 'miscellaneous/functions.html': {} } }
      ],
      [
        'geterror',
        {
          _index: 455,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'getitem',
        {
          _index: 617,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'getitem(key',
        {
          _index: 623,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'getsessionnam',
        {
          _index: 847,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'given',
        {
          _index: 714,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      ['global', { _index: 935, title: {}, body: { 'index.html': {} } }],
      ['go', { _index: 894, title: {}, body: { 'index.html': {} } }],
      [
        'guard',
        {
          _index: 143,
          title: { 'guards/AuthenticationGuard.html': {} },
          body: { 'guards/AuthenticationGuard.html': {}, 'overview.html': {} }
        }
      ],
      [
        'handl',
        {
          _index: 599,
          title: {},
          body: { 'classes/HttpInterceptorHandler.html': {} }
        }
      ],
      [
        'handle(request',
        {
          _index: 414,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'handler',
        {
          _index: 405,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'handler.interceptor',
        {
          _index: 542,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'handler.interceptor.t',
        {
          _index: 403,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'handler.interceptor.ts:22',
        {
          _index: 407,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'handler.interceptor.ts:29',
        {
          _index: 412,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'handler.interceptor.ts:39',
        {
          _index: 410,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'haserror',
        {
          _index: 473,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'here',
        {
          _index: 418,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'home',
        {
          _index: 706,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'html',
        {
          _index: 68,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'http://development.com',
        {
          _index: 1004,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http://development.com/v1',
        {
          _index: 1005,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http://localhost',
        {
          _index: 1006,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http://localhost:1355',
        {
          _index: 1001,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http://localhost:1355/v1',
        {
          _index: 1003,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http://localhost:4200',
        { _index: 947, title: {}, body: { 'index.html': {} } }
      ],
      [
        'http://localhost:8080',
        { _index: 963, title: {}, body: { 'index.html': {} } }
      ],
      [
        'http://productionurl.com',
        {
          _index: 1009,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'http_dynamic_interceptor',
        {
          _index: 578,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'http_interceptor',
        {
          _index: 358,
          title: {},
          body: {
            'modules/CoreModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'httpclient',
        {
          _index: 197,
          title: { 'interfaces/HttpClient.html': {} },
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'modules/CoreModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'httpclient(handler).request(method',
        {
          _index: 591,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httpclientmodul',
        {
          _index: 117,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/CoreModule.html': {} }
        }
      ],
      [
        'httpevent',
        {
          _index: 30,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httphandler',
        {
          _index: 20,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httpinterceptor',
        {
          _index: 31,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httpinterceptorhandl',
        {
          _index: 560,
          title: { 'classes/HttpInterceptorHandler.html': {} },
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'httpinterceptorhandler(next',
        {
          _index: 589,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httprequest',
        {
          _index: 18,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'httprespons',
        {
          _index: 409,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'https://github.com/angular/angular/issues/18374',
        {
          _index: 713,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'https://github.com/microsoft/typescript/issues/13897',
        {
          _index: 550,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'https://localhost:44311',
        {
          _index: 1007,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'httpservic',
        {
          _index: 361,
          title: { 'injectables/HttpService.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'id',
        {
          _index: 275,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      ['identifi', { _index: 825, title: {}, body: { 'coverage.html': {} } }],
      ['imag', { _index: 926, title: {}, body: { 'index.html': {} } }],
      [
        'implement',
        {
          _index: 40,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'import',
        {
          _index: 29,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'index',
        {
          _index: 11,
          title: { 'index.html': {} },
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interfaces/Credentials.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['index.html', { _index: 931, title: {}, body: { 'index.html': {} } }],
      [
        'info',
        {
          _index: 2,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'inject',
        {
          _index: 33,
          title: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'injectables/ErrorMessageService.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {}
          },
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'inject(docu',
        {
          _index: 790,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'inject(http_dynamic_interceptor',
        {
          _index: 580,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'injectiontoken',
        {
          _index: 539,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'injector',
        {
          _index: 540,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'input',
        {
          _index: 315,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      ['instal', { _index: 897, title: {}, body: { 'index.html': {} } }],
      [
        'instanc',
        {
          _index: 538,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'instanceof',
        {
          _index: 327,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'instruct',
        {
          _index: 690,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'intercept',
        {
          _index: 13,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'intercept(request',
        {
          _index: 17,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'interceptor',
        {
          _index: 0,
          title: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          },
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'interceptortyp',
        {
          _index: 596,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'interfac',
        {
          _index: 182,
          title: {
            'interfaces/Credentials.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/HttpClient.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          },
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'isauthent',
        {
          _index: 189,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'isload',
        {
          _index: 346,
          title: {},
          body: {
            'components/ButtonLoaderComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'isspinnervis',
        {
          _index: 775,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'jqueri',
        {
          _index: 114,
          title: {},
          body: { 'modules/AppModule.html': {}, 'dependencies.html': {} }
        }
      ],
      ['js', { _index: 877, title: {}, body: { 'dependencies.html': {} } }],
      [
        'json.parse(savedcredenti',
        {
          _index: 240,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'json.stringify(credenti',
        {
          _index: 258,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'key',
        {
          _index: 429,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/LocalStorageService.html': {}
          }
        }
      ],
      [
        'key}=${filterobject[key',
        {
          _index: 295,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'label',
        {
          _index: 347,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'lastlogin',
        {
          _index: 384,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'lastnam',
        {
          _index: 380,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      ['latest', { _index: 965, title: {}, body: { 'index.html': {} } }],
      ['launch', { _index: 899, title: {}, body: { 'index.html': {} } }],
      [
        'layout',
        {
          _index: 306,
          title: {},
          body: {
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/FullComponent.html': {}
          }
        }
      ],
      [
        "layout'},{'nam",
        {
          _index: 76,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'legend',
        {
          _index: 67,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'overview.html': {}
          }
        }
      ],
      ['lint', { _index: 949, title: {}, body: { 'index.html': {} } }],
      [
        'loader',
        {
          _index: 343,
          title: {},
          body: {
            'components/ButtonLoaderComponent.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        "loader'},{'nam",
        {
          _index: 81,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'loader.component.css',
        {
          _index: 344,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'loader.component.html',
        {
          _index: 345,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'loader.component.t',
        {
          _index: 342,
          title: {},
          body: {
            'components/ButtonLoaderComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'loader.component.ts:10',
        {
          _index: 349,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'loader.component.ts:12',
        {
          _index: 348,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'loader.component.ts:16',
        {
          _index: 350,
          title: {},
          body: { 'components/ButtonLoaderComponent.html': {} }
        }
      ],
      [
        'loader/button',
        {
          _index: 341,
          title: {},
          body: {
            'components/ButtonLoaderComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'local',
        {
          _index: 954,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'localhost:4200',
        { _index: 903, title: {}, body: { 'index.html': {} } }
      ],
      [
        'localstorag',
        {
          _index: 613,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'localstorageservic',
        {
          _index: 198,
          title: { 'injectables/LocalStorageService.html': {} },
          body: {
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/LocalStorageService.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'log',
        {
          _index: 208,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'login',
        {
          _index: 190,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/LoginComponent.html': {}
          }
        }
      ],
      [
        "login'},{'nam",
        {
          _index: 90,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'login(payload',
        {
          _index: 203,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'login(this.loginform.valu',
        {
          _index: 671,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'login.component.css',
        {
          _index: 650,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'login.component.html',
        {
          _index: 651,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'login/logout',
        {
          _index: 184,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'logincompon',
        {
          _index: 89,
          title: { 'components/LoginComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'modules/AuthenticationModule.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'loginform',
        {
          _index: 652,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'loginpayload',
        {
          _index: 373,
          title: { 'interfaces/LoginPayload.html': {} },
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'logout',
        {
          _index: 191,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      ['luxon', { _index: 880, title: {}, body: { 'dependencies.html': {} } }],
      ['main.t', { _index: 937, title: {}, body: { 'index.html': {} } }],
      [
        'make',
        {
          _index: 546,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'map',
        {
          _index: 231,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {}
          }
        }
      ],
      [
        'map(',
        {
          _index: 508,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'map((bodi',
        {
          _index: 243,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {}
          }
        }
      ],
      [
        'map(rout',
        {
          _index: 329,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'matbuttonmodul',
        { _index: 137, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'matcardmodul',
        { _index: 134, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'match',
        {
          _index: 46,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'matformfieldmodul',
        { _index: 138, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'maticonmodul',
        { _index: 135, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'matinputmodul',
        { _index: 139, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'mattoolbarmodul',
        { _index: 136, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'max',
        {
          _index: 515,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'mergemap',
        {
          _index: 323,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'mergemap(rout',
        {
          _index: 335,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'messag',
        {
          _index: 444,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'message.service.t',
        {
          _index: 447,
          title: {},
          body: {
            'injectables/ErrorMessageService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'message.service.ts:10',
        {
          _index: 456,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'message.service.ts:14',
        {
          _index: 452,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'message.service.ts:25',
        {
          _index: 450,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'message.service.ts:5',
        {
          _index: 454,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'message.service.ts:6',
        {
          _index: 449,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'metadata',
        {
          _index: 53,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'method',
        {
          _index: 12,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'min',
        {
          _index: 514,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'miscellan',
        {
          _index: 885,
          title: {
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {}
          },
          body: {
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'modul',
        {
          _index: 98,
          title: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'modules.html': {}
          },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'modules/SharedModule.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'multi',
        { _index: 369, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'name',
        {
          _index: 24,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'nameeq',
        {
          _index: 639,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'namespac',
        {
          _index: 372,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      ['navig', { _index: 967, title: {}, body: { 'index.html': {} } }],
      [
        'navigationcancel',
        {
          _index: 788,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'navigationend',
        {
          _index: 321,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'navigationerror',
        {
          _index: 789,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'navigationstart',
        {
          _index: 787,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'need',
        {
          _index: 419,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'new',
        {
          _index: 222,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'coverage.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'next',
        {
          _index: 19,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'next.handle(request',
        {
          _index: 44,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'ng',
        {
          _index: 127,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'dependencies.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'ngafterviewinit',
        {
          _index: 474,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'components/NotFoundComponent.html': {}
          }
        }
      ],
      [
        'ngbmodul',
        {
          _index: 126,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'ngbmodule.forroot',
        {
          _index: 141,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'ngmodul',
        {
          _index: 118,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'ngonchang',
        {
          _index: 475,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'ngondestroy',
        {
          _index: 776,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'ngoninit',
        {
          _index: 314,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'notfoundcompon',
        {
          _index: 91,
          title: { 'components/NotFoundComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'modules/AuthenticationModule.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'now',
        {
          _index: 768,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      ['npm', { _index: 898, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 220,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'classes/RouteReusableStrategy.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'number',
        {
          _index: 440,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'obj',
        { _index: 806, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'obj[propnam',
        { _index: 808, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'obj[propname].length',
        { _index: 810, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'object',
        {
          _index: 495,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'object.keys(filterobject',
        {
          _index: 288,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'object.keys(this.errorobject',
        {
          _index: 512,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'observ',
        {
          _index: 28,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'onchang',
        {
          _index: 465,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'ondestroy',
        {
          _index: 772,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'oninit',
        {
          _index: 309,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      ['open', { _index: 902, title: {}, body: { 'index.html': {} } }],
      [
        'option',
        {
          _index: 26,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'origin',
        {
          _index: 545,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'out',
        {
          _index: 112,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'overrid',
        {
          _index: 563,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'overview',
        {
          _index: 983,
          title: { 'overview.html': {} },
          body: { 'overview.html': {} }
        }
      ],
      ['packag', { _index: 864, title: { 'dependencies.html': {} }, body: {} }],
      [
        'page',
        {
          _index: 701,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'pageinfo',
        {
          _index: 313,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'param',
        {
          _index: 256,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'paramet',
        {
          _index: 22,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'pass',
        {
          _index: 500,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'password',
        {
          _index: 375,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'passwordlastupd',
        {
          _index: 383,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'path',
        {
          _index: 637,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'payload',
        {
          _index: 206,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {}
          }
        }
      ],
      [
        'payload).pip',
        {
          _index: 242,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {}
          }
        }
      ],
      [
        'per',
        {
          _index: 579,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'phone',
        {
          _index: 386,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'pipe',
        {
          _index: 252,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'pipe(catcherror(error',
        {
          _index: 415,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'place',
        {
          _index: 556,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'pleas',
        { _index: 997, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      ['point', { _index: 933, title: {}, body: { 'index.html': {} } }],
      ['pointmain', { _index: 942, title: {}, body: { 'index.html': {} } }],
      ['polyfil', { _index: 939, title: {}, body: { 'index.html': {} } }],
      ['polyfills.t', { _index: 938, title: {}, body: { 'index.html': {} } }],
      [
        "post('/logout",
        {
          _index: 249,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'prefix',
        {
          _index: 8,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'prefix.interceptor.t',
        {
          _index: 6,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'prefix.interceptor.ts:15',
        {
          _index: 16,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'prefix.interceptor.ts:18',
        {
          _index: 21,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        "preloader').fadeout",
        {
          _index: 699,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'primari',
        {
          _index: 334,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'privat',
        {
          _index: 154,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'prod',
        {
          _index: 1008,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'product',
        {
          _index: 952,
          title: {},
          body: { 'index.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      ['project', { _index: 895, title: {}, body: { 'index.html': {} } }],
      [
        'proper',
        {
          _index: 186,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'properli',
        {
          _index: 548,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'properti',
        {
          _index: 61,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'propnam',
        { _index: 807, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'provid',
        {
          _index: 103,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'public',
        {
          _index: 188,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      ['pwa', { _index: 956, title: {}, body: { 'index.html': {} } }],
      ['pwa:build:dev', { _index: 955, title: {}, body: { 'index.html': {} } }],
      ['pwa:build:loc', { _index: 958, title: {}, body: { 'index.html': {} } }],
      [
        'pwa:build:prod',
        { _index: 957, title: {}, body: { 'index.html': {} } }
      ],
      [
        'querystr',
        {
          _index: 286,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'querystring.slice(0',
        {
          _index: 298,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'querystring[querystring.length',
        {
          _index: 296,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        're',
        {
          _index: 543,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'reactiveformsmodul',
        {
          _index: 168,
          title: {},
          body: {
            'modules/AuthenticationModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'readabl',
        {
          _index: 573,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'readcooki',
        {
          _index: 848,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'readcookie(nam',
        {
          _index: 638,
          title: {},
          body: {
            'injectables/LocalStorageService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'recov',
        {
          _index: 688,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'redirect',
        {
          _index: 159,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'regist',
        {
          _index: 767,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      ['reload', { _index: 969, title: {}, body: { 'index.html': {} } }],
      [
        'rememb',
        {
          _index: 683,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'removeempti',
        { _index: 800, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'removeempty(obj',
        { _index: 804, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'removeinterceptor',
        { _index: 604, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'removeinterceptor(interceptortyp',
        {
          _index: 592,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'replac',
        {
          _index: 185,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'replaceurl',
        {
          _index: 161,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/LoginComponent.html': {}
          }
        }
      ],
      [
        'request',
        {
          _index: 9,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'request(method',
        {
          _index: 587,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'request.clon',
        {
          _index: 41,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'request.url',
        {
          _index: 43,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'requir',
        {
          _index: 861,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'require.context',
        { _index: 998, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'requiredlength',
        {
          _index: 516,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'reset',
        {
          _index: 111,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'components/LoginComponent.html': {},
            'modules/SharedModule.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'resetpassword',
        {
          _index: 655,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'resetpasswordform',
        {
          _index: 653,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'respons',
        {
          _index: 411,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'response.statu',
        {
          _index: 420,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'response.url',
        {
          _index: 430,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'result',
        {
          _index: 45,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'retriev',
        {
          _index: 717,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'retrieve(rout',
        {
          _index: 722,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'return',
        {
          _index: 27,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'reus',
        {
          _index: 711,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'reusabl',
        {
          _index: 365,
          title: {},
          body: {
            'modules/CoreModule.html': {},
            'classes/RouteReusableStrategy.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'rgba(0',
        {
          _index: 780,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'root',
        {
          _index: 56,
          title: {},
          body: { 'components/AppComponent.html': {}, 'index.html': {} }
        }
      ],
      [
        "root'},{'nam",
        {
          _index: 73,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'rootobject',
        {
          _index: 442,
          title: { 'interfaces/RootObject.html': {} },
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'rout',
        {
          _index: 331,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'route.data',
        {
          _index: 336,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'route.firstchild',
        {
          _index: 330,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'route.outlet',
        {
          _index: 333,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'router',
        {
          _index: 148,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'routereusablestrategi',
        {
          _index: 363,
          title: { 'classes/RouteReusableStrategy.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'classes/RouteReusableStrategy.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'routereusestrategi',
        {
          _index: 359,
          title: {},
          body: {
            'modules/CoreModule.html': {},
            'classes/RouteReusableStrategy.html': {}
          }
        }
      ],
      [
        'routermodul',
        {
          _index: 124,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {}
          }
        }
      ],
      [
        'routermodule.forchild(authenticationrout',
        {
          _index: 177,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'routermodule.forchild(dashboardrout',
        { _index: 401, title: {}, body: { 'modules/DashboardModule.html': {} } }
      ],
      [
        'routermodule.forroot(approut',
        { _index: 142, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      ['run', { _index: 946, title: {}, body: { 'index.html': {} } }],
      [
        'rxj',
        {
          _index: 37,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'rxjs/oper',
        {
          _index: 232,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'savedcredenti',
        {
          _index: 237,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      ['scaffold', { _index: 971, title: {}, body: { 'index.html': {} } }],
      ['script', { _index: 945, title: {}, body: { 'index.html': {} } }],
      [
        'see',
        {
          _index: 549,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'seem',
        {
          _index: 702,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'selbox',
        { _index: 811, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.focu',
        { _index: 820, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.select',
        { _index: 821, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.style.left',
        { _index: 815, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.style.opac',
        { _index: 817, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.style.posit',
        { _index: 813, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.style.top',
        { _index: 816, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selbox.valu',
        { _index: 818, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'selector',
        {
          _index: 54,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'sent',
        {
          _index: 691,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      ['server', { _index: 901, title: {}, body: { 'index.html': {} } }],
      [
        'serverbaseurl',
        {
          _index: 1000,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'serverurl',
        {
          _index: 1002,
          title: {},
          body: { 'miscellaneous/variables.html': {} }
        }
      ],
      ['servic', { _index: 916, title: {}, body: { 'index.html': {} } }],
      [
        'serviceurl',
        {
          _index: 439,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'session',
        {
          _index: 371,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'sessionid',
        {
          _index: 250,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'sessionstorag',
        {
          _index: 614,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'set',
        {
          _index: 214,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {}
          }
        }
      ],
      [
        'set(error',
        {
          _index: 451,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'setcredenti',
        {
          _index: 192,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'setcredentials(credenti',
        {
          _index: 211,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'setdata',
        {
          _index: 849,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} }
        }
      ],
      [
        'setdata(typ',
        { _index: 889, title: {}, body: { 'miscellaneous/functions.html': {} } }
      ],
      [
        'setitem',
        {
          _index: 618,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'setitem(key',
        {
          _index: 625,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      ['share', { _index: 918, title: {}, body: { 'index.html': {} } }],
      [
        'sharedmodul',
        {
          _index: 109,
          title: { 'modules/SharedModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/SharedModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      ['shell', { _index: 921, title: {}, body: { 'index.html': {} } }],
      [
        'shouldattach',
        {
          _index: 718,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'shouldattach(rout',
        {
          _index: 726,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'shoulddetach',
        {
          _index: 719,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'shoulddetach(rout',
        {
          _index: 728,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'shouldreuserout',
        {
          _index: 720,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'shouldreuseroute(futur',
        {
          _index: 730,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'sign',
        {
          _index: 682,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'signup',
        {
          _index: 193,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        "signup'},{'nam",
        {
          _index: 94,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'signup(payload',
        {
          _index: 217,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'signup(this.signupform.valu',
        {
          _index: 762,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'signup.component.css',
        {
          _index: 753,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'signup.component.html',
        {
          _index: 754,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'signupcompon',
        {
          _index: 93,
          title: { 'components/SignupComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'modules/AuthenticationModule.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'signupform',
        {
          _index: 755,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'signuppayload',
        {
          _index: 376,
          title: { 'interfaces/SignupPayload.html': {} },
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'coverage.html': {}
          }
        }
      ],
      ['singl', { _index: 917, title: {}, body: { 'index.html': {} } }],
      ['singleton', { _index: 915, title: {}, body: { 'index.html': {} } }],
      [
        'skip',
        {
          _index: 537,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'skiperrorhandl',
        {
          _index: 535,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'someth',
        {
          _index: 434,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      ['sound', { _index: 928, title: {}, body: { 'index.html': {} } }],
      [
        'sourc',
        {
          _index: 3,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthenticationGuard.html': {},
            'modules/AuthenticationModule.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'modules/CoreModule.html': {},
            'interfaces/Credentials.html': {},
            'components/DashboardComponent.html': {},
            'modules/DashboardModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/NotFoundComponent.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'index.html': {}
          }
        }
      ],
      [
        'spec\\.t',
        { _index: 999, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'specif',
        {
          _index: 569,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'spinner',
        {
          _index: 96,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'spinnercompon',
        {
          _index: 95,
          title: { 'components/SpinnerComponent.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'modules/SharedModule.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      ['src', { _index: 913, title: {}, body: { 'index.html': {} } }],
      [
        'src/.../authentication.service.t',
        { _index: 989, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../constants.t',
        { _index: 987, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../environment.dev.t',
        { _index: 992, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../environment.local.t',
        { _index: 993, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../environment.prod.t',
        { _index: 994, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../environment.t',
        { _index: 991, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../error',
        { _index: 990, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../http.service.t',
        { _index: 995, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/.../local',
        { _index: 886, title: {}, body: { 'miscellaneous/functions.html': {} } }
      ],
      [
        'src/.../test.t',
        { _index: 988, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'src/app/app.component.t',
        {
          _index: 52,
          title: {},
          body: { 'components/AppComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/app.component.ts:9',
        { _index: 66, title: {}, body: { 'components/AppComponent.html': {} } }
      ],
      [
        'src/app/app.module.t',
        { _index: 113, title: {}, body: { 'modules/AppModule.html': {} } }
      ],
      [
        'src/app/authentication/404/not',
        {
          _index: 693,
          title: {},
          body: { 'components/NotFoundComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/authentication/authentication.module.t',
        {
          _index: 167,
          title: {},
          body: { 'modules/AuthenticationModule.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.t',
        {
          _index: 649,
          title: {},
          body: { 'components/LoginComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:13',
        {
          _index: 663,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:14',
        {
          _index: 664,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:15',
        {
          _index: 657,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:17',
        {
          _index: 665,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:24',
        {
          _index: 660,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:26',
        {
          _index: 659,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:49',
        {
          _index: 661,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/login/login.component.ts:53',
        {
          _index: 658,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.t',
        {
          _index: 752,
          title: {},
          body: { 'components/SignupComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:13',
        {
          _index: 761,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:14',
        {
          _index: 756,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:17',
        {
          _index: 760,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:24',
        {
          _index: 758,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:26',
        {
          _index: 759,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/authentication/signup/signup.component.ts:47',
        {
          _index: 757,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.guard.t',
        {
          _index: 145,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.guard.ts:13',
        {
          _index: 151,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.guard.ts:7',
        {
          _index: 150,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.t',
        {
          _index: 178,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:16',
        {
          _index: 221,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:17',
        {
          _index: 199,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:29',
        {
          _index: 205,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:40',
        {
          _index: 219,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:54',
        {
          _index: 207,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:71',
        {
          _index: 200,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:79',
        {
          _index: 225,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:87',
        {
          _index: 228,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/authentication/authentication.service.ts:95',
        {
          _index: 213,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.t',
        {
          _index: 262,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:11',
        {
          _index: 278,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:39',
        {
          _index: 281,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:67',
        {
          _index: 272,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:75',
        {
          _index: 283,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:8',
        {
          _index: 270,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:83',
        {
          _index: 274,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/class/baseapi.class.ts:91',
        {
          _index: 276,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'src/app/core/constants.t',
        {
          _index: 835,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'src/app/core/core.module.t',
        { _index: 357, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'src/app/core/http/api',
        {
          _index: 5,
          title: {},
          body: { 'interceptors/ApiPrefixInterceptor.html': {} }
        }
      ],
      [
        'src/app/core/http/error',
        {
          _index: 402,
          title: {},
          body: {
            'interceptors/ErrorHandlerInterceptor.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'src/app/core/http/http.service.t',
        {
          _index: 534,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'src/app/core/http/http.service.ts:29',
        { _index: 536, title: {}, body: { 'interfaces/HttpClient.html': {} } }
      ],
      [
        'src/app/core/http/http.service.ts:34',
        {
          _index: 601,
          title: {},
          body: { 'classes/HttpInterceptorHandler.html': {} }
        }
      ],
      [
        'src/app/core/http/http.service.ts:40',
        {
          _index: 602,
          title: {},
          body: { 'classes/HttpInterceptorHandler.html': {} }
        }
      ],
      [
        'src/app/core/http/http.service.ts:61',
        { _index: 606, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'src/app/core/http/http.service.ts:77',
        { _index: 610, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'src/app/core/http/http.service.ts:82',
        { _index: 609, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'src/app/core/http/http.service.ts:90',
        { _index: 608, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'src/app/core/http/http.service.ts:98',
        { _index: 607, title: {}, body: { 'injectables/HttpService.html': {} } }
      ],
      [
        'src/app/core/loc',
        {
          _index: 611,
          title: {},
          body: {
            'injectables/LocalStorageService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'src/app/core/model/authentication.model.t',
        {
          _index: 370,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/core/model/error.model.t',
        {
          _index: 438,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/core/rout',
        {
          _index: 708,
          title: {},
          body: {
            'classes/RouteReusableStrategy.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/core/service/error',
        {
          _index: 446,
          title: {},
          body: {
            'injectables/ErrorMessageService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/core/service/user.service.t',
        {
          _index: 793,
          title: {},
          body: { 'injectables/UserService.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/core/service/user.service.ts:6',
        { _index: 794, title: {}, body: { 'injectables/UserService.html': {} } }
      ],
      [
        'src/app/core/service/util.service.t',
        {
          _index: 798,
          title: {},
          body: { 'injectables/UtilService.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/core/service/util.service.ts:21',
        { _index: 803, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'src/app/core/service/util.service.ts:4',
        { _index: 801, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'src/app/core/service/util.service.ts:7',
        { _index: 805, title: {}, body: { 'injectables/UtilService.html': {} } }
      ],
      [
        'src/app/dashboard/dashboard.module.t',
        { _index: 397, title: {}, body: { 'modules/DashboardModule.html': {} } }
      ],
      [
        'src/app/dashboard/dashboard/dashboard.component.t',
        {
          _index: 389,
          title: {},
          body: {
            'components/DashboardComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/dashboard/dashboard/dashboard.component.ts:7',
        {
          _index: 392,
          title: {},
          body: { 'components/DashboardComponent.html': {} }
        }
      ],
      [
        'src/app/shared/breadcrumb/breadcrumb.component.t',
        {
          _index: 308,
          title: {},
          body: {
            'components/BreadcrumbComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/shared/breadcrumb/breadcrumb.component.ts:13',
        {
          _index: 319,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'src/app/shared/breadcrumb/breadcrumb.component.ts:14',
        {
          _index: 318,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'src/app/shared/breadcrumb/breadcrumb.component.ts:39',
        {
          _index: 320,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'src/app/shared/button',
        {
          _index: 340,
          title: {},
          body: {
            'components/ButtonLoaderComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/shared/form',
        {
          _index: 462,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'src/app/shared/layouts/blank/blank.component.t',
        {
          _index: 305,
          title: {},
          body: { 'components/BlankComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/shared/layouts/full/full.component.t',
        {
          _index: 525,
          title: {},
          body: { 'components/FullComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/shared/layouts/full/full.component.ts:10',
        {
          _index: 530,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'src/app/shared/layouts/full/full.component.ts:12',
        {
          _index: 529,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'src/app/shared/layouts/full/full.component.ts:9',
        {
          _index: 528,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'src/app/shared/shared.module.t',
        { _index: 743, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'src/app/shared/spinner.component.t',
        {
          _index: 771,
          title: {},
          body: { 'components/SpinnerComponent.html': {}, 'coverage.html': {} }
        }
      ],
      [
        'src/app/shared/spinner.component.ts:28',
        {
          _index: 785,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'src/app/shared/spinner.component.ts:31',
        {
          _index: 779,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'src/app/shared/spinner.component.ts:55',
        {
          _index: 784,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'src/environments/environment.dev.t',
        {
          _index: 855,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'src/environments/environment.local.t',
        {
          _index: 856,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'src/environments/environment.prod.t',
        {
          _index: 857,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'src/environments/environment.t',
        {
          _index: 858,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      ['src/main.t', { _index: 979, title: {}, body: { 'index.html': {} } }],
      [
        'src/test.t',
        {
          _index: 859,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'standard',
        {
          _index: 577,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'start',
        { _index: 890, title: { 'index.html': {} }, body: { 'index.html': {} } }
      ],
      ['startproject', { _index: 904, title: {}, body: { 'index.html': {} } }],
      ['statement', { _index: 826, title: {}, body: { 'coverage.html': {} } }],
      [
        'static',
        {
          _index: 574,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'statuscod',
        {
          _index: 443,
          title: {},
          body: {
            'interfaces/ErrorMessageObject.html': {},
            'interfaces/RootObject.html': {}
          }
        }
      ],
      [
        'storage.servic',
        {
          _index: 234,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'storage.service.t',
        {
          _index: 612,
          title: {},
          body: {
            'injectables/LocalStorageService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'storage.service.ts:139',
        {
          _index: 626,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'storage.service.ts:142',
        {
          _index: 624,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'storage.service.ts:145',
        {
          _index: 622,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'storage.service.ts:148',
        {
          _index: 620,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'storage.service.ts:73',
        {
          _index: 627,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'storage.service.ts:74',
        {
          _index: 619,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'store',
        {
          _index: 721,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'store(rout',
        {
          _index: 734,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'strategi',
        {
          _index: 366,
          title: {},
          body: {
            'modules/CoreModule.html': {},
            'classes/RouteReusableStrategy.html': {}
          }
        }
      ],
      [
        'strategy.t',
        {
          _index: 709,
          title: {},
          body: {
            'classes/RouteReusableStrategy.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'strategy.ts:13',
        {
          _index: 729,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'strategy.ts:17',
        {
          _index: 736,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'strategy.ts:22',
        {
          _index: 727,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'strategy.ts:26',
        {
          _index: 724,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'strategy.ts:30',
        {
          _index: 732,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'string',
        {
          _index: 63,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interfaces/Credentials.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'injectables/LocalStorageService.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['structur', { _index: 905, title: {}, body: { 'index.html': {} } }],
      ['style', { _index: 936, title: {}, body: { 'index.html': {} } }],
      ['styles.css', { _index: 934, title: {}, body: { 'index.html': {} } }],
      [
        'styleurl',
        {
          _index: 57,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'subscrib',
        {
          _index: 673,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'subscribe(ev',
        {
          _index: 337,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'successfulli',
        {
          _index: 210,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'super(httpcli',
        { _index: 796, title: {}, body: { 'injectables/UserService.html': {} } }
      ],
      [
        'super(httphandl',
        {
          _index: 581,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'support',
        {
          _index: 977,
          title: {},
          body: { 'index.html': {}, 'modules.html': {} }
        }
      ],
      ['svg', { _index: 981, title: {}, body: { 'modules.html': {} } }],
      ['tabl', { _index: 863, title: {}, body: { 'coverage.html': {} } }],
      [
        "tablesort(document.getelementbyid('coverag",
        { _index: 862, title: {}, body: { 'coverage.html': {} } }
      ],
      ['task', { _index: 943, title: {}, body: { 'index.html': {} } }],
      [
        'templat',
        {
          _index: 49,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'templateurl',
        {
          _index: 59,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      ['test', { _index: 912, title: {}, body: { 'index.html': {} } }],
      ['test.t', { _index: 940, title: {}, body: { 'index.html': {} } }],
      [
        'this._credenti',
        {
          _index: 239,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this._error',
        {
          _index: 457,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'this._errors.push',
        {
          _index: 458,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'this.activatedrout',
        {
          _index: 328,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'this.apierrormessag',
        {
          _index: 509,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.apierrortyp',
        {
          _index: 505,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.apiserviceurl',
        {
          _index: 507,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.authenticationservic',
        {
          _index: 670,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'this.authenticationservice.isauthent',
        {
          _index: 155,
          title: {},
          body: { 'guards/AuthenticationGuard.html': {} }
        }
      ],
      [
        'this.baseurl',
        { _index: 797, title: {}, body: { 'injectables/UserService.html': {} } }
      ],
      [
        'this.control.error',
        {
          _index: 522,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.control.touch',
        {
          _index: 523,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.control.valuechanges.subscrib',
        {
          _index: 513,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.controlnam',
        {
          _index: 521,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.createform',
        {
          _index: 668,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'this.credenti',
        {
          _index: 254,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.credentials$.emit(this._credenti',
        {
          _index: 259,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.credentials.accesstoken',
        {
          _index: 255,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.credentials.sess',
        {
          _index: 251,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.errorhandler(error',
        {
          _index: 416,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'this.errorkey',
        {
          _index: 511,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'this.errormessageservice.set',
        {
          _index: 427,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'this.errors$.emit(this._error',
        {
          _index: 461,
          title: {},
          body: { 'injectables/ErrorMessageService.html': {} }
        }
      ],
      [
        'this.formbuilder.group',
        {
          _index: 678,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'this.httpclient',
        {
          _index: 248,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.httpclient.delete(`${this.baseurl}/${id}`).pip',
        {
          _index: 303,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'this.httpclient.delete(`${this.baseurl}/all`).pip',
        {
          _index: 304,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'this.httpclient.get(`${this.baseurl}${querystring}`).pip',
        {
          _index: 299,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'this.httpclient.get(`${this.baseurl}/${id}${querystring}`).pip',
        {
          _index: 300,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        "this.httpclient.post('/api/auth/login",
        {
          _index: 241,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        "this.httpclient.post('/api/auth/regist",
        {
          _index: 246,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.httpclient.post(this.baseurl',
        {
          _index: 301,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'this.httpclient.put(`${this.baseurl}/${id',
        {
          _index: 302,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'this.httphandl',
        {
          _index: 590,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.injector',
        {
          _index: 594,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.injector.get(errorhandlerinterceptor',
        {
          _index: 583,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.interceptor',
        {
          _index: 582,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.interceptor.intercept(request',
        {
          _index: 561,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.interceptors.concat([interceptor',
        {
          _index: 598,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.interceptors.filter(i',
        {
          _index: 595,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.interceptors.reduceright',
        {
          _index: 588,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.isload',
        {
          _index: 669,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'this.isspinnervis',
        {
          _index: 792,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'this.localstorag',
        {
          _index: 643,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.localstorage.clear',
        {
          _index: 648,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.localstorage.getitem(key',
        {
          _index: 646,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.localstorage.removeitem(key',
        {
          _index: 647,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.localstorage.setitem(key',
        {
          _index: 645,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.localstorageservice.clearitem(credentialskey',
        {
          _index: 260,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {}
          }
        }
      ],
      [
        'this.localstorageservice.getitem(credentialskey',
        {
          _index: 238,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.localstorageservice.setitem',
        {
          _index: 257,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.loginform',
        {
          _index: 677,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'this.loginform.markaspristin',
        {
          _index: 672,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'this.next',
        {
          _index: 562,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.pageinfo',
        {
          _index: 339,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'this.removeinterceptor(errorhandlerinterceptor',
        {
          _index: 584,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'this.resetpasswordform',
        {
          _index: 680,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'this.router.ev',
        {
          _index: 324,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'this.router.events.subscrib',
        {
          _index: 791,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'this.router.navig',
        {
          _index: 675,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        "this.router.navigate(['/dashboard",
        {
          _index: 533,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        "this.router.navigate(['/login",
        {
          _index: 160,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'this.router.url',
        {
          _index: 532,
          title: {},
          body: { 'components/FullComponent.html': {} }
        }
      ],
      [
        'this.sessionstorag',
        {
          _index: 644,
          title: {},
          body: { 'injectables/LocalStorageService.html': {} }
        }
      ],
      [
        'this.setcredenti',
        {
          _index: 253,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.setcredentials(bodi',
        {
          _index: 244,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'this.signupform',
        {
          _index: 766,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        'this.signupform.markaspristin',
        {
          _index: 763,
          title: {},
          body: { 'components/SignupComponent.html': {} }
        }
      ],
      [
        "this.titleservice.settitle(event['titl",
        {
          _index: 338,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'throw',
        {
          _index: 436,
          title: {},
          body: { 'interceptors/ErrorHandlerInterceptor.html': {} }
        }
      ],
      [
        'titl',
        {
          _index: 62,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BreadcrumbComponent.html': {}
          }
        }
      ],
      [
        'titleservic',
        {
          _index: 317,
          title: {},
          body: { 'components/BreadcrumbComponent.html': {} }
        }
      ],
      [
        'todo',
        {
          _index: 499,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'components/LoginComponent.html': {}
          }
        }
      ],
      [
        'token',
        {
          _index: 230,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'tree',
        {
          _index: 51,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'tri',
        {
          _index: 703,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'trigger',
        {
          _index: 586,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'true',
        {
          _index: 156,
          title: {},
          body: {
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'modules/CoreModule.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'components/LoginComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'type',
        {
          _index: 25,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'components/AppComponent.html': {},
            'guards/AuthenticationGuard.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'interfaces/Credentials.html': {},
            'interceptors/ErrorHandlerInterceptor.html': {},
            'interfaces/ErrorMessageObject.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/RootObject.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'components/SpinnerComponent.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'types.foreach(typ',
        {
          _index: 517,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      ['uncom', { _index: 980, title: {}, body: { 'index.html': {} } }],
      [
        'undefin',
        {
          _index: 293,
          title: {},
          body: {
            'injectables/BaseAPIClass.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      ['unit', { _index: 941, title: {}, body: { 'index.html': {} } }],
      [
        'up',
        {
          _index: 687,
          title: {},
          body: { 'components/LoginComponent.html': {} }
        }
      ],
      [
        'updat',
        {
          _index: 269,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'update(id',
        {
          _index: 282,
          title: {},
          body: { 'injectables/BaseAPIClass.html': {} }
        }
      ],
      [
        'updatedat',
        {
          _index: 388,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'url',
        {
          _index: 42,
          title: {},
          body: {
            'interceptors/ApiPrefixInterceptor.html': {},
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'us',
        {
          _index: 557,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'classes/RouteReusableStrategy.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'useclass',
        { _index: 368, title: {}, body: { 'modules/CoreModule.html': {} } }
      ],
      [
        'user',
        {
          _index: 202,
          title: { 'interfaces/User.html': {} },
          body: {
            'injectables/AuthenticationService.html': {},
            'interfaces/Credentials.html': {},
            'interfaces/LoginPayload.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'usernam',
        {
          _index: 374,
          title: {},
          body: {
            'interfaces/Credentials.html': {},
            'components/LoginComponent.html': {},
            'interfaces/LoginPayload.html': {},
            'components/SignupComponent.html': {},
            'interfaces/SignupPayload.html': {},
            'interfaces/User.html': {}
          }
        }
      ],
      [
        'userservic',
        {
          _index: 355,
          title: { 'injectables/UserService.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'injectables/UserService.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'utilservic',
        {
          _index: 356,
          title: { 'injectables/UtilService.html': {} },
          body: {
            'modules/CoreModule.html': {},
            'injectables/UtilService.html': {},
            'coverage.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'valid',
        {
          _index: 666,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'validators.email',
        {
          _index: 681,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'validators.requir',
        {
          _index: 679,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {}
          }
        }
      ],
      [
        'valu',
        {
          _index: 65,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthenticationService.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'injectables/LocalStorageService.html': {},
            'components/LoginComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UtilService.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'var',
        {
          _index: 71,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'variabl',
        {
          _index: 832,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      ['variou', { _index: 929, title: {}, body: { 'index.html': {} } }],
      [
        'veri',
        {
          _index: 568,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['version', { _index: 908, title: {}, body: { 'index.html': {} } }],
      ['via', { _index: 962, title: {}, body: { 'index.html': {} } }],
      [
        'viewencapsul',
        {
          _index: 786,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'viewencapsulation.non',
        {
          _index: 774,
          title: {},
          body: { 'components/SpinnerComponent.html': {} }
        }
      ],
      [
        'void',
        {
          _index: 216,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'injectables/ErrorMessageService.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'classes/RouteReusableStrategy.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {},
            'injectables/UtilService.html': {}
          }
        }
      ],
      [
        'way',
        {
          _index: 705,
          title: {},
          body: { 'components/NotFoundComponent.html': {} }
        }
      ],
      [
        'well',
        {
          _index: 183,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'wire',
        {
          _index: 585,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'work',
        {
          _index: 547,
          title: {},
          body: {
            'interfaces/HttpClient.html': {},
            'classes/HttpInterceptorHandler.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      [
        'workaround',
        {
          _index: 712,
          title: {},
          body: { 'classes/RouteReusableStrategy.html': {} }
        }
      ],
      [
        'worker',
        {
          _index: 873,
          title: {},
          body: { 'dependencies.html': {}, 'index.html': {} }
        }
      ],
      [
        'workflow',
        {
          _index: 180,
          title: {},
          body: { 'injectables/AuthenticationService.html': {} }
        }
      ],
      [
        'wrapper',
        {
          _index: 467,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        "wrapper'},{'nam",
        {
          _index: 86,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/BlankComponent.html': {},
            'components/BreadcrumbComponent.html': {},
            'components/ButtonLoaderComponent.html': {},
            'components/DashboardComponent.html': {},
            'components/FormErrorWrapperComponent.html': {},
            'components/FullComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NotFoundComponent.html': {},
            'components/SignupComponent.html': {},
            'components/SpinnerComponent.html': {}
          }
        }
      ],
      [
        'wrapper.compon',
        { _index: 750, title: {}, body: { 'modules/SharedModule.html': {} } }
      ],
      [
        'wrapper.component.html',
        {
          _index: 468,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.t',
        {
          _index: 464,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'wrapper.component.ts:17',
        {
          _index: 484,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:19',
        {
          _index: 485,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:21',
        {
          _index: 482,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:24',
        {
          _index: 483,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:26',
        {
          _index: 497,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:27',
        {
          _index: 494,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:28',
        {
          _index: 481,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:45',
        {
          _index: 493,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:47',
        {
          _index: 492,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:51',
        {
          _index: 491,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:57',
        {
          _index: 488,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper.component.ts:68',
        {
          _index: 490,
          title: {},
          body: { 'components/FormErrorWrapperComponent.html': {} }
        }
      ],
      [
        'wrapper/form',
        {
          _index: 463,
          title: {},
          body: {
            'components/FormErrorWrapperComponent.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {}
          }
        }
      ],
      [
        'ye',
        {
          _index: 215,
          title: {},
          body: {
            'injectables/AuthenticationService.html': {},
            'injectables/BaseAPIClass.html': {},
            'injectables/HttpService.html': {}
          }
        }
      ],
      ['zone.j', { _index: 883, title: {}, body: { 'dependencies.html': {} } }],
      [
        'zoom',
        {
          _index: 110,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthenticationModule.html': {},
            'modules/CoreModule.html': {},
            'modules/DashboardModule.html': {},
            'modules/SharedModule.html': {},
            'overview.html': {}
          }
        }
      ]
    ],
    pipeline: ['stemmer']
  },
  store: {
    'interceptors/ApiPrefixInterceptor.html': {
      url: 'interceptors/ApiPrefixInterceptor.html',
      title: 'interceptor - ApiPrefixInterceptor',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiPrefixInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/api-prefix.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/api-prefix.interceptor.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/api-prefix.interceptor.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Prefixes all requests with `environment.serverUrl`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/AppComponent.html': {
      url: 'components/AppComponent.html',
      title: 'component - AppComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import * as $ from 'jquery';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutes } from '@app/app.routing';\nimport { AppComponent } from '@app/app.component';\nimport { CoreModule } from '@app/core';\nimport { SharedModule } from '@app/shared';\nimport { MatCardModule, MatIconModule, MatToolbarModule, MatButtonModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot(AppRoutes),\n    CoreModule,\n    SharedModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'guards/AuthenticationGuard.html': {
      url: 'guards/AuthenticationGuard.html',
      title: 'guard - AuthenticationGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.guard.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    console.log('Not authenticated, redirecting...');\n    this.router.navigate(['/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/AuthenticationModule.html': {
      url: 'modules/AuthenticationModule.html',
      title: 'module - AuthenticationModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAuthenticationModule -->\n\nNotFoundComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthenticationModule -->\n\nSharedModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/authentication/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotFoundComponent } from '@app/authentication/404/not-found.component';\nimport { AuthenticationRoutes } from '@app/authentication/authentication.routing';\nimport { LoginComponent } from '@app/authentication/login/login.component';\nimport { SignupComponent } from '@app/authentication/signup/signup.component';\nimport { SharedModule } from '@app/shared';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbModule,\n    SharedModule,\n    RouterModule.forChild(AuthenticationRoutes)\n  ],\n  declarations: [NotFoundComponent, SignupComponent, LoginComponent]\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/AuthenticationService.html': {
      url: 'injectables/AuthenticationService.html',
      title: 'injectable - AuthenticationService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a base for authentication workflow.\nThe Credentials interface as well as login/logout methods should be replaced with proper implementation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Checks is the user is authenticated.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the user is authenticated.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(payload: Authentication.LoginPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    Authentication.LoginPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Logs out the user and clear credentials.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    True if the user was logged out successfully.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCredentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCredentials(credentials?: Authentication.Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Sets the user credentials.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    Authentication.Credentials\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(payload: Authentication.SignupPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    Authentication.SignupPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _credentials:     Authentication.Credentials | null\n\n                    \n                \n                    \n                        \n                            Type :     Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials$:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:79\n                                \n                            \n                    \n                        \n                                Gets the user credentials.\n\n\n                                \n                                \n                                \n                                    Returns :     Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:87\n                                \n                            \n                    \n                        \n                                Get the auth token.\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LocalStorageService } from '@app/core/local-storage.service';\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n  private _credentials: Authentication.Credentials | null;\n  public credentials$ = new EventEmitter();\n\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService\n  ) {\n    const savedCredentials = this.localStorageService.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    return this.httpClient.post('/api/Auth/Login', payload).pipe(\n      map((body: Authentication.Credentials) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  signup(\n    payload: Authentication.SignupPayload\n  ): Observable {\n    return this.httpClient.post('/api/Auth/Register', payload).pipe(\n      map((body: Authentication.User) => {\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable} True if the user was logged out successfully.\n   */\n  logout(): Observable {\n    return this.httpClient\n      .post('/logout', {\n        sessionId: this.credentials.session\n      })\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Get the auth token.\n   * @return {string} The auth token is null if user is not authenticated.\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.accessToken : null;\n  }\n\n  /**\n   * Sets the user credentials.\n   * @param {Credentials=} Authentication.Credentials The user credentials.\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/BaseAPIClass.html': {
      url: 'injectables/BaseAPIClass.html',
      title: 'injectable - BaseAPIClass',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseAPIClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/class/baseAPI.class.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/class/baseAPI.class.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(payload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(filterObject?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string, filterObject?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filterObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(id: string, payload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport abstract class BaseAPIClass {\n  baseUrl: string;\n  constructor(protected httpClient: HttpClient) {}\n\n  getAll(filterObject?: any): Observable {\n    let queryString = '';\n    if (filterObject) {\n      const fitlerKeys: any[] = Object.keys(filterObject);\n      if (fitlerKeys.length > 0) {\n        queryString = '?';\n      }\n      fitlerKeys.forEach((key: any, index) => {\n        if (filterObject[key] !== undefined && filterObject[key] !== null) {\n          if (filterObject[key].toString().length) {\n            queryString += `${key}=${filterObject[key]}&`;\n          }\n        }\n      });\n      if (\n        fitlerKeys.length > 0 &&\n        queryString[queryString.length - 1] === '&'\n      ) {\n        queryString = queryString.slice(0, -1);\n      }\n    }\n    return this.httpClient.get(`${this.baseUrl}${queryString}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  getById(id: string, filterObject?: any): Observable {\n    let queryString = '';\n    if (filterObject) {\n      const fitlerKeys: any[] = Object.keys(filterObject);\n      if (fitlerKeys.length > 0) {\n        queryString = '?';\n      }\n      fitlerKeys.forEach((key: any, index) => {\n        if (filterObject[key] !== undefined && filterObject[key] !== null) {\n          if (filterObject[key].toString().length) {\n            queryString += `${key}=${filterObject[key]}&`;\n          }\n        }\n      });\n      if (\n        fitlerKeys.length > 0 &&\n        queryString[queryString.length - 1] === '&'\n      ) {\n        queryString = queryString.slice(0, -1);\n      }\n    }\n    return this.httpClient.get(`${this.baseUrl}/${id}${queryString}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  create(payload: any): Observable {\n    return this.httpClient.post(this.baseUrl, payload).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  update(id: string, payload: any): Observable {\n    return this.httpClient.put(`${this.baseUrl}/${id}`, payload).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  delete(id: string): Observable {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  deleteAll(): Observable {\n    return this.httpClient.delete(`${this.baseUrl}/all`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/BlankComponent.html': {
      url: 'components/BlankComponent.html',
      title: 'component - BlankComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  BlankComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/blank/blank.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n\n\n            \n                templateUrl\n                ./blank.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blank-layout',\n  templateUrl: './blank.component.html',\n  styleUrls: []\n})\nexport class BlankComponent {}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/BreadcrumbComponent.html': {
      url: 'components/BreadcrumbComponent.html',
      title: 'component - BreadcrumbComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                styleUrls\n                breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  @Input()\n  layout: any;\n  pageInfo: any;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title\n  ) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map(route => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        this.titleService.setTitle(event['title']);\n        this.pageInfo = event;\n      });\n  }\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/ButtonLoaderComponent.html': {
      url: 'components/ButtonLoaderComponent.html',
      title: 'component - ButtonLoaderComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  ButtonLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/button-loader/button-loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button-loader\n            \n\n            \n                styleUrls\n                button-loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./button-loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/button-loader/button-loader.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button-loader',\n  templateUrl: './button-loader.component.html',\n  styleUrls: ['./button-loader.component.css']\n})\nexport class ButtonLoaderComponent implements OnInit {\n  @Input()\n  isLoading: boolean;\n  @Input()\n  label: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n         {{label}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{label}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/CoreModule.html': {
      url: 'modules/CoreModule.html',
      title: 'module - CoreModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nCoreModule -->\n\nUtilService->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ApiPrefixInterceptor\n                            \n                            \n                                     ApiPrefixInterceptor\n                            \n                            \n                                     AuthenticationService\n                            \n                            \n                                     ErrorHandlerInterceptor\n                            \n                            \n                                     ErrorMessageService\n                            \n                            \n                                     LocalStorageService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     UtilService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService\n} from '@app/core/authentication';\nimport {\n  ApiPrefixInterceptor,\n  ErrorHandlerInterceptor,\n  HttpService\n} from '@app/core/http';\nimport { LocalStorageService } from '@app/core/local-storage.service';\nimport { RouteReusableStrategy } from '@app/core/route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  UserService,\n  UtilService\n} from '@app/core/service';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, RouterModule],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    UserService,\n    UtilService,\n    ErrorMessageService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/Credentials.html': {
      url: 'interfaces/Credentials.html',
      title: 'interface - Credentials',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    username: string;\n    email: string;\n    password: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'components/DashboardComponent.html': {
      url: 'components/DashboardComponent.html',
      title: 'component - DashboardComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard/dashboard.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  constructor() {}\n}\n\n    \n\n    \n        Dashboard!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Dashboard!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/DashboardModule.html': {
      url: 'modules/DashboardModule.html',
      title: 'module - DashboardModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DashboardRoutes } from '@app/dashboard/dashboard.routing';\nimport { DashboardComponent } from '@app/dashboard/dashboard/dashboard.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    NgbModule,\n    RouterModule.forChild(DashboardRoutes)\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interceptors/ErrorHandlerInterceptor.html': {
      url: 'interceptors/ErrorHandlerInterceptor.html',
      title: 'interceptor - ErrorHandlerInterceptor',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                    ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorHandler(response: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '@app/core/local-storage.service';\nimport { ErrorMessageService } from '@app/core/service';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      // Do something with the error\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ErrorMessageObject.html': {
      url: 'interfaces/ErrorMessageObject.html',
      title: 'interface - ErrorMessageObject',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'injectables/ErrorMessageService.html': {
      url: 'injectables/ErrorMessageService.html',
      title: 'injectable - ErrorMessageService',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-message.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(error: string, type: string, serviceUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        serviceUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _errors:     ErrorModel.ErrorMessageObject[]\n\n                    \n                \n                    \n                        \n                            Type :     ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors$:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from \'@angular/core\';\n\n@Injectable()\nexport class ErrorMessageService {\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n  public errors$ = new EventEmitter();\n\n  constructor() {}\n\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'components/FormErrorWrapperComponent.html': {
      url: 'components/FormErrorWrapperComponent.html',
      title: 'component - FormErrorWrapperComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  FormErrorWrapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/form-error-wrapper/form-error-wrapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-error-wrapper\n            \n\n\n\n\n            \n                templateUrl\n                ./form-error-wrapper.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiErrorMessage\n                            \n                            \n                                    Public\n                                errorKeys\n                            \n                            \n                                    Public\n                                errorObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formateError\n                            \n                            \n                                hasError\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiErrorType\n                            \n                            \n                                apiServiceUrl\n                            \n                            \n                                control\n                            \n                            \n                                controlName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                    ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiErrorType\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        apiServiceUrl\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formateError\n                            \n                            \n                        \n                    \n                \n                \n                    \nformateError(errorMessage: string, errorObj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessage\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        errorObj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiErrorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorKeys:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorObject:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : ERROR_OBJECTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  AfterViewInit\n} from '@angular/core';\nimport { ERROR_OBJECTS, ErrorMessageService } from '@app/core';\nconsole.log(ErrorMessageService)\n@Component({\n  selector: 'app-form-error-wrapper',\n  templateUrl: './form-error-wrapper.component.html'\n})\nexport class FormErrorWrapperComponent\n  implements OnInit, OnChanges, AfterViewInit {\n  @Input()\n  public control: any;\n  @Input()\n  public controlName: string;\n  @Input()\n  public apiErrorType?: string;\n  // TODO : How to pass apiServiceUrl\n  @Input()\n  public apiServiceUrl?: string;\n\n  public errorObject: Object = ERROR_OBJECTS;\n  public errorKeys: string[];\n  public apiErrorMessage: string;\n\n  constructor(private errorMessageService: ErrorMessageService) {\n    errorMessageService.errors$.subscribe(\n      (errors: ErrorModel.ErrorMessageObject[]) => {\n        errors\n          .filter(\n            e => e.type === this.apiErrorType\n            //  && e.serviceUrl == this.apiServiceUrl\n          )\n          .map(e => {\n            this.apiErrorMessage = e.error;\n          });\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    this.errorKeys = Object.keys(this.errorObject);\n  }\n\n  ngAfterViewInit() {\n    this.control.valueChanges.subscribe(() => {\n      this.apiErrorMessage = '';\n    });\n  }\n\n  formateError(errorMessage: string, errorObj: any): string {\n    const types = ['min', 'max', 'requiredLength'];\n\n    types.forEach(type => {\n      if (!!errorObj[type]) {\n        errorMessage = errorMessage.replace(/{{value}}/g, errorObj[type]);\n      }\n    });\n    return errorMessage.replace(/{{field}}/g, this.controlName);\n  }\n\n  hasError() {\n    return (\n      (this.control.errors && this.control.touched) || this.apiErrorMessage\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{formateError(errorObject[errorKey],control.errors[errorKey])}}\n    \n  \n  \n    {{apiErrorMessage}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{formateError(errorObject[errorKey],control.errors[errorKey])}}            {{apiErrorMessage}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/FullComponent.html': {
      url: 'components/FullComponent.html',
      title: 'component - FullComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  FullComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/full/full.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-full-layout\n            \n\n            \n                styleUrls\n                full.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/full/full.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/full/full.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/full/full.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: './full.component.html',\n  styleUrls: ['./full.component.scss']\n})\nexport class FullComponent implements OnInit {\n  constructor(public router: Router) {}\n\n  ngOnInit() {\n    if (this.router.url === '/') {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n    \n    \n        \n        \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n        \n        \n        \n        \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FullComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/HttpClient.html': {
      url: 'interfaces/HttpClient.html',
      title: 'interface - HttpClient',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipErrorHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Skips default error handler for this request.\n\n\n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    The new instance.\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'classes/HttpInterceptorHandler.html': {
      url: 'classes/HttpInterceptorHandler.html',
      title: 'class - HttpInterceptorHandler',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpInterceptorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(next: HttpHandler, interceptor: HttpInterceptor)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptor\n                                                  \n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(request: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/HttpService.html': {
      url: 'injectables/HttpService.html',
      title: 'injectable - HttpService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Extends HttpClient with per request configuration using dynamic interceptors.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInterceptor\n                            \n                            \n                                    Private\n                                removeInterceptor\n                            \n                            \n                                request\n                            \n                            \n                                skipErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpHandler: HttpHandler, injector: Injector, interceptors: HttpInterceptor[])\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpHandler\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptors\n                                                  \n                                                        \n                                                                    HttpInterceptor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addInterceptor(interceptor: HttpInterceptor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptor\n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeInterceptor(interceptorType: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptorType\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequest(method?: any, url?: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HttpClient\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/LocalStorageService.html': {
      url: 'injectables/LocalStorageService.html',
      title: 'injectable - LocalStorageService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:74\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItem(key: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionStorage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/LoginComponent.html': {
      url: 'components/LoginComponent.html',
      title: 'component - LoginComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPasswordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  resetPasswordForm: FormGroup;\n  isLoading = false;\n  constructor(\n    public router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.isLoading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n          this.isLoading = false;\n        })\n      )\n      .subscribe(\n        (credentials: Authentication.Credentials) => {\n          console.log(credentials);\n          this.router.navigate(['/'], {\n            replaceUrl: true\n          });\n        },\n        (error: any) => {\n          console.log(`Login error: ${error}`);\n        }\n      );\n  }\n\n  resetPassword() {\n    // TODO: Implement Reset Password\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required]\n    });\n    this.resetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        Sign In\n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n               Remember me \n            \n            \n              Forgot\n               Password? \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            Don't have an account?\n              \n                Sign Up\n              \n            \n          \n        \n      \n      \n        \n          \n            Recover Password\n            Enter your Email and instructions will be sent to you! \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            Reset\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Sign In                                                                                                                                                                                                               Remember me                                       Forgot               Password?                                                                                                                           Don\\'t have an account?                              Sign Up                                                                                      Recover Password            Enter your Email and instructions will be sent to you!                                                                                                 Reset                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/LoginPayload.html': {
      url: 'interfaces/LoginPayload.html',
      title: 'interface - LoginPayload',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    username: string;\n    email: string;\n    password: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'components/NotFoundComponent.html': {
      url: 'components/NotFoundComponent.html',
      title: 'component - NotFoundComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/404/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/404/not-found.component.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['not-found.component.css']\n})\nexport class NotFoundComponent implements AfterViewInit {\n  ngAfterViewInit() {\n    $(function() {\n      $('.preloader').fadeOut();\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        404\n        Page Not Found !\n        YOU SEEM TO BE TRYING TO FIND HIS WAY HOME\n        Back to home \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            404        Page Not Found !        YOU SEEM TO BE TRYING TO FIND HIS WAY HOME        Back to home '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/RootObject.html': {
      url: 'interfaces/RootObject.html',
      title: 'interface - RootObject',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'classes/RouteReusableStrategy.html': {
      url: 'classes/RouteReusableStrategy.html',
      title: 'class - RouteReusableStrategy',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                    RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DetachedRouteHandle | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldAttach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldAttach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldDetach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldDetach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReuseRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        future\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        curr\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        detachedTree\n                                                        \n                                                                    DetachedRouteHandle | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from \'@angular/router\';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'modules/SharedModule.html': {
      url: 'modules/SharedModule.html',
      title: 'module - SharedModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nBlankComponent\n\nBlankComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBlankComponent->SharedModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nSharedModule -->\n\nBreadcrumbComponent->SharedModule\n\n\n\n\n\nButtonLoaderComponent\n\nButtonLoaderComponent\n\nSharedModule -->\n\nButtonLoaderComponent->SharedModule\n\n\n\n\n\nFormErrorWrapperComponent\n\nFormErrorWrapperComponent\n\nSharedModule -->\n\nFormErrorWrapperComponent->SharedModule\n\n\n\n\n\nFullComponent\n\nFullComponent\n\nSharedModule -->\n\nFullComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nBlankComponent \n\nBlankComponent \n\nBlankComponent  -->\n\nSharedModule->BlankComponent \n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nSharedModule->BreadcrumbComponent \n\n\n\n\n\nButtonLoaderComponent \n\nButtonLoaderComponent \n\nButtonLoaderComponent  -->\n\nSharedModule->ButtonLoaderComponent \n\n\n\n\n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent  -->\n\nSharedModule->FormErrorWrapperComponent \n\n\n\n\n\nFullComponent \n\nFullComponent \n\nFullComponent  -->\n\nSharedModule->FullComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BlankComponent\n                            \n                            \n                                BreadcrumbComponent\n                            \n                            \n                                ButtonLoaderComponent\n                            \n                            \n                                FormErrorWrapperComponent\n                            \n                            \n                                FullComponent\n                            \n                            \n                                SpinnerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BlankComponent\n                            \n                            \n                                    BreadcrumbComponent\n                            \n                            \n                                    ButtonLoaderComponent\n                            \n                            \n                                    FormErrorWrapperComponent\n                            \n                            \n                                    FullComponent\n                            \n                            \n                                    SpinnerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbComponent } from '@app/shared/breadcrumb/breadcrumb.component';\nimport { BlankComponent } from '@app/shared/layouts/blank/blank.component';\nimport { FullComponent } from '@app/shared/layouts/full/full.component';\nimport { SpinnerComponent } from '@app/shared/spinner.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ButtonLoaderComponent } from '@app/shared/button-loader';\nimport { FormErrorWrapperComponent } from '@app/shared/form-error-wrapper/form-error-wrapper.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    NgbModule.forRoot(),\n    ReactiveFormsModule\n  ],\n  declarations: [\n    SpinnerComponent,\n    BreadcrumbComponent,\n    BlankComponent,\n    FullComponent,\n    ButtonLoaderComponent,\n    FormErrorWrapperComponent\n  ],\n  exports: [\n    SpinnerComponent,\n    BreadcrumbComponent,\n    BlankComponent,\n    FullComponent,\n    ButtonLoaderComponent,\n    FormErrorWrapperComponent\n  ],\n  entryComponents: [],\n  providers: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/SignupComponent.html': {
      url: 'components/SignupComponent.html',
      title: 'component - SignupComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/signup/signup.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signupForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  isLoading = false;\n\n  constructor(\n    public router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  signup() {\n    this.isLoading = true;\n    this.authenticationService\n      .signup(this.signupForm.value)\n      .pipe(\n        finalize(() => {\n          this.signupForm.markAsPristine();\n          this.isLoading = false;\n        })\n      )\n      .subscribe(\n        (user: Authentication.User) => {\n          console.log(user);\n          this.router.navigate(['/login']);\n        },\n        (error: any) => {\n          console.log(`Signup error: ${error}`);\n        }\n      );\n  }\n\n  private createForm() {\n    this.signupForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        Register Now\n        Create your account and enjoy\n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            Already have an account?\n              \n                Sign In\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register Now        Create your account and enjoy                                                                                                                                                                                                                                                                                                                                      Already have an account?                              Sign In                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/SignupPayload.html': {
      url: 'interfaces/SignupPayload.html',
      title: 'interface - SignupPayload',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignupPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    username: string;\n    email: string;\n    password: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'components/SpinnerComponent.html': {
      url: 'components/SpinnerComponent.html',
      title: 'component - SpinnerComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n            \n                template\n                        \n          \n          \n        \n    \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSpinnerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/spinner.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backgroundColor\n                    \n                    \n                        \n                            Default value : 'rgba(0, 115, 170, 0.69)'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSpinnerVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSpinnerVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnDestroy,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  Router,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `\n        \n          \n          \n        \n    `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/User.html': {
      url: 'interfaces/User.html',
      title: 'interface - User',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        emailHash\n                                \n                                \n                                        emailVerified\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastLogin\n                                \n                                \n                                        lastName\n                                \n                                \n                                            Optional\n                                        passwordLastUpdated\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailHash\n                                    \n                                \n                                \n                                    \n                                        emailHash:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerified\n                                    \n                                \n                                \n                                    \n                                        emailVerified:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordLastUpdated\n                                    \n                                \n                                \n                                    \n                                        passwordLastUpdated:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    username: string;\n    email: string;\n    password: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'injectables/UserService.html': {
      url: 'injectables/UserService.html',
      title: 'injectable - UserService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseAPIClass } from '@app/core/class/baseAPI.class';\n\n@Injectable()\nexport class UserService extends BaseAPIClass {\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient);\n    this.baseUrl = '/user';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/UtilService.html': {
      url: 'injectables/UtilService.html',
      title: 'injectable - UtilService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/util.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                            \n                                removeEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/util.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyToClipboard(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/util.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEmpty(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/util.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilService {\n  constructor() {}\n\n  removeEmpty(obj: any): any {\n    for (const propName in obj) {\n      if (\n        obj[propName] === null ||\n        obj[propName] === undefined ||\n        obj[propName] === '' ||\n        (Array.isArray(obj[propName]) && !obj[propName].length)\n      ) {\n        delete obj[propName];\n      }\n    }\n    return obj;\n  }\n\n  copyToClipboard(value: string) {\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = value;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authentication/404/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authentication/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            \n                variable\n            \n            \n                credentialsKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/class/baseAPI.class.ts\n            \n            \n                injectable\n            \n            \n                BaseAPIClass\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/constants.ts\n            \n            \n                variable\n            \n            \n                API_ENDPOINT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/constants.ts\n            \n            \n                variable\n            \n            \n                ERROR_OBJECTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            \n                variable\n            \n            \n                credentialsKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                class\n            \n            \n                HttpInterceptorHandler\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                interface\n            \n            \n                HttpClient\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                variable\n            \n            \n                HTTP_DYNAMIC_INTERCEPTORS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                injectable\n            \n            \n                LocalStorageService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                clearData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                createCookie\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                getData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                getSessionName\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                readCookie\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                setData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                LoginPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                SignupPayload\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            \n                interface\n            \n            \n                ErrorMessageObject\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            \n                interface\n            \n            \n                RootObject\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            \n                class\n            \n            \n                RouteReusableStrategy\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorMessageService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/util.service.ts\n            \n            \n                injectable\n            \n            \n                UtilService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/breadcrumb/breadcrumb.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/button-loader/button-loader.component.ts\n            \n            \n                component\n            \n            \n                ButtonLoaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/form-error-wrapper/form-error-wrapper.component.ts\n            \n            \n                component\n            \n            \n                FormErrorWrapperComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/layouts/blank/blank.component.ts\n            \n            \n                component\n            \n            \n                BlankComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/layouts/full/full.component.ts\n            \n            \n                component\n            \n            \n                FullComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/spinner.component.ts\n            \n            \n                component\n            \n            \n                SpinnerComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.0\n        \n            @angular/cdk : ^7.2.1\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.2.1\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @angular/service-worker : ^7.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^3.1.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.3.1\n        \n            luxon : ^1.3.3\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearData\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearData(type: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCookie\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCookie(name: any, value: any, days: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        days\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData(type: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSessionName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSessionName()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readCookie\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadCookie(name: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetData(type: any, data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body:
        '\n                   \n\nAngular 7 Boilerplate\n\nGo to project folder and install dependencies:\n\nnpm install\nLaunch development server, and open localhost:4200 in your browser:\n\nnpm startProject structure\ndist/                        compiled version\ndocumentation/               generated document source\ne2e/                         end-to-end tests\nsrc/                         project source code\n|- app/                      app components\n|  |- core/                  core module (singleton services and single-use components)\n|  |- shared/                shared module  (common components, directives and pipes)\n|  |- app.component.*        app root component (shell)\n|  |- app.module.ts          app root module definition\n|  |- app.routing.ts         app routes\n|  +- ...                    additional modules and components\n|- assets/                   app assets (images, fonts, sounds...)\n|- environments/             values for various build environments\n|- index.html                html entry point\n|- styles.css                global style entry point\n|- main.ts                   app entry point\n|- polyfills.ts              polyfills needed by Angular\n+- test.ts                   unit tests entry pointMain tasks\nTask automation is based on NPM scripts.\n\n\n\nTasks\nDescription\n\n\n\n\nnpm start\nRun development server on http://localhost:4200/\n\n\nnpm run build:dev\nLint code and build app for development env in dist/ folder\n\n\nnpm run build:prod\nLint code and build app for production env in dist/ folder\n\n\nnpm run build:local\nLint code and build app for local env in dist/ folder\n\n\nnpm run pwa:build:dev\nLint code and build PWA app for development env in dist/ folder\n\n\nnpm run pwa:build:prod\nLint code and build PWA app for production env in dist/ folder\n\n\nnpm run pwa:build:local\nLint code and build PWA app for local env in dist/ folder\n\n\nnpm run lint\nLint code\n\n\nnpm run compodoc:gen\nGenerate Project document in ./documentation folder\n\n\nnpm run compodoc:serve\nYou can access ./documentation folder via http://localhost:8080\n\n\nnpm run compodoc\nIt generate latest ./documentation and you can access via http://localhost:8080\n\n\n\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change\nany of the source files.\nCode scaffolding\nRun npm run generate -- component  to generate a new component. You can also use\nnpm run generate -- directive|pipe|service|class|module.\nIf you have installed angular-cli globally with npm install -g @angular/cli,\nyou can also use the command ng generate directly.\nPWA Service worker support\nTo enalbe service worker go to src/main.ts and uncomment service worker code.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body:
        '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body:
        '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nSharedModule->AuthenticationModule\n\n\n\n\n\nBlankComponent \n\nBlankComponent \n\nBlankComponent  -->\n\nSharedModule->BlankComponent \n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nSharedModule->BreadcrumbComponent \n\n\n\n\n\nButtonLoaderComponent \n\nButtonLoaderComponent \n\nButtonLoaderComponent  -->\n\nSharedModule->ButtonLoaderComponent \n\n\n\n\n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent  -->\n\nSharedModule->FormErrorWrapperComponent \n\n\n\n\n\nFullComponent \n\nFullComponent \n\nFullComponent  -->\n\nSharedModule->FullComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAuthenticationModule -->\n\nNotFoundComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nCoreModule -->\n\nUtilService->CoreModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nBlankComponent\n\nBlankComponent\n\nSharedModule -->\n\nBlankComponent->SharedModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nSharedModule -->\n\nBreadcrumbComponent->SharedModule\n\n\n\n\n\nButtonLoaderComponent\n\nButtonLoaderComponent\n\nSharedModule -->\n\nButtonLoaderComponent->SharedModule\n\n\n\n\n\nFormErrorWrapperComponent\n\nFormErrorWrapperComponent\n\nSharedModule -->\n\nFormErrorWrapperComponent->SharedModule\n\n\n\n\n\nFullComponent\n\nFullComponent\n\nSharedModule -->\n\nFullComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_ENDPOINT   (src/.../constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            ERROR_OBJECTS   (src/.../constants.ts)\n                        \n                        \n                            HTTP_DYNAMIC_INTERCEPTORS   (src/.../http.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_ENDPOINT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_ENDPOINT:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ERROR_OBJECTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ERROR_OBJECTS:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  required: '{{field}} is required',\n  email: 'Please enter valid email'\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentialsKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentialsKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'http://localhost:1355',\n  serverUrl: 'http://localhost:1355/v1'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'http://development.com',\n  serverUrl: 'http://development.com/v1'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false,\n  serverBaseUrl: 'http://localhost',\n  serverUrl: 'https://localhost:44311'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'http://productionurl.com',\n  serverUrl: 'http://productionurl.com'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_DYNAMIC_INTERCEPTORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_DYNAMIC_INTERCEPTORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n)\n                        \n                    \n\n                \n                    \n                        Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\nExcept for very specific needs, you should better configure these interceptors directly in the constructor below\nfor better readability.\nFor static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\nHTTP_INTERCEPTORS token.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    }
  }
};
