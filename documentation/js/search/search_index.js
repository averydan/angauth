var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interceptors/ApiPrefixInterceptor.html",[0,1.652,1,1.652]],["body/interceptors/ApiPrefixInterceptor.html",[0,2,1,2.562,2,0.236,3,0.202,4,0.169,5,5.854,6,4.139,7,2.33,8,5.304,9,3.911,10,5.854,11,0.424,12,1.171,13,4.962,14,1.209,15,0.955,16,4.139,17,3.509,18,3.783,19,3.587,20,3.783,21,4.139,22,0.975,23,0.025,24,0.694,25,0.465,26,0.799,27,1.171,28,3.046,29,0.693,30,2.536,31,3.251,32,1.739,33,1.024,34,0.465,35,2.536,36,3.509,37,2,38,0.236,39,0.345,40,1.259,41,4.139,42,2.784,43,4.139,44,4.139,45,0.018,46,0.018]],["title/components/AppComponent.html",[47,0.532,48,1.04]],["body/components/AppComponent.html",[2,0.219,3,0.187,4,0.157,11,0.393,15,0.691,23,0.024,24,0.946,25,0.431,29,0.431,34,0.431,38,0.219,39,0.32,45,0.018,46,0.018,47,0.97,48,1.824,49,1.509,50,1.509,51,1.509,52,3.254,53,1.509,54,2.709,55,2.55,56,4.282,57,2.273,58,5.051,59,2.122,60,5.051,61,1.353,62,5.085,63,1.442,64,1.413,65,1.413,66,3.839,67,1.028,68,1.86,69,1.985,70,1.86,71,2.357,72,1.509,73,1.509,74,1.167,75,1.509,76,1.985,77,1.167,78,1.509,79,1.167,80,1.509,81,1.509,82,1.167,83,1.167,84,1.509,85,0.847,86,1.509,87,1.167,88,1.509,89,1.167,90,1.509,91,1.167,92,1.509,93,1.167,94,1.509,95,1.167,96,1.509,97,1.509]],["title/modules/AppModule.html",[98,0.916,99,2.3]],["body/modules/AppModule.html",[2,0.214,3,0.183,4,0.153,23,0.025,29,0.775,32,1.575,34,0.421,38,0.284,39,0.313,45,0.017,46,0.017,48,2.077,67,1.004,98,1.332,99,4.563,100,1.38,101,1.696,102,3.092,103,1.95,104,3.178,105,3.178,106,3.178,107,3.178,108,3.895,109,3.578,110,2.799,111,1.95,112,1.95,113,3.748,114,3.178,115,3.047,116,1.95,117,4.215,118,3.047,119,4.972,120,3.717,121,2.297,122,4.972,123,3.748,124,2.297,125,1.214,126,2.521,127,2.11,128,2.297,129,3.748,130,3.748,131,3.748,132,2.521,133,3.178,134,3.178,135,3.748]],["title/guards/AuthenticationGuard.html",[136,2.556,137,2.556]],["body/guards/AuthenticationGuard.html",[2,0.245,3,0.209,4,0.175,11,0.439,12,1.197,14,1.12,15,0.976,22,1.01,23,0.025,24,0.718,25,0.481,26,0.827,27,1.313,29,0.668,33,1.046,34,0.481,38,0.245,39,0.357,40,1.303,45,0.019,46,0.019,125,1.388,136,3.203,137,4.053,138,4.284,139,6.588,140,2.229,141,3.429,142,3.233,143,4.284,144,4.284,145,2.619,146,4.284,147,2.131,148,4.284,149,2.44,150,4.284,151,2.412,152,4.284,153,3.203,154,3.203,155,2.412]],["title/modules/AuthenticationModule.html",[98,0.916,156,2.3]],["body/modules/AuthenticationModule.html",[2,0.221,3,0.189,4,0.158,23,0.025,29,0.771,34,0.434,38,0.29,39,0.323,45,0.018,46,0.018,67,1.036,89,1.949,91,1.949,93,1.949,98,1.36,100,1.424,101,1.723,102,2.641,103,2.012,109,3.61,110,2.858,111,2.012,112,2.012,115,3.11,116,2.012,118,3.11,124,2.37,125,1.253,126,3.414,127,2.177,128,2.37,133,3.278,156,4.616,157,3.278,158,3.278,159,3.867,160,3.867,161,4.303,162,3.794,163,2.177,164,3.867,165,3.867,166,3.867,167,3.867,168,3.867,169,3.867,170,3.867]],["title/injectables/AuthenticationService.html",[33,0.66,142,1.652]],["body/injectables/AuthenticationService.html",[2,0.126,3,0.108,4,0.09,7,1.242,11,0.226,12,1.027,14,0.702,15,1.077,22,1.097,23,0.025,24,0.78,25,0.564,26,0.898,27,1.459,28,2.971,29,0.564,32,0.927,33,0.8,34,0.248,37,1.066,38,0.126,39,0.184,40,1.033,45,0.012,46,0.012,61,0.91,63,1.182,64,0.812,65,0.812,103,1.768,112,2.421,142,1.641,145,2.001,147,2.243,149,2.261,151,3.214,171,1.649,172,2.88,173,3.397,174,2.815,175,0.801,176,3.397,177,3.397,178,2.285,179,3.397,180,4.653,181,1.864,182,4.653,183,3.512,184,4.653,185,3.397,186,3.512,187,2.88,188,2.539,189,1.649,190,2.388,191,2.877,192,3.397,193,2.206,194,3.397,195,2.897,196,2.206,197,4.143,198,2.206,199,3.945,200,2.206,201,4.653,202,2.88,203,3.397,204,3.397,205,5.069,206,2.206,207,2.88,208,1.649,209,0.812,210,2.206,211,4.143,212,2.206,213,4.093,214,2.206,215,1.529,216,3.512,217,2.206,218,2.206,219,2.88,220,2.206,221,2.206,222,4.143,223,2.539,224,2.539,225,1.242,226,1.649,227,1.649,228,1.529,229,2.285,230,3.397,231,2.206,232,4.143,233,2.206,234,2.206,235,2.88,236,2.88,237,2.206,238,2.88,239,2.206,240,1.87,241,2.206,242,2.206,243,2.206,244,2.206,245,1.352,246,2.206,247,3.397,248,2.206,249,2.206,250,2.206,251,2.206,252,2.206,253,1.87]],["title/injectables/BaseAPIClass.html",[33,0.66,254,2.3]],["body/injectables/BaseAPIClass.html",[2,0.143,3,0.122,4,0.102,11,0.458,12,0.826,14,0.518,15,1.069,22,1.314,23,0.025,24,0.934,25,0.649,26,1.076,27,1.471,28,3.342,29,0.558,32,1.053,33,0.864,34,0.281,37,1.21,38,0.143,39,0.209,45,0.013,46,0.013,61,1.002,63,1.813,189,1.873,190,2.508,199,4.21,208,2.797,213,2.517,224,1.873,225,1.411,228,1.683,235,3.172,236,4.726,238,4.726,254,2.517,255,2.124,256,4.966,257,3.172,258,3.172,259,4.966,260,3.742,261,3.742,262,3.742,263,3.742,264,3.742,265,2.506,266,3.742,267,2.506,268,3.012,269,2.506,270,3.742,271,2.506,272,5.574,273,3.742,274,2.506,275,3.742,276,2.506,277,2.506,278,2.124,279,5.938,280,3.742,281,3.742,282,4.966,283,3.34,284,3.742,285,4.966,286,3.172,287,3.742,288,3.742,289,3.742,290,4.21,291,3.742,292,2.506,293,2.506,294,2.506,295,2.506,296,2.506,297,2.506]],["title/components/BlankComponent.html",[47,0.532,74,1.04]],["body/components/BlankComponent.html",[2,0.231,3,0.198,4,0.165,23,0.024,24,0.971,29,0.454,34,0.454,38,0.231,39,0.337,45,0.018,46,0.018,47,0.987,48,1.23,49,1.589,50,1.589,51,1.589,53,1.589,54,2.728,55,2.543,57,1.82,59,2.195,67,1.083,68,1.924,69,2.054,70,1.924,71,2.405,72,1.589,73,1.589,74,1.861,75,2.275,76,2.054,77,1.23,78,1.589,79,1.23,80,1.589,81,1.589,82,1.23,83,1.23,84,1.589,85,0.893,86,1.589,87,1.23,88,1.589,89,1.23,90,1.589,91,1.23,92,1.589,93,1.23,94,1.589,95,1.23,96,1.589,97,1.589,298,3.429,299,3.906,300,5.226]],["title/components/BreadcrumbComponent.html",[47,0.532,77,1.04]],["body/components/BreadcrumbComponent.html",[2,0.173,3,0.148,4,0.123,11,0.31,12,0.948,14,0.887,15,0.977,22,0.713,23,0.025,24,0.91,25,0.56,26,0.584,27,0.948,29,0.61,34,0.34,38,0.173,39,0.252,40,1.305,45,0.015,46,0.015,47,0.893,48,0.92,49,1.189,50,1.189,51,1.189,53,1.189,54,2.612,55,2.427,57,1.932,59,1.804,61,1.15,62,4.603,67,0.811,68,1.581,69,1.687,70,1.581,71,2.134,72,1.189,73,1.189,74,0.92,75,1.189,76,1.687,77,1.651,78,1.189,79,0.92,80,1.189,81,1.189,82,0.92,83,0.92,84,1.189,85,0.668,86,1.189,87,0.92,88,1.189,89,0.92,90,1.189,91,0.92,92,1.189,93,0.92,94,1.189,95,0.92,96,1.189,97,1.189,120,2.262,121,1.855,125,0.98,140,1.575,141,3.099,147,1.961,209,1.114,224,3.209,225,1.704,245,1.855,299,3.729,301,2.566,302,2.809,303,4.293,304,4.293,305,4.293,306,5.429,307,3.057,308,3.652,309,6.123,310,4.989,311,4.293,312,3.026,313,3.026,314,3.639,315,2.566,316,3.026,317,3.026,318,3.026,319,3.639,320,1.855,321,3.026,322,3.026,323,4.293,324,3.209,325,3.026,326,3.026,327,3.026,328,3.026,329,3.026,330,3.026,331,3.026,332,3.026]],["title/components/ButtonLoaderComponent.html",[47,0.532,79,1.04]],["body/components/ButtonLoaderComponent.html",[2,0.198,3,0.169,4,0.141,11,0.354,12,1.041,14,1.107,15,1.036,23,0.024,24,0.898,25,0.529,27,0.764,29,0.389,34,0.389,38,0.198,39,0.289,40,1.433,45,0.016,46,0.016,47,0.937,48,1.053,49,1.361,50,1.361,51,1.361,53,1.361,54,2.669,55,2.484,57,2.121,59,1.98,63,1.345,67,0.927,68,1.735,69,1.853,70,1.735,71,2.261,72,1.361,73,1.361,74,1.053,75,1.361,76,1.853,77,1.053,78,1.361,79,1.749,80,2.497,81,1.361,82,1.053,83,1.053,84,1.361,85,0.764,86,1.361,87,1.053,88,1.361,89,1.053,90,1.361,91,1.053,92,1.361,93,1.053,94,1.361,95,1.053,96,1.361,97,1.361,145,2.277,209,1.275,302,3.018,307,3.24,308,4.049,333,5.103,334,5.103,335,2.935,336,3.996,337,4.714,338,4.714,339,4.006,340,6.019,341,4.714,342,3.462,343,3.462]],["title/modules/CoreModule.html",[98,0.916,108,2.095]],["body/modules/CoreModule.html",[1,3.165,2,0.197,3,0.168,4,0.141,23,0.025,29,0.744,32,1.448,34,0.387,38,0.268,39,0.288,45,0.016,46,0.016,67,0.923,98,1.259,100,1.269,101,1.429,102,1.794,103,3.228,108,4.28,110,2.646,111,1.794,112,1.794,115,2.88,116,1.794,117,3.984,118,2.88,124,2.88,125,1.117,137,3.513,142,2.996,149,1.551,190,2.115,191,3.228,226,2.577,227,2.577,344,2.922,345,2.922,346,3.228,347,3.228,348,3.801,349,3.801,350,3.447,351,2.88,352,3.984,353,3.447,354,2.446,355,3.447,356,3.161,357,3.447,358,2.577,359,2.922,360,2.922,361,5.347,362,3.447]],["title/interfaces/Credentials.html",[174,1.437,175,0.806]],["body/interfaces/Credentials.html",[2,0.237,3,0.203,4,0.169,11,0.425,23,0.024,25,0.658,38,0.353,45,0.019,46,0.019,61,1.423,63,2.024,101,1.262,145,2.005,151,2.337,174,2.232,175,1.505,188,3.787,195,3.027,363,2.543,364,4.156,365,2.337,366,2.337,367,2.543,368,2.991,369,2.337,370,3.256,371,3.256,372,2.765,373,3.256,374,2.543,375,2.791,376,2.791,377,2.791,378,2.791,379,2.791,380,3.592,381,2.791,382,2.791]],["title/components/DashboardComponent.html",[47,0.532,82,1.04]],["body/components/DashboardComponent.html",[2,0.23,3,0.197,4,0.164,14,1.193,15,0.724,23,0.024,24,0.968,29,0.452,34,0.452,38,0.23,39,0.336,45,0.018,46,0.018,47,0.985,48,1.223,49,1.581,50,1.581,51,1.581,53,1.581,54,2.697,55,2.509,57,2.344,59,2.188,67,1.078,68,1.918,69,2.047,70,1.918,71,2.4,72,1.581,73,1.581,74,1.223,75,1.581,76,2.047,77,1.223,78,1.581,79,1.223,80,1.581,81,1.581,82,1.857,83,1.223,84,1.581,85,0.888,86,1.581,87,1.223,88,1.581,89,1.223,90,1.581,91,1.223,92,1.581,93,1.223,94,1.581,95,1.223,96,1.581,97,1.581,383,3.411,384,5.209,385,5.209,386,4.024,387,5.209]],["title/modules/DashboardModule.html",[98,0.916,388,2.3]],["body/modules/DashboardModule.html",[2,0.247,3,0.212,4,0.177,23,0.025,29,0.762,34,0.486,38,0.312,39,0.361,45,0.019,46,0.019,67,1.16,82,2.009,98,1.463,100,1.595,101,1.818,102,2.841,103,2.254,110,3.074,111,2.254,112,2.254,115,3.346,116,2.254,118,3.346,124,2.654,125,1.403,126,3.672,127,2.439,128,2.654,162,4.081,163,2.439,388,4.444,389,3.672,390,3.672,391,4.331,392,4.331,393,4.331,394,4.331,395,4.331]],["title/interceptors/ErrorHandlerInterceptor.html",[0,1.652,346,1.779]],["body/interceptors/ErrorHandlerInterceptor.html",[0,1.465,2,0.173,3,0.148,4,0.124,7,1.707,9,3.33,11,0.31,12,0.949,13,4.234,14,0.888,15,0.899,17,2.571,18,3.33,19,3.33,20,3.33,22,1.177,23,0.025,24,0.837,25,0.561,26,0.964,27,1.102,28,2.985,29,0.703,30,1.858,31,2.634,32,1.274,33,0.83,34,0.34,35,1.858,36,2.571,37,1.465,38,0.173,39,0.253,40,0.922,45,0.015,46,0.015,63,0.865,64,1.839,85,1.266,125,0.982,140,1.578,141,3.1,147,2.342,149,1.364,153,2.267,154,2.267,174,1.274,191,3.188,225,1.707,226,2.267,227,2.267,228,1.934,229,2.04,253,2.571,346,2.237,347,3.188,360,2.571,396,4.062,397,2.267,398,3.644,399,3.359,400,4.994,401,3.032,402,3.032,403,5.434,404,3.032,405,5.737,406,3.032,407,3.032,408,2.04,409,3.032,410,3.032,411,3.032,412,2.04,413,1.707,414,4.299,415,3.032,416,3.032,417,3.032,418,3.032,419,3.032,420,3.032,421,4.299,422,3.032,423,2.571,424,4.299,425,3.032,426,3.032,427,3.032,428,3.032,429,3.032,430,3.032]],["title/interfaces/ErrorMessageObject.html",[175,0.806,431,2.3]],["body/interfaces/ErrorMessageObject.html",[2,0.257,3,0.22,4,0.184,11,0.461,23,0.024,25,0.768,38,0.32,45,0.019,46,0.019,61,1.499,63,1.991,85,1.445,101,1.369,175,1.434,268,4.281,365,2.535,431,3.763,432,3.366,433,4.758,434,5.396,435,3.818,436,3.029,437,3.818,438,3.818,439,3.818]],["title/injectables/ErrorMessageService.html",[33,0.66,347,1.779]],["body/injectables/ErrorMessageService.html",[2,0.208,3,0.178,4,0.148,11,0.372,12,1.076,14,1.135,15,1.134,22,0.857,23,0.025,24,0.61,25,0.723,26,0.702,27,1.213,29,0.408,33,1.061,34,0.408,38,0.208,39,0.303,45,0.017,46,0.017,61,1.305,63,1.891,64,1.794,65,1.794,85,1.478,147,2.16,181,2.981,187,4.131,202,4.977,207,4.131,209,1.794,215,2.193,216,4.659,268,2.446,347,2.536,433,4.576,440,5.456,441,3.083,442,5.871,443,4.873,444,3.637,445,4.873,446,3.637,447,4.977,448,3.637,449,3.637,450,3.637,451,4.873,452,3.637,453,3.637,454,3.637,455,4.873]],["title/components/FormErrorWrapperComponent.html",[47,0.532,83,1.04]],["body/components/FormErrorWrapperComponent.html",[2,0.125,3,0.107,4,0.089,11,0.224,12,0.744,14,0.451,15,1.124,22,0.795,23,0.025,24,0.839,25,0.67,26,0.651,27,1.216,29,0.379,34,0.245,38,0.125,39,0.182,40,1.025,45,0.012,46,0.012,47,0.779,48,0.664,49,0.859,50,0.859,51,0.859,53,0.859,54,2.453,55,2.268,59,1.417,61,0.903,63,1.849,64,0.804,65,0.804,67,0.585,68,1.241,69,1.325,70,1.241,71,1.819,72,0.859,73,0.859,74,0.664,75,0.859,76,1.325,77,0.664,78,0.859,79,0.664,80,0.859,81,0.859,82,0.664,83,1.408,84,1.966,85,1.526,86,0.859,87,0.664,88,0.859,89,0.664,90,0.859,91,0.664,92,0.859,93,0.664,94,0.859,95,0.664,96,0.859,97,0.859,132,1.47,181,2.808,209,1.516,228,0.983,302,2.318,307,2.607,308,3.706,315,1.852,347,2.751,447,1.852,456,5.35,457,4.717,458,1.852,459,4.118,460,3.491,461,3.372,462,3.372,463,5.287,464,4.629,465,4.629,466,3.372,467,4.629,468,3.925,469,4.629,470,4.118,471,4.629,472,4.118,473,4.118,474,2.185,475,3.372,476,2.185,477,2.185,478,2.185,479,2.185,480,3.372,481,4.118,482,2.185,483,3.372,484,2.185,485,2.185,486,2.185,487,2.185,488,2.185,489,3.491,490,3.078,491,2.185,492,1.852,493,2.185,494,2.185,495,2.185,496,2.185,497,2.185,498,2.185,499,2.185,500,2.185,501,2.185,502,4.118,503,2.185,504,2.185,505,2.185,506,2.185,507,2.185,508,2.185,509,2.185,510,2.185,511,3.372,512,2.185,513,2.185,514,2.185,515,2.185,516,2.185,517,3.372]],["title/components/FullComponent.html",[47,0.532,87,1.04]],["body/components/FullComponent.html",[2,0.199,3,0.17,4,0.142,11,0.357,12,1.045,14,0.72,15,0.968,22,0.821,23,0.025,24,0.967,25,0.532,26,0.673,27,0.769,29,0.532,34,0.391,38,0.199,39,0.291,40,1.44,45,0.017,46,0.017,47,0.939,48,1.06,49,1.37,50,1.37,51,1.37,53,1.37,54,2.672,55,2.486,57,2.13,59,1.989,61,1.268,67,0.934,68,1.743,69,1.861,70,1.743,71,2.267,72,1.37,73,1.37,74,1.06,75,1.37,76,1.861,77,1.06,78,1.37,79,1.06,80,1.37,81,1.37,82,1.06,83,1.06,84,1.37,85,0.769,86,1.37,87,1.754,88,2.113,89,1.06,90,1.37,91,1.06,92,1.37,93,1.06,94,1.37,95,1.06,96,1.37,97,1.37,125,1.129,140,1.813,141,3.487,181,2.13,209,1.283,299,3.539,302,3.028,307,3.248,518,2.954,519,4.735,520,4.735,521,3.485,522,3.485,523,3.485,524,3.485,525,3.485,526,3.485]],["title/interfaces/HttpClient.html",[175,0.806,190,1.539]],["body/interfaces/HttpClient.html",[0,3.088,1,1.319,2,0.156,3,0.133,4,0.111,9,3.172,11,0.279,12,1.143,14,0.972,15,0.491,18,2.443,19,2.443,20,3.374,23,0.025,26,0.999,27,1.311,28,2.074,29,0.581,30,1.673,31,3.172,32,1.147,33,0.999,34,0.307,37,1.319,38,0.296,39,0.333,40,0.83,42,2.681,45,0.014,46,0.014,64,1.906,85,0.88,98,1.261,100,1.005,101,1.212,147,2.333,175,0.939,178,1.836,190,2.909,215,2.671,223,1.673,228,1.793,320,1.673,346,1.421,351,1.673,354,3.167,399,3.167,408,1.836,412,1.836,413,1.537,527,1.673,528,4.116,529,2.73,530,2.979,531,2.979,532,2.681,533,3.519,534,2.041,535,2.041,536,2.041,537,2.885,538,2.979,539,2.041,540,2.041,541,2.041,542,2.041,543,2.041,544,2.041,545,2.041,546,2.041,547,3.482,548,2.885,549,2.041,550,2.651,551,2.041,552,2.041,553,1.673,554,2.041,555,2.041,556,2.681,557,2.443,558,2.681,559,1.836,560,1.836,561,1.836,562,1.836,563,2.681,564,1.673,565,1.836,566,1.836,567,1.836,568,1.836,569,1.836,570,1.836,571,2.443,572,2.041,573,2.041,574,2.041,575,2.979,576,2.041,577,2.041,578,2.041,579,2.041,580,2.041,581,2.041,582,2.041,583,3.519,584,2.041,585,2.041,586,1.319,587,2.979,588,2.041,589,2.041,590,2.041,591,2.041]],["title/classes/HttpInterceptorHandler.html",[39,0.285,553,2.095]],["body/classes/HttpInterceptorHandler.html",[0,3.134,1,1.277,2,0.151,3,0.129,4,0.108,9,3.124,11,0.271,12,1.125,14,1.053,15,0.701,18,3.124,19,2.832,20,3.696,22,0.917,23,0.025,24,0.653,25,0.437,26,1.097,27,1.297,28,2.405,29,0.572,30,1.62,31,3.483,32,1.111,33,0.984,34,0.297,37,1.277,38,0.291,39,0.386,40,1.184,42,2.618,45,0.014,46,0.014,64,1.701,85,0.584,98,1.238,100,0.973,101,1.184,147,2.31,175,0.623,178,1.778,190,2.817,215,2.558,223,1.62,228,1.752,320,1.62,346,1.376,351,1.62,354,3.139,399,2.618,408,2.618,412,1.778,413,1.488,527,1.62,528,2.91,530,1.976,531,1.976,532,2.618,533,3.454,534,1.976,535,1.976,536,1.976,537,2.832,538,2.91,539,1.976,540,1.976,541,1.976,542,1.976,543,1.976,544,1.976,545,1.976,546,1.976,547,3.429,548,2.832,549,1.976,550,2.602,551,1.976,552,1.976,553,2.386,554,1.976,555,1.976,556,2.618,557,2.386,558,2.618,559,1.778,560,1.778,561,1.778,562,1.778,563,2.618,564,1.62,565,1.778,566,1.778,567,1.778,568,1.778,569,1.778,570,1.778,571,2.386,572,1.976,573,1.976,574,1.976,575,2.91,576,1.976,577,1.976,578,1.976,579,1.976,580,1.976,581,1.976,582,1.976,583,3.454,584,1.976,585,1.976,586,1.277,587,2.91,588,1.976,589,1.976,590,1.976,591,1.976,592,3.893,593,2.643,594,2.643,595,2.643]],["title/injectables/HttpService.html",[33,0.66,354,1.779]],["body/injectables/HttpService.html",[0,3.135,1,1.163,2,0.137,3,0.118,4,0.098,7,1.355,9,3.365,11,0.246,12,1.153,14,1.005,15,0.94,18,2.225,19,2.225,20,3.595,22,1.147,23,0.025,24,0.816,25,0.547,26,1.181,27,1.351,28,1.889,29,0.547,30,1.475,31,3.595,32,1.011,33,1.008,34,0.27,37,1.163,38,0.278,39,0.303,40,0.732,42,3.274,45,0.013,46,0.013,64,1.609,85,0.531,98,1.171,100,0.886,101,1.104,147,2.442,175,0.567,178,1.619,190,2.834,208,3.267,215,2.471,223,1.475,228,1.633,320,1.475,346,1.253,351,1.475,354,3.234,399,2.442,408,1.619,412,1.619,413,1.355,527,1.475,528,3.904,530,1.799,531,1.799,532,2.442,533,4.26,534,1.799,535,1.799,536,1.799,537,2.983,538,2.714,539,1.799,540,1.799,541,1.799,542,1.799,543,1.799,544,1.799,545,1.799,546,1.799,547,3.513,548,2.679,549,1.799,550,2.74,551,1.799,552,1.799,553,1.475,554,1.799,555,1.799,556,2.442,557,2.679,558,2.442,559,1.619,560,1.619,561,1.619,562,1.619,563,2.442,564,1.475,565,1.619,566,1.619,567,1.619,568,1.619,569,1.619,570,1.619,571,2.225,572,2.714,573,1.799,574,1.799,575,2.714,576,1.799,577,1.799,578,1.799,579,1.799,580,2.714,581,1.799,582,1.799,583,3.267,584,1.799,585,2.714,586,2.112,587,2.714,588,1.799,589,2.714,590,2.714,591,1.799,596,3.63,597,3.63,598,2.407,599,2.407,600,2.407,601,2.407,602,2.407,603,2.407]],["title/injectables/LocalStorageService.html",[33,0.66,191,1.779]],["body/injectables/LocalStorageService.html",[2,0.184,3,0.157,4,0.131,11,0.329,12,0.989,14,0.926,15,1.122,22,1.215,23,0.025,24,0.983,25,0.658,26,0.995,27,1.403,29,0.361,33,0.865,34,0.361,45,0.016,46,0.016,61,1.2,63,1.842,65,2.235,181,2.998,191,1.674,215,1.447,228,1.447,283,2.163,380,3.16,423,4.371,586,2.165,604,4.75,605,2.404,606,5.864,607,5.577,608,5.577,609,4.481,610,4.481,611,4.481,612,4.481,613,3.217,614,4.481,615,3.217,616,4.481,617,3.217,618,4.481,619,3.217,620,3.217,621,2.727,622,4.371,623,5.864,624,3.217,625,3.217,626,4.481,627,3.217,628,3.217,629,3.217,630,3.217,631,2.727,632,3.217,633,3.217,634,3.217,635,3.217,636,3.217,637,3.217,638,3.217,639,3.217,640,3.217,641,3.217]],["title/components/LoginComponent.html",[47,0.532,89,1.04]],["body/components/LoginComponent.html",[2,0.142,3,0.121,4,0.101,11,0.254,12,0.82,14,0.767,15,1.09,22,0.585,23,0.025,24,0.829,25,0.555,26,0.479,27,1.091,29,0.594,34,0.279,38,0.142,39,0.207,40,1.354,45,0.013,46,0.013,47,0.824,48,0.755,49,0.976,50,0.976,51,0.976,53,0.976,54,2.519,55,2.334,57,1.672,59,1.561,61,0.995,64,0.914,65,0.914,67,0.665,68,1.368,69,1.46,70,1.368,71,1.943,72,0.976,73,0.976,74,0.755,75,0.976,76,1.46,77,0.755,78,0.976,79,0.755,80,0.976,81,0.976,82,0.755,83,0.755,84,0.976,85,1.091,86,0.976,87,0.755,88,0.976,89,1.503,90,0.976,91,0.755,92,0.976,93,0.755,94,0.976,95,0.755,96,0.976,97,0.976,111,2.317,125,0.804,132,1.67,140,1.292,141,3.257,142,2.782,147,2.08,149,1.672,154,1.855,155,2.507,163,1.398,174,1.043,181,2.003,183,4.709,205,2.104,209,1.82,225,1.398,245,1.521,302,2.507,307,2.783,339,3.695,367,1.521,368,3.128,372,2.317,492,2.104,642,2.104,643,3.715,644,3.715,645,4.943,646,4.943,647,4.191,648,4.943,649,4.882,650,3.715,651,2.482,652,2.482,653,2.482,654,2.482,655,4.882,656,2.482,657,2.482,658,2.482,659,1.855,660,3.15,661,2.104,662,3.15,663,2.104,664,2.482,665,2.482,666,2.104,667,2.482,668,2.482,669,2.482,670,2.482,671,3.15,672,3.775,673,2.482,674,2.104,675,4.191,676,3.715,677,3.715,678,2.482,679,3.15,680,3.715,681,3.715,682,3.15,683,3.715,684,3.715,685,2.482]],["title/interfaces/LoginPayload.html",[175,0.806,366,1.925]],["body/interfaces/LoginPayload.html",[2,0.241,3,0.206,4,0.172,11,0.433,23,0.024,25,0.604,38,0.355,45,0.019,46,0.019,61,1.44,63,2.028,101,1.285,145,2.042,151,2.38,174,1.776,175,1.514,188,2.59,195,2.66,363,2.59,364,2.843,365,2.38,366,3.027,367,3.813,368,3.617,369,2.38,370,3.295,371,3.295,372,2.798,373,3.295,374,2.59,375,2.843,376,2.843,377,2.843,378,2.843,379,2.843,380,3.623,381,2.843,382,2.843]],["title/components/NotFoundComponent.html",[47,0.532,91,1.04]],["body/components/NotFoundComponent.html",[2,0.205,3,0.176,4,0.147,11,0.368,12,1.067,15,0.647,23,0.025,24,0.916,27,0.794,29,0.404,34,0.404,38,0.205,39,0.3,40,1.47,45,0.017,46,0.017,47,0.95,48,1.093,49,1.413,50,1.413,51,1.413,53,1.413,54,2.684,55,2.499,57,2.176,59,2.032,67,0.963,68,1.78,69,1.9,70,1.78,71,2.297,72,1.413,73,1.413,74,1.093,75,1.413,76,1.9,77,1.093,78,1.413,79,1.093,80,1.413,81,1.413,82,1.093,83,1.093,84,1.413,85,0.794,86,1.413,87,1.093,88,1.413,89,1.093,90,1.413,91,1.777,92,1.413,93,1.093,94,1.413,95,1.093,96,1.413,97,1.413,209,1.324,460,4.632,468,4.954,586,1.737,686,4.1,687,3.048,688,5.844,689,4.836,690,4.836,691,3.595,692,3.595,693,4.836,694,4.836,695,4.836,696,4.836,697,4.836,698,4.836,699,5.844,700,4.836]],["title/interfaces/RootObject.html",[175,0.806,436,2.3]],["body/interfaces/RootObject.html",[2,0.257,3,0.22,4,0.184,11,0.461,23,0.024,25,0.735,26,1.08,38,0.32,45,0.019,46,0.019,61,1.499,63,1.967,85,1.445,101,1.369,175,1.434,268,3.029,365,2.535,431,3.029,432,3.366,433,3.366,434,5.396,435,3.818,436,3.763,437,5.396,438,5.396,439,5.396]],["title/classes/RouteReusableStrategy.html",[39,0.285,356,2.3]],["body/classes/RouteReusableStrategy.html",[2,0.173,3,0.148,4,0.123,7,1.701,11,0.309,12,0.946,15,1.031,22,1.35,23,0.025,24,0.96,25,0.643,26,1.106,27,1.404,29,0.339,38,0.173,39,0.358,45,0.015,46,0.015,125,0.979,145,2.875,149,1.929,155,2.414,181,3.03,209,1.578,213,4.002,324,4.967,352,4.225,356,2.884,358,4.448,359,3.635,398,3.635,537,2.627,548,2.627,550,2.414,701,5.045,702,2.561,703,4.287,704,5.95,705,4.287,706,4.287,707,4.287,708,3.635,709,3.635,710,4.287,711,4.287,712,4.287,713,4.984,714,4.984,715,4.287,716,6.861,717,3.021,718,5.95,719,4.287,720,3.021,721,4.287,722,3.021,723,3.021,724,4.984,725,3.021,726,4.287,727,3.021,728,4.984,729,3.021,730,3.021,731,3.021,732,3.021]],["title/modules/SharedModule.html",[98,0.916,109,1.925]],["body/modules/SharedModule.html",[2,0.184,3,0.157,4,0.131,23,0.025,29,0.748,34,0.362,38,0.319,39,0.269,45,0.016,46,0.016,67,0.863,74,2.027,77,2.027,79,2.027,83,2.027,85,0.991,87,2.027,95,2.027,98,1.202,100,1.187,101,1.57,102,2.335,103,2.335,109,3.926,110,2.526,111,1.677,112,1.677,115,2.75,116,1.677,118,2.75,124,2.75,125,1.044,126,2.168,127,1.815,128,1.975,134,2.732,161,3.804,162,3.354,163,1.815,336,2.732,457,2.409,733,2.732,734,2.732,735,2.732,736,3.223,737,3.223,738,3.223,739,3.223,740,3.223,741,3.223,742,3.223,743,3.223,744,3.223]],["title/components/SignupComponent.html",[47,0.532,93,1.04]],["body/components/SignupComponent.html",[2,0.15,3,0.128,4,0.107,11,0.269,12,0.856,14,0.801,15,1.057,22,0.62,23,0.025,24,0.852,25,0.517,26,0.508,27,1.017,29,0.609,34,0.295,38,0.15,39,0.219,40,1.179,45,0.014,46,0.014,47,0.844,48,0.8,49,1.034,50,1.034,51,1.034,53,1.034,54,2.547,55,2.362,57,1.745,59,1.63,61,1.039,64,0.968,65,0.968,67,0.705,68,1.428,69,1.524,70,1.428,71,1.999,72,1.034,73,1.034,74,0.8,75,1.034,76,1.524,77,0.8,78,1.034,79,0.8,80,1.034,81,1.034,82,0.8,83,0.8,84,1.034,85,1.123,86,1.034,87,0.8,88,1.034,89,0.8,90,1.034,91,0.8,92,1.034,93,1.546,94,1.034,95,0.8,96,1.034,97,1.034,125,0.852,132,1.769,140,1.369,141,3.3,142,2.835,147,2.131,149,1.183,153,1.966,155,2.594,163,1.481,181,2.073,186,4.81,195,1.183,209,1.696,225,1.481,240,2.23,245,1.612,257,3.288,302,2.594,307,2.863,339,3.801,368,1.481,370,1.612,371,1.612,372,1.369,373,1.612,374,1.612,647,4.311,649,4.975,655,4.311,659,1.966,660,3.288,661,2.23,662,3.288,663,2.23,666,2.23,671,2.23,672,4.81,674,2.23,675,3.288,679,4.311,745,2.23,746,3.879,747,3.879,748,5.086,749,3.879,750,2.63,751,2.63,752,2.63,753,2.63,754,2.63,755,2.63,756,2.63,757,2.63,758,2.63,759,2.63,760,3.879,761,3.879,762,3.879,763,3.879,764,3.879,765,3.879]],["title/interfaces/SignupPayload.html",[175,0.806,369,1.925]],["body/interfaces/SignupPayload.html",[2,0.225,3,0.192,4,0.16,11,0.403,23,0.025,25,0.723,38,0.346,45,0.018,46,0.018,61,1.375,63,2.041,101,1.196,145,1.9,151,2.215,174,1.653,175,1.48,188,2.411,195,2.571,363,2.411,364,2.646,365,2.215,366,2.215,367,2.411,368,3.537,369,2.89,370,3.849,371,3.849,372,3.269,373,3.849,374,3.711,375,2.646,376,2.646,377,2.646,378,2.646,379,2.646,380,3.501,381,2.646,382,2.646]],["title/components/SpinnerComponent.html",[47,0.532,95,1.04]],["body/components/SpinnerComponent.html",[2,0.169,3,0.144,4,0.12,11,0.302,12,0.931,14,0.871,15,0.967,22,0.696,23,0.025,24,0.9,25,0.332,26,0.57,27,0.652,29,0.553,33,0.57,34,0.332,38,0.169,39,0.246,40,1.283,45,0.015,46,0.015,47,0.884,48,0.898,49,1.658,50,1.161,51,1.161,53,1.161,54,2.601,55,2.416,61,1.13,64,1.553,65,1.553,67,0.791,68,1.553,69,1.658,70,1.553,71,2.11,72,1.161,73,1.161,74,0.898,75,1.161,76,1.658,77,0.898,78,1.161,79,0.898,80,1.161,81,1.161,82,0.898,83,0.898,84,1.161,85,0.652,86,1.161,87,0.898,88,1.161,89,0.898,90,1.161,91,0.898,92,1.161,93,0.898,94,1.161,95,1.633,96,1.934,97,1.161,116,1.537,125,0.957,140,1.537,141,3.074,147,1.658,149,2.215,155,2.771,181,2.416,209,1.553,308,3.611,314,3.577,319,4.815,320,3.29,766,2.504,767,4.922,768,4.219,769,4.219,770,5.369,771,5.369,772,4.922,773,4.545,774,4.219,775,4.219,776,4.219,777,4.219,778,4.219,779,2.953,780,2.953,781,2.953,782,4.219,783,4.219,784,4.219,785,2.953,786,2.953,787,5.369]],["title/interfaces/User.html",[175,0.806,195,1.539]],["body/interfaces/User.html",[2,0.207,3,0.177,4,0.148,11,0.371,23,0.025,25,0.757,26,1.131,38,0.335,45,0.017,46,0.017,61,1.301,63,2.023,101,1.101,145,2.649,151,2.038,174,1.521,175,1.44,188,2.218,195,2.637,363,2.218,364,2.435,365,2.038,366,2.038,367,2.218,368,2.735,369,2.038,370,3.746,371,3.746,372,3.181,373,3.746,374,2.218,375,3.941,376,3.941,377,3.941,378,3.941,379,3.941,380,4.056,381,3.941,382,3.941]],["title/injectables/UserService.html",[33,0.66,348,2.095]],["body/injectables/UserService.html",[2,0.27,3,0.231,4,0.193,14,0.977,15,0.852,22,1.115,23,0.025,24,0.793,25,0.531,26,0.913,29,0.698,32,1.988,33,1.201,34,0.531,38,0.27,39,0.395,45,0.02,46,0.02,189,3.537,190,3.038,195,2.129,254,3.879,278,4.011,348,3.534,537,2.899,788,4.011,789,4.731,790,4.731,791,4.731,792,4.731]],["title/injectables/UtilService.html",[33,0.66,349,2.095]],["body/injectables/UtilService.html",[2,0.227,3,0.194,4,0.162,11,0.407,12,1.14,14,1.186,15,1.034,22,1.217,23,0.025,24,0.866,25,0.58,26,0.997,27,1.267,29,0.446,33,1.108,34,0.446,38,0.227,39,0.331,45,0.018,46,0.018,63,1.639,65,1.902,209,1.463,213,2.672,228,2.325,258,3.368,283,3.861,286,3.368,349,3.166,793,3.368,794,5.166,795,5.166,796,3.973,797,5.166,798,3.973,799,5.166,800,3.973,801,5.741,802,3.973,803,6.079,804,3.973,805,3.973,806,3.973,807,3.973,808,3.973,809,3.973,810,3.973,811,3.973,812,3.973,813,3.973,814,3.973,815,3.973,816,3.973,817,3.973,818,3.973]],["title/coverage.html",[819,3.962]],["body/coverage.html",[4,0.112,23,0.025,25,0.309,33,1.149,35,3.185,39,0.335,45,0.014,46,0.014,47,0.997,48,0.837,52,2.334,74,0.837,77,0.837,79,0.837,82,0.837,83,0.837,85,0.885,87,0.837,89,0.837,91,0.837,93,0.837,95,0.837,142,1.33,171,2.998,174,1.157,175,1.403,190,1.239,191,1.433,195,1.239,215,1.239,229,2.698,254,1.852,255,2.334,283,4.76,298,2.334,301,2.334,333,2.334,334,2.334,335,2.334,347,1.433,348,1.687,349,1.687,354,1.433,356,1.852,358,2.058,363,3.185,366,1.55,369,1.55,383,2.334,396,2.058,397,2.058,431,1.852,432,2.998,436,1.852,440,2.334,441,2.334,456,2.334,457,2.058,458,2.334,490,2.058,518,2.334,527,3.185,553,1.687,571,1.687,586,2.786,604,4.45,605,4.45,642,2.334,686,2.334,687,2.334,701,2.334,702,2.334,745,2.334,766,2.334,773,2.058,788,2.334,793,2.334,819,2.334,820,2.753,821,2.753,822,5.198,823,2.753,824,4.011,825,2.753,826,2.753,827,4.787,828,6.718,829,2.753,830,3.4,831,2.334,832,4.011,833,4.011,834,4.011,835,2.753,836,2.753,837,2.753,838,2.753,839,2.334,840,2.334,841,2.334,842,2.334,843,2.334,844,2.334,845,4.731,846,2.753,847,2.753,848,5.525,849,2.753,850,2.753,851,2.334,852,2.334,853,2.334,854,2.334,855,3.4,856,2.334,857,2.334,858,2.753,859,2.753]],["title/dependencies.html",[100,1.515,860,2.852]],["body/dependencies.html",[23,0.025,34,0.517,37,2.226,45,0.02,46,0.02,100,1.696,102,2.953,114,3.906,116,2.398,120,4.241,121,3.477,125,1.493,127,2.594,128,2.824,163,2.594,557,2.824,861,4.608,862,6.963,863,4.608,864,4.608,865,4.608,866,3.906,867,4.608,868,4.608,869,3.906,870,4.608,871,4.608,872,4.608,873,4.608,874,4.608,875,4.608,876,4.608,877,4.608]],["title/miscellaneous/functions.html",[586,1.988,878,1.918]],["body/miscellaneous/functions.html",[11,0.456,22,1.537,23,0.024,24,1.131,25,0.766,26,1.259,45,0.019,46,0.019,65,2.045,586,2.151,604,3.328,605,5.044,621,3.775,622,4.709,631,3.775,708,4.709,839,4.709,840,4.709,841,4.709,842,5.133,843,4.709,844,4.709,878,2.995,879,6.653,880,4.452,881,4.452,882,4.452]],["title/index.html",[11,0.292,219,2.418,883,2.418]],["body/index.html",[3,0.231,4,0.112,7,1.55,23,0.024,35,2.458,45,0.014,46,0.014,47,0.927,55,2.427,56,3.4,65,1.014,68,1.014,70,1.014,98,1.393,100,1.014,121,1.687,127,1.55,172,2.334,215,1.239,245,1.687,324,2.058,413,1.55,550,2.664,564,1.687,709,2.334,773,4.311,866,4.011,869,3.4,883,3.4,884,4.731,885,2.334,886,2.753,887,4.011,888,4.731,889,6.221,890,5.198,891,6.752,892,2.753,893,5.525,894,5.198,895,2.753,896,2.753,897,2.753,898,2.753,899,5.953,900,2.753,901,2.753,902,5.953,903,2.753,904,4.011,905,4.011,906,2.753,907,6.32,908,2.753,909,5.198,910,2.753,911,4.011,912,2.753,913,2.753,914,2.753,915,2.753,916,2.753,917,2.753,918,4.011,919,2.753,920,2.753,921,2.753,922,2.753,923,5.953,924,2.753,925,5.198,926,4.731,927,2.753,928,4.011,929,2.753,930,2.753,931,2.753,932,2.753,933,2.753,934,2.753,935,2.753,936,4.731,937,2.753,938,2.753,939,6.639,940,4.011,941,2.753,942,6.101,943,4.889,944,2.753,945,3.4,946,2.753,947,3.4,948,2.753,949,5.198,950,2.753,951,2.753,952,2.753,953,2.753,954,4.011,955,4.011,956,4.011,957,2.753,958,2.753,959,2.334,960,2.753,961,2.753,962,2.753,963,2.753,964,2.753,965,2.753,966,2.753,967,2.753,968,2.753,969,2.753,970,2.334,971,2.753,972,2.753,973,2.753]],["title/modules.html",[98,1.252]],["body/modules.html",[23,0.021,45,0.021,46,0.021,98,1.365,99,3.427,108,3.123,109,2.869,121,4.152,156,3.427,388,3.427,970,5.743,974,6.775,975,6.775]],["title/overview.html",[976,3.962]],["body/overview.html",[1,2.682,23,0.025,33,0.615,38,0.182,39,0.266,45,0.016,46,0.016,47,0.496,48,1.889,67,0.853,74,1.889,77,1.889,79,1.889,82,1.559,83,1.889,87,1.889,89,1.559,91,1.559,93,1.559,95,1.889,98,1.192,99,4.331,100,1.172,101,0.968,102,1.657,103,1.657,104,2.7,105,2.7,106,2.7,107,2.7,108,4.231,109,3.922,110,2.505,111,1.657,112,1.657,136,2.38,142,2.478,156,4.387,157,2.7,158,2.7,175,0.75,191,2.669,290,2.7,344,2.7,345,2.7,346,2.669,347,2.669,348,3.143,349,3.143,388,3.735,389,2.7,390,2.7,733,2.7,734,2.7,735,2.7,885,3.772,976,2.7,977,3.184,978,3.184,979,3.184]],["title/miscellaneous/variables.html",[827,3.076,878,1.918]],["body/miscellaneous/variables.html",[0,2.488,1,1.551,11,0.329,14,0.663,23,0.025,25,0.724,35,4.082,45,0.016,46,0.016,63,1.59,64,2.452,65,2.405,149,2.013,155,2.9,171,2.4,174,1.88,215,1.444,223,1.967,229,4.081,351,1.967,354,1.67,372,2.328,396,2.4,397,3.345,413,1.807,489,5.539,490,3.85,527,1.967,532,2.159,547,2.159,548,1.967,550,1.807,556,2.159,557,1.967,558,2.159,559,2.159,560,2.159,561,2.159,562,2.159,563,3.01,564,1.967,565,2.159,566,2.159,567,2.159,568,2.159,569,2.159,570,2.159,571,3.415,659,2.4,682,2.721,827,2.4,830,2.721,831,4.367,851,2.721,852,2.721,853,2.721,854,2.721,855,2.721,856,4.367,857,4.967,878,2.159,943,4.724,945,4.724,947,2.721,959,2.721,980,4.474,981,4.474,982,3.21,983,3.21,984,3.21,985,3.21,986,3.21,987,3.21,988,3.21,989,3.21,990,3.21,991,3.21,992,3.21,993,5.572,994,3.21,995,5.572,996,3.21,997,3.21,998,3.21,999,3.21,1000,3.21,1001,3.21,1002,4.474]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":283,"title":{},"body":{"injectables/BaseAPIClass.html":{},"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["0.69",{"_index":778,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.8.26",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":290,"title":{},"body":{"injectables/BaseAPIClass.html":{},"overview.html":{}}}],["1.3.3",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":627,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["11",{"_index":978,"title":{},"body":{"overview.html":{}}}],["115",{"_index":776,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["16",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["170",{"_index":777,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["2",{"_index":979,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":625,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["3.1.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["4/9",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":416,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":415,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["404",{"_index":693,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["44",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":977,"title":{},"body":{"overview.html":{}}}],["50",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":626,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["7",{"_index":885,"title":{},"body":{"index.html":{},"overview.html":{}}}],["7.0.0",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["_credenti",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_error",{"_index":442,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":426,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":375,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["abstract",{"_index":277,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["access",{"_index":954,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":187,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":188,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["account",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["activatedrout",{"_index":309,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["activatedroutesnapshot",{"_index":716,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_compon",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["ad",{"_index":546,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["add",{"_index":398,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"classes/RouteReusableStrategy.html":{}}}],["addinterceptor",{"_index":596,"title":{},"body":{"injectables/HttpService.html":{}}}],["addinterceptor(interceptor",{"_index":590,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["addit",{"_index":917,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":460,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"components/NotFoundComponent.html":{}}}],["agre",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{}}}],["allow",{"_index":548,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["alway",{"_index":568,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":884,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":968,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/UserService.html":{}}}],["angular/common/http/src/cli",{"_index":544,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["angular/common/http/src/interceptor",{"_index":551,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["angular/compil",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":163,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"dependencies.html":{}}}],["angular/servic",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["api_endpoint",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apierrormessag",{"_index":463,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["apierrortyp",{"_index":470,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["apiprefixinterceptor",{"_index":1,"title":{"interceptors/ApiPrefixInterceptor.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apiserviceurl",{"_index":471,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["app",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["app.compon",{"_index":913,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.t",{"_index":915,"title":{},"body":{"index.html":{}}}],["app.routing.t",{"_index":916,"title":{},"body":{"index.html":{}}}],["app/app.compon",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.rout",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["app/authentication/404/not",{"_index":164,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["app/authentication/authentication.rout",{"_index":167,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["app/authentication/login/login.compon",{"_index":168,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["app/authentication/signup/signup.compon",{"_index":169,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["app/cor",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/FormErrorWrapperComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["app/core/authent",{"_index":353,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/authentication/authentication.servic",{"_index":146,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["app/core/class/baseapi.class",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["app/core/http",{"_index":355,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/http/error",{"_index":534,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["app/core/loc",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["app/core/rout",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{}}}],["app/core/servic",{"_index":360,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["app/dashboard/dashboard.rout",{"_index":393,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app/dashboard/dashboard/dashboard.compon",{"_index":394,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app/shar",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["app/shared/breadcrumb/breadcrumb.compon",{"_index":737,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/button",{"_index":741,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/form",{"_index":742,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/layouts/blank/blank.compon",{"_index":738,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/layouts/full/full.compon",{"_index":739,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/spinner.compon",{"_index":740,"title":{},"body":{"modules/SharedModule.html":{}}}],["appcompon",{"_index":48,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["array.isarray(obj[propnam",{"_index":804,"title":{},"body":{"injectables/UtilService.html":{}}}],["asset",{"_index":918,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":439,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["augment",{"_index":545,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["auth",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authent",{"_index":151,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["authentication.credenti",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["authentication.loginpayload",{"_index":197,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.signuppayload",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.us",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{}}}],["authenticationguard",{"_index":137,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{}}}],["authenticationmodul",{"_index":156,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":166,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":142,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":937,"title":{},"body":{"index.html":{}}}],["automat",{"_index":961,"title":{},"body":{"index.html":{}}}],["back",{"_index":700,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["backgroundcolor",{"_index":772,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["base",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["baseapiclass",{"_index":254,"title":{"injectables/BaseAPIClass.html":{}},"body":{"injectables/BaseAPIClass.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["baseurl",{"_index":256,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["below",{"_index":565,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["better",{"_index":563,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["blank",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["blank.component.html",{"_index":300,"title":{},"body":{"components/BlankComponent.html":{}}}],["blankcompon",{"_index":74,"title":{"components/BlankComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bodi",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{}}}],["boilerpl",{"_index":886,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":145,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/ButtonLoaderComponent.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/RouteReusableStrategy.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["breadcrumb",{"_index":303,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["breadcrumb.component.html",{"_index":305,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":304,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumbcompon",{"_index":77,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brows",{"_index":975,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":923,"title":{},"body":{"index.html":{}}}],["build:dev",{"_index":941,"title":{},"body":{"index.html":{}}}],["build:loc",{"_index":946,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":944,"title":{},"body":{"index.html":{}}}],["button",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["buttonloadercompon",{"_index":79,"title":{"components/ButtonLoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":635,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":633,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["canactiv",{"_index":139,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["catcherror",{"_index":407,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["chain",{"_index":552,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["chang",{"_index":963,"title":{},"body":{"index.html":{}}}],["check",{"_index":194,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["class",{"_index":39,"title":{"classes/HttpInterceptorHandler.html":{},"classes/RouteReusableStrategy.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":202,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["clearal",{"_index":608,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(typ",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":609,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":614,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cli",{"_index":966,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":157,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":158,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_import",{"_index":159,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_coremodul",{"_index":344,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_provid",{"_index":345,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":389,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":390,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":733,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":734,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":735,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":907,"title":{},"body":{"index.html":{}}}],["command",{"_index":969,"title":{},"body":{"index.html":{}}}],["common",{"_index":912,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["compil",{"_index":900,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":957,"title":{},"body":{"index.html":{}}}],["compodoc:gen",{"_index":952,"title":{},"body":{"index.html":{}}}],["compodoc:serv",{"_index":953,"title":{},"body":{"index.html":{}}}],["compon",{"_index":47,"title":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["configur",{"_index":547,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["console.error('request",{"_index":429,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log('not",{"_index":150,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["console.log(`login",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(`signup",{"_index":758,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log(credenti",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this._error",{"_index":454,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.log(us",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{}}}],["const",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FormErrorWrapperComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["constructor(errormessageservic",{"_index":474,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["constructor(httpcli",{"_index":189,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"injectables/UserService.html":{}}}],["constructor(httphandl",{"_index":598,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(next",{"_index":593,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["constructor(priv",{"_index":494,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["constructor(protect",{"_index":278,"title":{},"body":{"injectables/BaseAPIClass.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":524,"title":{},"body":{"components/FullComponent.html":{}}}],["constructor(rout",{"_index":140,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["context",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":472,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["controlnam",{"_index":473,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["copytoclipboard",{"_index":794,"title":{},"body":{"injectables/UtilService.html":{}}}],["copytoclipboard(valu",{"_index":797,"title":{},"body":{"injectables/UtilService.html":{}}}],["core",{"_index":869,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["coremodul",{"_index":108,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverag",{"_index":819,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":374,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["creat",{"_index":257,"title":{},"body":{"injectables/BaseAPIClass.html":{},"components/SignupComponent.html":{}}}],["create(payload",{"_index":264,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["createcooki",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(nam",{"_index":621,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createdat",{"_index":381,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["credenti",{"_index":174,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["curr",{"_index":724,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":731,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["custom",{"_index":411,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["dashboard",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.css",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":82,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":388,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardrout",{"_index":392,"title":{},"body":{"modules/DashboardModule.html":{}}}],["data",{"_index":708,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["date",{"_index":380,"title":{},"body":{"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["date.now",{"_index":453,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettim",{"_index":624,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstr",{"_index":628,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["day",{"_index":622,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["declar",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"modules/DashboardModule.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"modules/SharedModule.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"overview.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["definit",{"_index":709,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["delet",{"_index":258,"title":{},"body":{"injectables/BaseAPIClass.html":{},"injectables/UtilService.html":{}}}],["delete(id",{"_index":266,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["deleteal",{"_index":259,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["depend",{"_index":100,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["detachedroutehandl",{"_index":718,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtre",{"_index":728,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["dev",{"_index":959,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":893,"title":{},"body":{"index.html":{}}}],["direct",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["directive|pipe|service|class|modul",{"_index":965,"title":{},"body":{"index.html":{}}}],["directli",{"_index":564,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["disabl",{"_index":558,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["dist",{"_index":899,"title":{},"body":{"index.html":{}}}],["document",{"_index":773,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["document.body.appendchild(selbox",{"_index":814,"title":{},"body":{"injectables/UtilService.html":{}}}],["document.body.removechild(selbox",{"_index":818,"title":{},"body":{"injectables/UtilService.html":{}}}],["document.cooki",{"_index":629,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":634,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.createelement('textarea",{"_index":807,"title":{},"body":{"injectables/UtilService.html":{}}}],["document.execcommand('copi",{"_index":817,"title":{},"body":{"injectables/UtilService.html":{}}}],["dom",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["don't",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynam",{"_index":557,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":496,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["e.error",{"_index":503,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["e.serviceurl",{"_index":499,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["e.typ",{"_index":497,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["e2",{"_index":903,"title":{},"body":{"index.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["email",{"_index":372,"title":{},"body":{"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["emailhash",{"_index":377,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["emailverifi",{"_index":376,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["enabl",{"_index":569,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["enalb",{"_index":971,"title":{},"body":{"index.html":{}}}],["encapsul",{"_index":768,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["end",{"_index":904,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["enter",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["entri",{"_index":925,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":744,"title":{},"body":{"modules/SharedModule.html":{}}}],["env",{"_index":943,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["env/environ",{"_index":36,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["environ",{"_index":35,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":427,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":10,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["error",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["error_object",{"_index":490,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorhandl",{"_index":400,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(respons",{"_index":402,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":346,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"overview.html":{}}}],["errorkey",{"_index":464,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errormessag",{"_index":483,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errormessage.replace(/{{field}}/g",{"_index":513,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errormessage.replace(/{{value}}/g",{"_index":512,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errormessageobject",{"_index":431,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservic",{"_index":347,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessageservice.errors$.subscrib",{"_index":495,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errormodel",{"_index":435,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":447,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{}}}],["errorobj",{"_index":481,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errorobj[typ",{"_index":511,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errorobject",{"_index":465,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["errorrespons",{"_index":417,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":418,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":425,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.valid",{"_index":419,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":422,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":420,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["event",{"_index":319,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/SpinnerComponent.html":{}}}],["eventemitt",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["except",{"_index":560,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["expir",{"_index":623,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":703,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":38,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["extend",{"_index":537,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/UserService.html":{}}}],["extens",{"_index":559,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":155,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":315,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FormErrorWrapperComponent.html":{}}}],["filter(ev",{"_index":318,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["filter(rout",{"_index":325,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["filterobject",{"_index":272,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["filterobject[key",{"_index":285,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["filterobject[key].tostring().length",{"_index":287,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["final",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["find",{"_index":697,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["firstnam",{"_index":370,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["fitlerkey",{"_index":280,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["fitlerkeys.foreach((key",{"_index":284,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["fitlerkeys.length",{"_index":282,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["fix",{"_index":809,"title":{},"body":{"injectables/UtilService.html":{}}}],["folder",{"_index":889,"title":{},"body":{"index.html":{}}}],["font",{"_index":920,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["formateerror",{"_index":466,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["formateerror(errormessag",{"_index":480,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["formateerror(errorobject[errorkey],control.errors[errorkey",{"_index":517,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["formbuild",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formerrorwrappercompon",{"_index":83,"title":{"components/FormErrorWrapperComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formgroup",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodul",{"_index":162,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":688,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["found.compon",{"_index":165,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["found.component.css",{"_index":689,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":690,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":687,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:9",{"_index":691,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["full",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["full.component.html",{"_index":520,"title":{},"body":{"components/FullComponent.html":{}}}],["full.component.scss",{"_index":519,"title":{},"body":{"components/FullComponent.html":{}}}],["fullcompon",{"_index":87,"title":{"components/FullComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["function",{"_index":586,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["futur",{"_index":726,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reus",{"_index":732,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":730,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":967,"title":{},"body":{"index.html":{}}}],["gener",{"_index":902,"title":{},"body":{"index.html":{}}}],["get",{"_index":219,"title":{"index.html":{}},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getal",{"_index":260,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["getall(filterobject",{"_index":270,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["getbyid",{"_index":261,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["getbyid(id",{"_index":273,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["getcredenti",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(typ",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterror",{"_index":449,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":610,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":616,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getsessionnam",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["given",{"_index":707,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["global",{"_index":928,"title":{},"body":{"index.html":{}}}],["go",{"_index":887,"title":{},"body":{"index.html":{}}}],["guard",{"_index":136,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["handl",{"_index":592,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["handle(request",{"_index":408,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["handler",{"_index":399,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["handler.interceptor",{"_index":535,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["handler.interceptor.t",{"_index":397,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:22",{"_index":401,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:29",{"_index":406,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:39",{"_index":404,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["haserror",{"_index":467,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["here",{"_index":412,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["home",{"_index":699,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["http://development.com",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://development.com/v1",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost/v1",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:1355",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:1355/v1",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":940,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":956,"title":{},"body":{"index.html":{}}}],["http://productionurl.com",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_dynamic_interceptor",{"_index":571,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":351,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":190,"title":{"interfaces/HttpClient.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["httpclient(handler).request(method",{"_index":584,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpclientmodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["httpevent",{"_index":30,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httphandler",{"_index":20,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpinterceptor",{"_index":31,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpinterceptorhandl",{"_index":553,"title":{"classes/HttpInterceptorHandler.html":{}},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["httpinterceptorhandler(next",{"_index":582,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httprequest",{"_index":18,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httprespons",{"_index":403,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":706,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://github.com/microsoft/typescript/issues/13897",{"_index":543,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpservic",{"_index":354,"title":{"injectables/HttpService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":268,"title":{},"body":{"injectables/BaseAPIClass.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["identifi",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":919,"title":{},"body":{"index.html":{}}}],["implement",{"_index":40,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":924,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}}}],["inject",{"_index":33,"title":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"injectables/ErrorMessageService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(docu",{"_index":785,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["inject(http_dynamic_interceptor",{"_index":573,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["injectiontoken",{"_index":532,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":533,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["input",{"_index":308,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/SpinnerComponent.html":{}}}],["instal",{"_index":890,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":531,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["instanceof",{"_index":320,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/SpinnerComponent.html":{}}}],["instruct",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["intercept",{"_index":13,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["intercept(request",{"_index":17,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["interceptor",{"_index":0,"title":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["interceptortyp",{"_index":589,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["interfac",{"_index":175,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/HttpClient.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["isauthent",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isload",{"_index":339,"title":{},"body":{"components/ButtonLoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["isspinnervis",{"_index":770,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["jqueri",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["js",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredenti",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credenti",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["key",{"_index":423,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{}}}],["key}=${filterobject[key",{"_index":288,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["label",{"_index":340,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["lastlogin",{"_index":379,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["lastnam",{"_index":371,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["latest",{"_index":958,"title":{},"body":{"index.html":{}}}],["launch",{"_index":892,"title":{},"body":{"index.html":{}}}],["layout",{"_index":299,"title":{},"body":{"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FullComponent.html":{}}}],["layout'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["lint",{"_index":942,"title":{},"body":{"index.html":{}}}],["loader",{"_index":336,"title":{},"body":{"components/ButtonLoaderComponent.html":{},"modules/SharedModule.html":{}}}],["loader'},{'nam",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["loader.component.css",{"_index":337,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["loader.component.html",{"_index":338,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["loader.component.t",{"_index":335,"title":{},"body":{"components/ButtonLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:10",{"_index":342,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["loader.component.ts:12",{"_index":341,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["loader.component.ts:16",{"_index":343,"title":{},"body":{"components/ButtonLoaderComponent.html":{}}}],["loader/button",{"_index":334,"title":{},"body":{"components/ButtonLoaderComponent.html":{},"coverage.html":{}}}],["local",{"_index":947,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["localhost:4200",{"_index":896,"title":{},"body":{"index.html":{}}}],["localstorag",{"_index":606,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservic",{"_index":191,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":201,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login",{"_index":183,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["login(payload",{"_index":196,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.valu",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/logout",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logincompon",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginpayload",{"_index":366,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":184,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["luxon",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["main.t",{"_index":930,"title":{},"body":{"index.html":{}}}],["make",{"_index":539,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["map",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{}}}],["map(",{"_index":501,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["map((bodi",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{}}}],["map(rout",{"_index":322,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["match",{"_index":46,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":508,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["mergemap",{"_index":316,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["mergemap(rout",{"_index":328,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["messag",{"_index":438,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["message.service.t",{"_index":441,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:10",{"_index":450,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:14",{"_index":446,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:25",{"_index":444,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:5",{"_index":448,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:6",{"_index":443,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["metadata",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["method",{"_index":12,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UtilService.html":{}}}],["min",{"_index":507,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["miscellan",{"_index":878,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":98,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"modules/SharedModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":362,"title":{},"body":{"modules/CoreModule.html":{}}}],["name",{"_index":24,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["nameeq",{"_index":632,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["namespac",{"_index":365,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["navig",{"_index":960,"title":{},"body":{"index.html":{}}}],["navigationcancel",{"_index":783,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["navigationend",{"_index":314,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/SpinnerComponent.html":{}}}],["navigationerror",{"_index":784,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["navigationstart",{"_index":782,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["need",{"_index":413,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":19,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["next.handle(request",{"_index":44,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["ng",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":468,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"components/NotFoundComponent.html":{}}}],["ngbmodul",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngmodul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["ngonchang",{"_index":469,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["ngondestroy",{"_index":771,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["ngoninit",{"_index":307,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["notfoundcompon",{"_index":91,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["npm",{"_index":891,"title":{},"body":{"index.html":{}}}],["null",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"classes/RouteReusableStrategy.html":{},"injectables/UtilService.html":{}}}],["number",{"_index":434,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["obj",{"_index":801,"title":{},"body":{"injectables/UtilService.html":{}}}],["obj[propnam",{"_index":803,"title":{},"body":{"injectables/UtilService.html":{}}}],["obj[propname].length",{"_index":805,"title":{},"body":{"injectables/UtilService.html":{}}}],["object",{"_index":489,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(filterobject",{"_index":281,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["object.keys(this.errorobject",{"_index":505,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["observ",{"_index":28,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["onchang",{"_index":459,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["ondestroy",{"_index":767,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["oninit",{"_index":302,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["open",{"_index":895,"title":{},"body":{"index.html":{}}}],["option",{"_index":26,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":538,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["out",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["overrid",{"_index":556,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":976,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":860,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":694,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["pageinfo",{"_index":306,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["param",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["paramet",{"_index":22,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["pass",{"_index":493,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["password",{"_index":368,"title":{},"body":{"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["passwordlastupd",{"_index":378,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["path",{"_index":630,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["payload",{"_index":199,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{}}}],["payload).pip",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{}}}],["per",{"_index":572,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["phone",{"_index":373,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["pipe",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BreadcrumbComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["pipe(catcherror(error",{"_index":409,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["place",{"_index":549,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["pleas",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":926,"title":{},"body":{"index.html":{}}}],["pointmain",{"_index":935,"title":{},"body":{"index.html":{}}}],["polyfil",{"_index":932,"title":{},"body":{"index.html":{}}}],["polyfills.t",{"_index":931,"title":{},"body":{"index.html":{}}}],["post('/logout",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["prefix",{"_index":8,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["prefix.interceptor.t",{"_index":6,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["prefix.interceptor.ts:15",{"_index":16,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["prefix.interceptor.ts:18",{"_index":21,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["preloader').fadeout",{"_index":692,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["primari",{"_index":327,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["privat",{"_index":147,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["prod",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":945,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":888,"title":{},"body":{"index.html":{}}}],["proper",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["properli",{"_index":541,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["properti",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{}}}],["propnam",{"_index":802,"title":{},"body":{"injectables/UtilService.html":{}}}],["provid",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["pwa",{"_index":949,"title":{},"body":{"index.html":{}}}],["pwa:build:dev",{"_index":948,"title":{},"body":{"index.html":{}}}],["pwa:build:loc",{"_index":951,"title":{},"body":{"index.html":{}}}],["pwa:build:prod",{"_index":950,"title":{},"body":{"index.html":{}}}],["querystr",{"_index":279,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["querystring.slice(0",{"_index":291,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["querystring[querystring.length",{"_index":289,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["re",{"_index":536,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["reactiveformsmodul",{"_index":161,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["readabl",{"_index":566,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["readcooki",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(nam",{"_index":631,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["recov",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirect",{"_index":152,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["regist",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{}}}],["reload",{"_index":962,"title":{},"body":{"index.html":{}}}],["rememb",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["removeempti",{"_index":795,"title":{},"body":{"injectables/UtilService.html":{}}}],["removeempty(obj",{"_index":799,"title":{},"body":{"injectables/UtilService.html":{}}}],["removeinterceptor",{"_index":597,"title":{},"body":{"injectables/HttpService.html":{}}}],["removeinterceptor(interceptortyp",{"_index":585,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["replac",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["replaceurl",{"_index":154,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{}}}],["request",{"_index":9,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["request(method",{"_index":580,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["request.clon",{"_index":41,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["request.url",{"_index":43,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["requir",{"_index":857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredlength",{"_index":509,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["reset",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordform",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["respons",{"_index":405,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.statu",{"_index":414,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":424,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":45,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":710,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(rout",{"_index":715,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["return",{"_index":27,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UtilService.html":{}}}],["reus",{"_index":704,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["reusabl",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["rgba(0",{"_index":775,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["root",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["rootobject",{"_index":436,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["rout",{"_index":324,"title":{},"body":{"components/BreadcrumbComponent.html":{},"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["route.data",{"_index":329,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["route.firstchild",{"_index":323,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["route.outlet",{"_index":326,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["router",{"_index":141,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["routereusablestrategi",{"_index":356,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategi",{"_index":352,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":170,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(dashboardrout",{"_index":395,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forroot(approut",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":939,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["savedcredenti",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffold",{"_index":964,"title":{},"body":{"index.html":{}}}],["script",{"_index":938,"title":{},"body":{"index.html":{}}}],["see",{"_index":542,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["seem",{"_index":695,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["selbox",{"_index":806,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.focu",{"_index":815,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.select",{"_index":816,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.style.left",{"_index":810,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.style.opac",{"_index":812,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.style.posit",{"_index":808,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.style.top",{"_index":811,"title":{},"body":{"injectables/UtilService.html":{}}}],["selbox.valu",{"_index":813,"title":{},"body":{"injectables/UtilService.html":{}}}],["selector",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["sent",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["server",{"_index":894,"title":{},"body":{"index.html":{}}}],["serverbaseurl",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":909,"title":{},"body":{"index.html":{}}}],["serviceurl",{"_index":433,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":364,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["sessionid",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sessionstorag",{"_index":607,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["set(error",{"_index":445,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredenti",{"_index":185,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credenti",{"_index":204,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(typ",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setitem",{"_index":611,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":618,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["share",{"_index":911,"title":{},"body":{"index.html":{}}}],["sharedmodul",{"_index":109,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shell",{"_index":914,"title":{},"body":{"index.html":{}}}],["shouldattach",{"_index":711,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(rout",{"_index":719,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":712,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(rout",{"_index":721,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuserout",{"_index":713,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(futur",{"_index":723,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["sign",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["signup",{"_index":186,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'nam",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["signup(payload",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup(this.signupform.valu",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":746,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":747,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcompon",{"_index":93,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":748,"title":{},"body":{"components/SignupComponent.html":{}}}],["signuppayload",{"_index":369,"title":{"interfaces/SignupPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["singl",{"_index":910,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":908,"title":{},"body":{"index.html":{}}}],["skip",{"_index":530,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["skiperrorhandl",{"_index":528,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["someth",{"_index":428,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["sound",{"_index":921,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/NotFoundComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["spec\\.t",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":562,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinnercompon",{"_index":95,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src",{"_index":906,"title":{},"body":{"index.html":{}}}],["src/.../authentication.service.t",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.t",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.t",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.t",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.service.t",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.t",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authentication/404/not",{"_index":686,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/authentication/authentication.module.t",{"_index":160,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/authentication/login/login.component.t",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/authentication/login/login.component.ts:13",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:14",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:15",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:17",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:24",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:26",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:49",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/login/login.component.ts:53",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/authentication/signup/signup.component.t",{"_index":745,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/authentication/signup/signup.component.ts:13",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/authentication/signup/signup.component.ts:14",{"_index":749,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/authentication/signup/signup.component.ts:17",{"_index":753,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/authentication/signup/signup.component.ts:24",{"_index":751,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/authentication/signup/signup.component.ts:26",{"_index":752,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/authentication/signup/signup.component.ts:47",{"_index":750,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/core/authentication/authentication.guard.t",{"_index":138,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:13",{"_index":144,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:7",{"_index":143,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.t",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:16",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:17",{"_index":192,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:29",{"_index":198,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:40",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:54",{"_index":200,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:71",{"_index":193,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:79",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:87",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:95",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/class/baseapi.class.t",{"_index":255,"title":{},"body":{"injectables/BaseAPIClass.html":{},"coverage.html":{}}}],["src/app/core/class/baseapi.class.ts:11",{"_index":271,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:39",{"_index":274,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:67",{"_index":265,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:75",{"_index":276,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:8",{"_index":263,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:83",{"_index":267,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/class/baseapi.class.ts:91",{"_index":269,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["src/app/core/constants.t",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.t",{"_index":350,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/api",{"_index":5,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["src/app/core/http/error",{"_index":396,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/http.service.t",{"_index":527,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/http.service.ts:29",{"_index":529,"title":{},"body":{"interfaces/HttpClient.html":{}}}],["src/app/core/http/http.service.ts:34",{"_index":594,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["src/app/core/http/http.service.ts:40",{"_index":595,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["src/app/core/http/http.service.ts:61",{"_index":599,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:77",{"_index":603,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:82",{"_index":602,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:90",{"_index":601,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:98",{"_index":600,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/loc",{"_index":604,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/authentication.model.t",{"_index":363,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/error.model.t",{"_index":432,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/rout",{"_index":701,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/error",{"_index":440,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.t",{"_index":788,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/service/user.service.ts:6",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/service/util.service.t",{"_index":793,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["src/app/core/service/util.service.ts:21",{"_index":798,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/core/service/util.service.ts:4",{"_index":796,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/core/service/util.service.ts:7",{"_index":800,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":391,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard/dashboard.component.t",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard/dashboard.component.ts:7",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.t",{"_index":301,"title":{},"body":{"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:13",{"_index":312,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:14",{"_index":311,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:39",{"_index":313,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/button",{"_index":333,"title":{},"body":{"components/ButtonLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/form",{"_index":456,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"coverage.html":{}}}],["src/app/shared/layouts/blank/blank.component.t",{"_index":298,"title":{},"body":{"components/BlankComponent.html":{},"coverage.html":{}}}],["src/app/shared/layouts/full/full.component.t",{"_index":518,"title":{},"body":{"components/FullComponent.html":{},"coverage.html":{}}}],["src/app/shared/layouts/full/full.component.ts:10",{"_index":523,"title":{},"body":{"components/FullComponent.html":{}}}],["src/app/shared/layouts/full/full.component.ts:12",{"_index":522,"title":{},"body":{"components/FullComponent.html":{}}}],["src/app/shared/layouts/full/full.component.ts:9",{"_index":521,"title":{},"body":{"components/FullComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":736,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/spinner.component.t",{"_index":766,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/app/shared/spinner.component.ts:28",{"_index":780,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/spinner.component.ts:31",{"_index":774,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/spinner.component.ts:55",{"_index":779,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/environments/environment.dev.t",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.t",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.t",{"_index":972,"title":{},"body":{"index.html":{}}}],["src/test.t",{"_index":855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":570,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":883,"title":{"index.html":{}},"body":{"index.html":{}}}],["startproject",{"_index":897,"title":{},"body":{"index.html":{}}}],["statement",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":567,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["statuscod",{"_index":437,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage.servic",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.t",{"_index":605,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:139",{"_index":619,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:142",{"_index":617,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:145",{"_index":615,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:148",{"_index":613,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:73",{"_index":620,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:74",{"_index":612,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":714,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(rout",{"_index":727,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategi",{"_index":359,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.t",{"_index":702,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":722,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:17",{"_index":729,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:22",{"_index":720,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:26",{"_index":717,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:30",{"_index":725,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/ButtonLoaderComponent.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":898,"title":{},"body":{"index.html":{}}}],["style",{"_index":929,"title":{},"body":{"index.html":{}}}],["styles.css",{"_index":927,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{}}}],["subscrib",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(ev",{"_index":330,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["successfulli",{"_index":203,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(httpcli",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["super(httphandl",{"_index":574,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["support",{"_index":970,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":974,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":936,"title":{},"body":{"index.html":{}}}],["templat",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{}}}],["term",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{}}}],["test",{"_index":905,"title":{},"body":{"index.html":{}}}],["test.t",{"_index":933,"title":{},"body":{"index.html":{}}}],["this._credenti",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._error",{"_index":451,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":452,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.activatedrout",{"_index":321,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.apierrormessag",{"_index":502,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.apierrortyp",{"_index":498,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.apiserviceurl",{"_index":500,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.authenticationservic",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authenticationservice.isauthent",{"_index":148,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.baseurl",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["this.control.error",{"_index":515,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.control.touch",{"_index":516,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.control.valuechanges.subscrib",{"_index":506,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.controlnam",{"_index":514,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.createform",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.credenti",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credenti",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.accesstoken",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.sess",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.errorhandler(error",{"_index":410,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errorkey",{"_index":504,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["this.errormessageservice.set",{"_index":421,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._error",{"_index":455,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.httpclient",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/${id}`).pip",{"_index":296,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httpclient.delete(`${this.baseurl}/all`).pip",{"_index":297,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httpclient.get(`${this.baseurl}${querystring}`).pip",{"_index":292,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httpclient.get(`${this.baseurl}/${id}${querystring}`).pip",{"_index":293,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httpclient.post('/login",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/signup",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post(this.baseurl",{"_index":294,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httpclient.put(`${this.baseurl}/${id",{"_index":295,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["this.httphandl",{"_index":583,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.injector",{"_index":587,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.injector.get(errorhandlerinterceptor",{"_index":576,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptor",{"_index":575,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptor.intercept(request",{"_index":554,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.concat([interceptor",{"_index":591,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.filter(i",{"_index":588,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.reduceright",{"_index":581,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.isload",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.isspinnervis",{"_index":787,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.localstorag",{"_index":636,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":641,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":639,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":640,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":638,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loginform",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.next",{"_index":555,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.pageinfo",{"_index":332,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.removeinterceptor(errorhandlerinterceptor",{"_index":577,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.resetpasswordform",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.ev",{"_index":317,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.router.events.subscrib",{"_index":786,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.router.navig",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":526,"title":{},"body":{"components/FullComponent.html":{}}}],["this.router.navigate(['/login",{"_index":153,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/SignupComponent.html":{}}}],["this.router.url",{"_index":525,"title":{},"body":{"components/FullComponent.html":{}}}],["this.sessionstorag",{"_index":637,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredenti",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(bodi",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.signupform",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.markaspristin",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.titleservice.settitle(event['titl",{"_index":331,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["throw",{"_index":430,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["titl",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{}}}],["titleservic",{"_index":310,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["todo",{"_index":492,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"components/LoginComponent.html":{}}}],["token",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["tri",{"_index":696,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["trigger",{"_index":579,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["true",{"_index":149,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":25,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types.foreach(typ",{"_index":510,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["uncom",{"_index":973,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":286,"title":{},"body":{"injectables/BaseAPIClass.html":{},"injectables/UtilService.html":{}}}],["unit",{"_index":934,"title":{},"body":{"index.html":{}}}],["up",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["updat",{"_index":262,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["update(id",{"_index":275,"title":{},"body":{"injectables/BaseAPIClass.html":{}}}],["updatedat",{"_index":382,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["url",{"_index":42,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["us",{"_index":550,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":361,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":195,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"components/SignupComponent.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usernam",{"_index":367,"title":{},"body":{"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/SignupPayload.html":{},"interfaces/User.html":{}}}],["userservic",{"_index":348,"title":{"injectables/UserService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utilservic",{"_index":349,"title":{"injectables/UtilService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/UtilService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["validators.email",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.requir",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["valu",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["variabl",{"_index":827,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":922,"title":{},"body":{"index.html":{}}}],["veri",{"_index":561,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":901,"title":{},"body":{"index.html":{}}}],["via",{"_index":955,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":781,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["viewencapsulation.non",{"_index":769,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["void",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"injectables/ErrorMessageService.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UtilService.html":{}}}],["way",{"_index":698,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["well",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["wire",{"_index":578,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["work",{"_index":540,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["workaround",{"_index":705,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["worker",{"_index":866,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["workflow",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["wrapper",{"_index":461,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper'},{'nam",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BlankComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ButtonLoaderComponent.html":{},"components/DashboardComponent.html":{},"components/FormErrorWrapperComponent.html":{},"components/FullComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SignupComponent.html":{},"components/SpinnerComponent.html":{}}}],["wrapper.compon",{"_index":743,"title":{},"body":{"modules/SharedModule.html":{}}}],["wrapper.component.html",{"_index":462,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.t",{"_index":458,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"coverage.html":{}}}],["wrapper.component.ts:17",{"_index":478,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:19",{"_index":479,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:21",{"_index":476,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:24",{"_index":477,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:26",{"_index":491,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:27",{"_index":488,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:28",{"_index":475,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:45",{"_index":487,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:47",{"_index":486,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:51",{"_index":485,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:57",{"_index":482,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper.component.ts:68",{"_index":484,"title":{},"body":{"components/FormErrorWrapperComponent.html":{}}}],["wrapper/form",{"_index":457,"title":{},"body":{"components/FormErrorWrapperComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["ye",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseAPIClass.html":{},"injectables/HttpService.html":{}}}],["zone.j",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interceptors/ApiPrefixInterceptor.html":{"url":"interceptors/ApiPrefixInterceptor.html","title":"interceptor - ApiPrefixInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiPrefixInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/api-prefix.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/api-prefix.interceptor.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/api-prefix.interceptor.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Prefixes all requests with `environment.serverUrl`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import * as $ from 'jquery';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutes } from '@app/app.routing';\nimport { AppComponent } from '@app/app.component';\nimport { CoreModule } from '@app/core';\nimport { SharedModule } from '@app/shared';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot(AppRoutes),\n    CoreModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.guard.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    console.log('Not authenticated, redirecting...');\n    this.router.navigate(['/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAuthenticationModule -->\n\nNotFoundComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthenticationModule -->\n\nSharedModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/authentication/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotFoundComponent } from '@app/authentication/404/not-found.component';\nimport { AuthenticationRoutes } from '@app/authentication/authentication.routing';\nimport { LoginComponent } from '@app/authentication/login/login.component';\nimport { SignupComponent } from '@app/authentication/signup/signup.component';\nimport { SharedModule } from '@app/shared';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbModule,\n    SharedModule,\n    RouterModule.forChild(AuthenticationRoutes)\n  ],\n  declarations: [NotFoundComponent, SignupComponent, LoginComponent]\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a base for authentication workflow.\nThe Credentials interface as well as login/logout methods should be replaced with proper implementation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Checks is the user is authenticated.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the user is authenticated.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(payload: Authentication.LoginPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    Authentication.LoginPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Logs out the user and clear credentials.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    True if the user was logged out successfully.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCredentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCredentials(credentials?: Authentication.Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Sets the user credentials.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    Authentication.Credentials\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(payload: Authentication.SignupPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    Authentication.SignupPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _credentials:     Authentication.Credentials | null\n\n                    \n                \n                    \n                        \n                            Type :     Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials$:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:79\n                                \n                            \n                    \n                        \n                                Gets the user credentials.\n\n\n                                \n                                \n                                \n                                    Returns :     Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:87\n                                \n                            \n                    \n                        \n                                Get the auth token.\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LocalStorageService } from '@app/core/local-storage.service';\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n  private _credentials: Authentication.Credentials | null;\n  public credentials$ = new EventEmitter();\n\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService\n  ) {\n    const savedCredentials = this.localStorageService.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    return this.httpClient.post('/login', payload).pipe(\n      map((body: Authentication.Credentials) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  signup(\n    payload: Authentication.SignupPayload\n  ): Observable {\n    return this.httpClient.post('/signup', payload).pipe(\n      map((body: Authentication.User) => {\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable} True if the user was logged out successfully.\n   */\n  logout(): Observable {\n    return this.httpClient\n      .post('/logout', {\n        sessionId: this.credentials.session\n      })\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Get the auth token.\n   * @return {string} The auth token is null if user is not authenticated.\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.accessToken : null;\n  }\n\n  /**\n   * Sets the user credentials.\n   * @param {Credentials=} Authentication.Credentials The user credentials.\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAPIClass.html":{"url":"injectables/BaseAPIClass.html","title":"injectable - BaseAPIClass","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseAPIClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/class/baseAPI.class.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/class/baseAPI.class.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(payload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(filterObject?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: string, filterObject?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filterObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(id: string, payload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/class/baseAPI.class.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport abstract class BaseAPIClass {\n  baseUrl: string;\n  constructor(protected httpClient: HttpClient) {}\n\n  getAll(filterObject?: any): Observable {\n    let queryString = '';\n    if (filterObject) {\n      const fitlerKeys: any[] = Object.keys(filterObject);\n      if (fitlerKeys.length > 0) {\n        queryString = '?';\n      }\n      fitlerKeys.forEach((key: any, index) => {\n        if (filterObject[key] !== undefined && filterObject[key] !== null) {\n          if (filterObject[key].toString().length) {\n            queryString += `${key}=${filterObject[key]}&`;\n          }\n        }\n      });\n      if (\n        fitlerKeys.length > 0 &&\n        queryString[queryString.length - 1] === '&'\n      ) {\n        queryString = queryString.slice(0, -1);\n      }\n    }\n    return this.httpClient.get(`${this.baseUrl}${queryString}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  getById(id: string, filterObject?: any): Observable {\n    let queryString = '';\n    if (filterObject) {\n      const fitlerKeys: any[] = Object.keys(filterObject);\n      if (fitlerKeys.length > 0) {\n        queryString = '?';\n      }\n      fitlerKeys.forEach((key: any, index) => {\n        if (filterObject[key] !== undefined && filterObject[key] !== null) {\n          if (filterObject[key].toString().length) {\n            queryString += `${key}=${filterObject[key]}&`;\n          }\n        }\n      });\n      if (\n        fitlerKeys.length > 0 &&\n        queryString[queryString.length - 1] === '&'\n      ) {\n        queryString = queryString.slice(0, -1);\n      }\n    }\n    return this.httpClient.get(`${this.baseUrl}/${id}${queryString}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  create(payload: any): Observable {\n    return this.httpClient.post(this.baseUrl, payload).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  update(id: string, payload: any): Observable {\n    return this.httpClient.put(`${this.baseUrl}/${id}`, payload).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  delete(id: string): Observable {\n    return this.httpClient.delete(`${this.baseUrl}/${id}`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n\n  deleteAll(): Observable {\n    return this.httpClient.delete(`${this.baseUrl}/all`).pipe(\n      map((body: any) => {\n        return body;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankComponent.html":{"url":"components/BlankComponent.html","title":"component - BlankComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlankComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/blank/blank.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n\n\n            \n                templateUrl\n                ./blank.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blank-layout',\n  templateUrl: './blank.component.html',\n  styleUrls: []\n})\nexport class BlankComponent {}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                styleUrls\n                breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n  @Input()\n  layout: any;\n  pageInfo: any;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title\n  ) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map(route => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        this.titleService.setTitle(event['title']);\n        this.pageInfo = event;\n      });\n  }\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonLoaderComponent.html":{"url":"components/ButtonLoaderComponent.html","title":"component - ButtonLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/button-loader/button-loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button-loader\n            \n\n            \n                styleUrls\n                button-loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./button-loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/button-loader/button-loader.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/button-loader/button-loader.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button-loader',\n  templateUrl: './button-loader.component.html',\n  styleUrls: ['./button-loader.component.css']\n})\nexport class ButtonLoaderComponent implements OnInit {\n  @Input()\n  isLoading: boolean;\n  @Input()\n  label: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n         {{label}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{label}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nCoreModule -->\n\nUtilService->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ApiPrefixInterceptor\n                            \n                            \n                                     ApiPrefixInterceptor\n                            \n                            \n                                     AuthenticationService\n                            \n                            \n                                     ErrorHandlerInterceptor\n                            \n                            \n                                     ErrorMessageService\n                            \n                            \n                                     LocalStorageService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     UtilService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService\n} from '@app/core/authentication';\nimport {\n  ApiPrefixInterceptor,\n  ErrorHandlerInterceptor,\n  HttpService\n} from '@app/core/http';\nimport { LocalStorageService } from '@app/core/local-storage.service';\nimport { RouteReusableStrategy } from '@app/core/route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  UserService,\n  UtilService\n} from '@app/core/service';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, RouterModule],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    UserService,\n    UtilService,\n    ErrorMessageService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        session\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    password: string;\n    cPassword: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard/dashboard.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  constructor() {}\n}\n\n    \n\n    \n        Dashboard!\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Dashboard!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DashboardRoutes } from '@app/dashboard/dashboard.routing';\nimport { DashboardComponent } from '@app/dashboard/dashboard/dashboard.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    NgbModule,\n    RouterModule.forChild(DashboardRoutes)\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                    ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorHandler(response: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '@app/core/local-storage.service';\nimport { ErrorMessageService } from '@app/core/service';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      // Do something with the error\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/error-message.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(error: string, type: string, serviceUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        serviceUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _errors:     ErrorModel.ErrorMessageObject[]\n\n                    \n                \n                    \n                        \n                            Type :     ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors$:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ErrorMessageService {\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n  public errors$ = new EventEmitter();\n\n  constructor() {}\n\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorWrapperComponent.html":{"url":"components/FormErrorWrapperComponent.html","title":"component - FormErrorWrapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormErrorWrapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/form-error-wrapper/form-error-wrapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-error-wrapper\n            \n\n\n\n\n            \n                templateUrl\n                ./form-error-wrapper.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiErrorMessage\n                            \n                            \n                                    Public\n                                errorKeys\n                            \n                            \n                                    Public\n                                errorObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formateError\n                            \n                            \n                                hasError\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiErrorType\n                            \n                            \n                                apiServiceUrl\n                            \n                            \n                                control\n                            \n                            \n                                controlName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                    ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiErrorType\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        apiServiceUrl\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formateError\n                            \n                            \n                        \n                    \n                \n                \n                    \nformateError(errorMessage: string, errorObj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessage\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        errorObj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiErrorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorKeys:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorObject:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : ERROR_OBJECTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/form-error-wrapper/form-error-wrapper.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  AfterViewInit\n} from '@angular/core';\nimport { ERROR_OBJECTS, ErrorMessageService } from '@app/core';\n\n@Component({\n  selector: 'app-form-error-wrapper',\n  templateUrl: './form-error-wrapper.component.html'\n})\nexport class FormErrorWrapperComponent\n  implements OnInit, OnChanges, AfterViewInit {\n  @Input()\n  public control: any;\n  @Input()\n  public controlName: string;\n  @Input()\n  public apiErrorType?: string;\n  // TODO : How to pass apiServiceUrl\n  @Input()\n  public apiServiceUrl?: string;\n\n  public errorObject: Object = ERROR_OBJECTS;\n  public errorKeys: string[];\n  public apiErrorMessage: string;\n\n  constructor(private errorMessageService: ErrorMessageService) {\n    errorMessageService.errors$.subscribe(\n      (errors: ErrorModel.ErrorMessageObject[]) => {\n        errors\n          .filter(\n            e => e.type === this.apiErrorType\n            //  && e.serviceUrl == this.apiServiceUrl\n          )\n          .map(e => {\n            this.apiErrorMessage = e.error;\n          });\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    this.errorKeys = Object.keys(this.errorObject);\n  }\n\n  ngAfterViewInit() {\n    this.control.valueChanges.subscribe(() => {\n      this.apiErrorMessage = '';\n    });\n  }\n\n  formateError(errorMessage: string, errorObj: any): string {\n    const types = ['min', 'max', 'requiredLength'];\n\n    types.forEach(type => {\n      if (!!errorObj[type]) {\n        errorMessage = errorMessage.replace(/{{value}}/g, errorObj[type]);\n      }\n    });\n    return errorMessage.replace(/{{field}}/g, this.controlName);\n  }\n\n  hasError() {\n    return (\n      (this.control.errors && this.control.touched) || this.apiErrorMessage\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{formateError(errorObject[errorKey],control.errors[errorKey])}}\n    \n  \n  \n    {{apiErrorMessage}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{formateError(errorObject[errorKey],control.errors[errorKey])}}            {{apiErrorMessage}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullComponent.html":{"url":"components/FullComponent.html","title":"component - FullComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/full/full.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-full-layout\n            \n\n            \n                styleUrls\n                full.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/full/full.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/full/full.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/full/full.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: './full.component.html',\n  styleUrls: ['./full.component.scss']\n})\nexport class FullComponent implements OnInit {\n  constructor(public router: Router) {}\n\n  ngOnInit() {\n    if (this.router.url === '/') {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n    \n    \n        \n        \n        \n        \n            \n            \n            \n            \n            \n            \n            \n            \n        \n        \n        \n        \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FullComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpClient.html":{"url":"interfaces/HttpClient.html","title":"interface - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipErrorHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Skips default error handler for this request.\n\n\n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    The new instance.\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpInterceptorHandler.html":{"url":"classes/HttpInterceptorHandler.html","title":"class - HttpInterceptorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpInterceptorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(next: HttpHandler, interceptor: HttpInterceptor)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptor\n                                                  \n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(request: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Extends HttpClient with per request configuration using dynamic interceptors.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInterceptor\n                            \n                            \n                                    Private\n                                removeInterceptor\n                            \n                            \n                                request\n                            \n                            \n                                skipErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpHandler: HttpHandler, injector: Injector, interceptors: HttpInterceptor[])\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpHandler\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptors\n                                                  \n                                                        \n                                                                    HttpInterceptor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addInterceptor(interceptor: HttpInterceptor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptor\n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeInterceptor(interceptorType: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptorType\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequest(method?: any, url?: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HttpClient\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from '@app/core/http/error-handler.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n  }\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n);\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    private httpHandler: HttpHandler,\n    private injector: Injector,\n    @Optional()\n    @Inject(HTTP_DYNAMIC_INTERCEPTORS)\n    private interceptors: HttpInterceptor[] = []\n  ) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [this.injector.get(ErrorHandlerInterceptor)];\n    }\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:74\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItem(key: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionStorage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPasswordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  resetPasswordForm: FormGroup;\n  isLoading = false;\n  constructor(\n    public router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.isLoading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n          this.isLoading = false;\n        })\n      )\n      .subscribe(\n        (credentials: Authentication.Credentials) => {\n          console.log(credentials);\n          this.router.navigate(['/'], {\n            replaceUrl: true\n          });\n        },\n        (error: any) => {\n          console.log(`Login error: ${error}`);\n        }\n      );\n  }\n\n  resetPassword() {\n    // TODO: Implement Reset Password\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required]\n    });\n    this.resetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        Sign In\n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n               Remember me \n            \n            \n              Forgot\n               Password? \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            Don't have an account?\n              \n                Sign Up\n              \n            \n          \n        \n      \n      \n        \n          \n            Recover Password\n            Enter your Email and instructions will be sent to you! \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            Reset\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Sign In                                                                                                                                                                                                               Remember me                                       Forgot               Password?                                                                                                                           Don\\'t have an account?                              Sign Up                                                                                      Recover Password            Enter your Email and instructions will be sent to you!                                                                                                 Reset                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    password: string;\n    cPassword: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/404/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/404/not-found.component.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['not-found.component.css']\n})\nexport class NotFoundComponent implements AfterViewInit {\n  ngAfterViewInit() {\n    $(function() {\n      $('.preloader').fadeOut();\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        404\n        Page Not Found !\n        YOU SEEM TO BE TRYING TO FIND HIS WAY HOME\n        Back to home \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            404        Page Not Found !        YOU SEEM TO BE TRYING TO FIND HIS WAY HOME        Back to home '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                    RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DetachedRouteHandle | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldAttach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldAttach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldDetach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldDetach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReuseRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        future\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        curr\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        detachedTree\n                                                        \n                                                                    DetachedRouteHandle | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nBlankComponent\n\nBlankComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBlankComponent->SharedModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nSharedModule -->\n\nBreadcrumbComponent->SharedModule\n\n\n\n\n\nButtonLoaderComponent\n\nButtonLoaderComponent\n\nSharedModule -->\n\nButtonLoaderComponent->SharedModule\n\n\n\n\n\nFormErrorWrapperComponent\n\nFormErrorWrapperComponent\n\nSharedModule -->\n\nFormErrorWrapperComponent->SharedModule\n\n\n\n\n\nFullComponent\n\nFullComponent\n\nSharedModule -->\n\nFullComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nBlankComponent \n\nBlankComponent \n\nBlankComponent  -->\n\nSharedModule->BlankComponent \n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nSharedModule->BreadcrumbComponent \n\n\n\n\n\nButtonLoaderComponent \n\nButtonLoaderComponent \n\nButtonLoaderComponent  -->\n\nSharedModule->ButtonLoaderComponent \n\n\n\n\n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent  -->\n\nSharedModule->FormErrorWrapperComponent \n\n\n\n\n\nFullComponent \n\nFullComponent \n\nFullComponent  -->\n\nSharedModule->FullComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BlankComponent\n                            \n                            \n                                BreadcrumbComponent\n                            \n                            \n                                ButtonLoaderComponent\n                            \n                            \n                                FormErrorWrapperComponent\n                            \n                            \n                                FullComponent\n                            \n                            \n                                SpinnerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BlankComponent\n                            \n                            \n                                    BreadcrumbComponent\n                            \n                            \n                                    ButtonLoaderComponent\n                            \n                            \n                                    FormErrorWrapperComponent\n                            \n                            \n                                    FullComponent\n                            \n                            \n                                    SpinnerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbComponent } from '@app/shared/breadcrumb/breadcrumb.component';\nimport { BlankComponent } from '@app/shared/layouts/blank/blank.component';\nimport { FullComponent } from '@app/shared/layouts/full/full.component';\nimport { SpinnerComponent } from '@app/shared/spinner.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ButtonLoaderComponent } from '@app/shared/button-loader';\nimport { FormErrorWrapperComponent } from '@app/shared/form-error-wrapper/form-error-wrapper.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    NgbModule.forRoot(),\n    ReactiveFormsModule\n  ],\n  declarations: [\n    SpinnerComponent,\n    BreadcrumbComponent,\n    BlankComponent,\n    FullComponent,\n    ButtonLoaderComponent,\n    FormErrorWrapperComponent\n  ],\n  exports: [\n    SpinnerComponent,\n    BreadcrumbComponent,\n    BlankComponent,\n    FullComponent,\n    ButtonLoaderComponent,\n    FormErrorWrapperComponent\n  ],\n  entryComponents: [],\n  providers: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authentication/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authentication/signup/signup.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signupForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authentication/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/core';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  isLoading = false;\n\n  constructor(\n    public router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {}\n\n  signup() {\n    this.isLoading = true;\n    this.authenticationService\n      .signup(this.signupForm.value)\n      .pipe(\n        finalize(() => {\n          this.signupForm.markAsPristine();\n          this.isLoading = false;\n        })\n      )\n      .subscribe(\n        (user: Authentication.User) => {\n          console.log(user);\n          this.router.navigate(['/login']);\n        },\n        (error: any) => {\n          console.log(`Signup error: ${error}`);\n        }\n      );\n  }\n\n  private createForm() {\n    this.signupForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      password: ['', Validators.required],\n      cPassword: ['', Validators.required]\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        Register Now\n        Create your account and enjoy\n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            \n              \n               I agree to all\n                Terms\n              \n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n        \n          \n            Already have an account?\n              \n                Sign In\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register Now        Create your account and enjoyagree to all                Terms                                                                                                                                                    Already have an account?                              Sign In                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupPayload.html":{"url":"interfaces/SignupPayload.html","title":"interface - SignupPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignupPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        phone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cPassword\n                                    \n                                \n                                \n                                    \n                                        cPassword:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    password: string;\n    cPassword: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n            \n                template\n                        \n          \n          \n        \n    \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSpinnerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/spinner.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backgroundColor\n                    \n                    \n                        \n                            Default value : 'rgba(0, 115, 170, 0.69)'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSpinnerVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isSpinnerVisible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/spinner.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnDestroy,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  Router,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `\n        \n          \n          \n        \n    `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlankComponent', 'selector': 'app-blank-layout'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ButtonLoaderComponent', 'selector': 'app-button-loader'},{'name': 'DashboardComponent', 'selector': ''},{'name': 'FormErrorWrapperComponent', 'selector': 'app-form-error-wrapper'},{'name': 'FullComponent', 'selector': 'app-full-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        emailHash\n                                \n                                \n                                        emailVerified\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastLogin\n                                \n                                \n                                        lastName\n                                \n                                \n                                            Optional\n                                        passwordLastUpdated\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailHash\n                                    \n                                \n                                \n                                    \n                                        emailHash:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerified\n                                    \n                                \n                                \n                                    \n                                        emailVerified:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordLastUpdated\n                                    \n                                \n                                \n                                    \n                                        passwordLastUpdated:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  export interface SignupPayload {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    password: string;\n    cPassword: string;\n  }\n\n  export interface User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailVerified: boolean;\n    emailHash: string;\n    passwordLastUpdated?: any;\n    lastLogin: Date;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  export interface Credentials {\n    user: User;\n    accessToken: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/user.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseAPIClass } from '@app/core/class/baseAPI.class';\n\n@Injectable()\nexport class UserService extends BaseAPIClass {\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient);\n    this.baseUrl = '/user';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/util.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                            \n                                removeEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/util.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyToClipboard(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/util.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveEmpty(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/service/util.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilService {\n  constructor() {}\n\n  removeEmpty(obj: any): any {\n    for (const propName in obj) {\n      if (\n        obj[propName] === null ||\n        obj[propName] === undefined ||\n        obj[propName] === '' ||\n        (Array.isArray(obj[propName]) && !obj[propName].length)\n      ) {\n        delete obj[propName];\n      }\n    }\n    return obj;\n  }\n\n  copyToClipboard(value: string) {\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = value;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authentication/404/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/authentication/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            \n                variable\n            \n            \n                credentialsKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/class/baseAPI.class.ts\n            \n            \n                injectable\n            \n            \n                BaseAPIClass\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/constants.ts\n            \n            \n                variable\n            \n            \n                API_ENDPOINT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/constants.ts\n            \n            \n                variable\n            \n            \n                ERROR_OBJECTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            \n                variable\n            \n            \n                credentialsKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                class\n            \n            \n                HttpInterceptorHandler\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                interface\n            \n            \n                HttpClient\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/http/http.service.ts\n            \n            \n                variable\n            \n            \n                HTTP_DYNAMIC_INTERCEPTORS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                injectable\n            \n            \n                LocalStorageService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                clearData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                createCookie\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                getData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                getSessionName\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                readCookie\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            \n                function\n            \n            \n                setData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                LoginPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                SignupPayload\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            \n                interface\n            \n            \n                ErrorMessageObject\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            \n                interface\n            \n            \n                RootObject\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            \n                class\n            \n            \n                RouteReusableStrategy\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorMessageService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/service/util.service.ts\n            \n            \n                injectable\n            \n            \n                UtilService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/breadcrumb/breadcrumb.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/button-loader/button-loader.component.ts\n            \n            \n                component\n            \n            \n                ButtonLoaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/form-error-wrapper/form-error-wrapper.component.ts\n            \n            \n                component\n            \n            \n                FormErrorWrapperComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/layouts/blank/blank.component.ts\n            \n            \n                component\n            \n            \n                BlankComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/layouts/full/full.component.ts\n            \n            \n                component\n            \n            \n                FullComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/spinner.component.ts\n            \n            \n                component\n            \n            \n                SpinnerComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @angular/service-worker : ^7.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^3.1.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.3.1\n        \n            luxon : ^1.3.3\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearData\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearData(type: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCookie\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCookie(name: any, value: any, days: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        days\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData(type: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSessionName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSessionName()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readCookie\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadCookie(name: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetData(type: any, data: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular 7 Boilerplate\n\nGo to project folder and install dependencies:\n\nnpm install\nLaunch development server, and open localhost:4200 in your browser:\n\nnpm startProject structure\ndist/                        compiled version\ndocumentation/               generated document source\ne2e/                         end-to-end tests\nsrc/                         project source code\n|- app/                      app components\n|  |- core/                  core module (singleton services and single-use components)\n|  |- shared/                shared module  (common components, directives and pipes)\n|  |- app.component.*        app root component (shell)\n|  |- app.module.ts          app root module definition\n|  |- app.routing.ts         app routes\n|  +- ...                    additional modules and components\n|- assets/                   app assets (images, fonts, sounds...)\n|- environments/             values for various build environments\n|- index.html                html entry point\n|- styles.css                global style entry point\n|- main.ts                   app entry point\n|- polyfills.ts              polyfills needed by Angular\n+- test.ts                   unit tests entry pointMain tasks\nTask automation is based on NPM scripts.\n\n\n\nTasks\nDescription\n\n\n\n\nnpm start\nRun development server on http://localhost:4200/\n\n\nnpm run build:dev\nLint code and build app for development env in dist/ folder\n\n\nnpm run build:prod\nLint code and build app for production env in dist/ folder\n\n\nnpm run build:local\nLint code and build app for local env in dist/ folder\n\n\nnpm run pwa:build:dev\nLint code and build PWA app for development env in dist/ folder\n\n\nnpm run pwa:build:prod\nLint code and build PWA app for production env in dist/ folder\n\n\nnpm run pwa:build:local\nLint code and build PWA app for local env in dist/ folder\n\n\nnpm run lint\nLint code\n\n\nnpm run compodoc:gen\nGenerate Project document in ./documentation folder\n\n\nnpm run compodoc:serve\nYou can access ./documentation folder via http://localhost:8080\n\n\nnpm run compodoc\nIt generate latest ./documentation and you can access via http://localhost:8080\n\n\n\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change\nany of the source files.\nCode scaffolding\nRun npm run generate -- component  to generate a new component. You can also use\nnpm run generate -- directive|pipe|service|class|module.\nIf you have installed angular-cli globally with npm install -g @angular/cli,\nyou can also use the command ng generate directly.\nPWA Service worker support\nTo enalbe service worker go to src/main.ts and uncomment service worker code.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nSharedModule->AuthenticationModule\n\n\n\n\n\nBlankComponent \n\nBlankComponent \n\nBlankComponent  -->\n\nSharedModule->BlankComponent \n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nSharedModule->BreadcrumbComponent \n\n\n\n\n\nButtonLoaderComponent \n\nButtonLoaderComponent \n\nButtonLoaderComponent  -->\n\nSharedModule->ButtonLoaderComponent \n\n\n\n\n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent \n\nFormErrorWrapperComponent  -->\n\nSharedModule->FormErrorWrapperComponent \n\n\n\n\n\nFullComponent \n\nFullComponent \n\nFullComponent  -->\n\nSharedModule->FullComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationModule -->\n\nLoginComponent->AuthenticationModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAuthenticationModule -->\n\nNotFoundComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nUserService\n\nUserService\n\nCoreModule -->\n\nUserService->CoreModule\n\n\n\n\n\nUtilService\n\nUtilService\n\nCoreModule -->\n\nUtilService->CoreModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nBlankComponent\n\nBlankComponent\n\nSharedModule -->\n\nBlankComponent->SharedModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nSharedModule -->\n\nBreadcrumbComponent->SharedModule\n\n\n\n\n\nButtonLoaderComponent\n\nButtonLoaderComponent\n\nSharedModule -->\n\nButtonLoaderComponent->SharedModule\n\n\n\n\n\nFormErrorWrapperComponent\n\nFormErrorWrapperComponent\n\nSharedModule -->\n\nFormErrorWrapperComponent->SharedModule\n\n\n\n\n\nFullComponent\n\nFullComponent\n\nSharedModule -->\n\nFullComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_ENDPOINT   (src/.../constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            ERROR_OBJECTS   (src/.../constants.ts)\n                        \n                        \n                            HTTP_DYNAMIC_INTERCEPTORS   (src/.../http.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_ENDPOINT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_ENDPOINT:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ERROR_OBJECTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ERROR_OBJECTS:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  required: '{{field}} is required',\n  email: 'Please enter valid email'\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentialsKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentialsKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'http://localhost:1355',\n  serverUrl: 'http://localhost:1355/v1'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'http://development.com',\n  serverUrl: 'http://development.com/v1'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false,\n  serverBaseUrl: 'http://localhost',\n  serverUrl: 'http://localhost/v1'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'http://productionurl.com',\n  serverUrl: 'http://productionurl.com'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_DYNAMIC_INTERCEPTORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_DYNAMIC_INTERCEPTORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'HTTP_DYNAMIC_INTERCEPTORS'\n)\n                        \n                    \n\n                \n                    \n                        Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\nExcept for very specific needs, you should better configure these interceptors directly in the constructor below\nfor better readability.\nFor static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\nHTTP_INTERCEPTORS token.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
